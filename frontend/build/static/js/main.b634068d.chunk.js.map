{"version":3,"sources":["store/hero/actions/index.tsx","store/hero/reducer/index.tsx","services/equipment.tsx","store/equipment/actions/index.tsx","store/equipment/reducer/index.tsx","store/index.tsx","services/highscores.tsx","components/Highscores.tsx","components/Home.tsx","components/Equipment.tsx","components/HeroStats.tsx","components/Hero.tsx","components/EquipmentForSale.tsx","components/EquipmentShop.tsx","components/DragonStats.tsx","components/GameOver.tsx","components/GameWin.tsx","components/LifeBar.tsx","components/Battlefield.tsx","routes/Routes.tsx","App.tsx","index.tsx"],"names":["CREATE_HERO","BUY_EQUIPMENT","WIN_GOLD","LOSE_GOLD","GAME_OVER","GAIN_LIFE","LOSE_LIFE","EVERY_EQUIPMENT_COLLECTED","INCREMENT_ROUNDS_FOUGHT","initialState","name","gold","life","attack","defense","maxHit","everyEquipmentCollected","roundsFought","equipment","heroReducer","state","arguments","length","undefined","action","type","Object","objectSpread","stats","map","stat","title","toLowerCase","points","price","concat","goldAmount","newGoldAmount","lifeAmount","newLifeAmount","baseUrl","services_equipment","getEquipment","axios","get","then","res","data","getRandomEquipment","getXEquipment","amount","FETCH_EQUIPMENT","fetchEquipmentSuccess","compare","a","b","id","equipmentReducer","rootReducer","combineReducers","services_highscores","getTopTenOrdered","sort","slice","newHighscore","highscore","post","Highscores","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","highscores","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","highscoreService","sent","setState","stop","apply","react_default","createElement","className","React","Component","Home","components_Highscores","Equipment","src","imageUrl","alt","HeroStats","_this$props","connect","Hero","handleNameChange","event","currentTarget","createHero","nameRequiredWarning","htmlFor","onChange","autoFocus","onClick","components_HeroStats","components_Equipment","dispatch","EquipmentForSale","_getPrototypeOf2","_len","args","Array","_key","buyEquipment","_this2","herosEquipment","includes","disabled","EquipmentShop","_ref","components_EquipmentForSale","DragonStats","GameOver","LifeBar","lifeBarStyles","width","style","fightOn","fightOver","hitAmount","Battlefield","startFight","herosLife","dragonsLife","herosHit","dragonsHit","incrementRoundsFought","fight","_callee2","_context2","battleOver","dealDamage","wait","ms","Promise","setTimeout","animation","elementId","transformParams1","transformParams2","element","document","getElementById","animate","transform","duration","iterations","_callee3","_context3","Math","floor","random","maxHitForHero","t0","t1","maxHitForDragon","t2","t3","_callee4","heroWon","_context4","showWinner","battleWon","battleLost","_callee5","_context5","winGold","gameWin","winAmount","loseAmount","gameOver","loseGold","_callee6","_context6","_callee7","_context7","extraHitForGreenDragon","GameWin","components_GameOver","components_LifeBar","components_DragonStats","Routes","react_router_dom","to","react_router","path","exact","component","App","fetchEquipment","routes_Routes","equipmentService","abrupt","_x","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App"],"mappings":"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","file":"static/js/main.b634068d.chunk.js","sourcesContent":["import { EquipmentType } from '../../equipment/types';\r\n\r\nexport const CREATE_HERO = 'CREATE_HERO';\r\nexport const BUY_EQUIPMENT = 'BUY_EQUIPMENT';\r\nexport const WIN_GOLD = 'WIN_GOLD';\r\nexport const LOSE_GOLD = 'LOSE_GOLD';\r\nexport const GAME_OVER = 'GAME_OVER';\r\nexport const GAIN_LIFE = 'GAIN_LIFE';\r\nexport const LOSE_LIFE = 'LOSE_LIFE';\r\nexport const EVERY_EQUIPMENT_COLLECTED = 'EVERY_EQUIPMENT_COLLECTED';\r\nexport const INCREMENT_ROUNDS_FOUGHT = 'INCREMENT_ROUNDS_FOUGHT';\r\n\r\nexport const createHero = (name: string) => {\r\n  return {\r\n    type: CREATE_HERO,\r\n    name\r\n  };\r\n};\r\n\r\nexport const buyEquipment = (equipment: EquipmentType) => {\r\n  return {\r\n    type: BUY_EQUIPMENT,\r\n    equipment\r\n  };\r\n};\r\n\r\nexport const winGold = (amount: number) => {\r\n  return {\r\n    type: WIN_GOLD,\r\n    goldAmount: amount\r\n  };\r\n};\r\n\r\nexport const loseGold = (amount: number) => {\r\n  return {\r\n    type: LOSE_GOLD,\r\n    goldAmount: amount\r\n  };\r\n};\r\n\r\nexport const gainLife = (amount: number) => {\r\n  return {\r\n    type: GAIN_LIFE,\r\n    lifeAmount: amount\r\n  };\r\n};\r\n\r\nexport const loseLife = (amount: number) => {\r\n  return {\r\n    type: LOSE_LIFE,\r\n    lifeAmount: amount\r\n  };\r\n};\r\n\r\nexport const gameOver = () => {\r\n  return {\r\n    type: GAME_OVER\r\n  }\r\n}\r\n\r\nexport const everyEquipmentCollected = () => {\r\n  return {\r\n    type: EVERY_EQUIPMENT_COLLECTED\r\n  }\r\n}\r\n\r\nexport const incrementRoundsFought = () => {\r\n  return {\r\n    type: INCREMENT_ROUNDS_FOUGHT\r\n  }\r\n}","import {\r\n  CREATE_HERO,\r\n  BUY_EQUIPMENT,\r\n  WIN_GOLD,\r\n  LOSE_GOLD,\r\n  GAME_OVER,\r\n  GAIN_LIFE,\r\n  LOSE_LIFE,\r\n  EVERY_EQUIPMENT_COLLECTED,\r\n  INCREMENT_ROUNDS_FOUGHT\r\n} from '../actions';\r\nimport { EquipmentType } from '../../equipment/types';\r\nimport { HeroType } from '../types';\r\n\r\nconst initialState: HeroType = {\r\n  name: '',\r\n  gold: 0,\r\n  life: 0,\r\n  attack: 0,\r\n  defense: 0,\r\n  maxHit: 30,\r\n  everyEquipmentCollected: false,\r\n  roundsFought: 0,\r\n  equipment: []\r\n};\r\n\r\nexport function heroReducer(\r\n  state = initialState,\r\n  action: { type: string, name: string, goldAmount: number, lifeAmount: number, equipment: EquipmentType }) {\r\n    switch (action.type) {\r\n      case CREATE_HERO:\r\n        return {\r\n          ...state,\r\n          gold: 10,\r\n          life: 100,\r\n          name: action.name\r\n        };\r\n      case BUY_EQUIPMENT:\r\n        let attack = 0;\r\n        let defense = 0;\r\n        action.equipment.stats.map(stat => {\r\n          if (stat.title.toLowerCase() === 'attack') {\r\n            attack = stat.points\r\n          } else if (stat.title.toLowerCase() === 'defense') {\r\n            defense = stat.points\r\n          }\r\n          return null;\r\n        });\r\n        return {\r\n          ...state,\r\n          gold: state.gold - action.equipment.price,\r\n          attack: state.attack + attack,\r\n          defense: state.defense + defense,\r\n          maxHit: state.maxHit + attack,\r\n          equipment: state.equipment.concat(action.equipment)\r\n        };\r\n      case WIN_GOLD:\r\n        return {\r\n          ...state,\r\n          gold: state.gold + action.goldAmount\r\n        };\r\n      case LOSE_GOLD:\r\n        let newGoldAmount = state.gold - action.goldAmount;\r\n        if (newGoldAmount < 0) {\r\n          newGoldAmount = 0;\r\n        }\r\n        return {\r\n          ...state,\r\n          gold: newGoldAmount\r\n        };\r\n      case GAIN_LIFE:\r\n        return {\r\n          ...state,\r\n          life: state.life + action.lifeAmount\r\n        };\r\n      case LOSE_LIFE:\r\n        let newLifeAmount = state.life - action.lifeAmount;\r\n        if (newLifeAmount < 0) {\r\n          newLifeAmount = 0;\r\n        }\r\n        return {\r\n          ...state,\r\n          life: newLifeAmount\r\n        };\r\n      case INCREMENT_ROUNDS_FOUGHT:\r\n        return {\r\n          ...state,\r\n          roundsFought: state.roundsFought + 1\r\n        }\r\n      case EVERY_EQUIPMENT_COLLECTED:\r\n        return {\r\n          ...state,\r\n          everyEquipmentCollected: true\r\n        }\r\n      case GAME_OVER:\r\n        return {\r\n          name: '',\r\n          gold: 0,\r\n          life: 0,\r\n          attack: 0,\r\n          defense: 0,\r\n          maxHit: 30,\r\n          everyEquipmentCollected: false,\r\n          roundsFought: 0,\r\n          equipment: []\r\n        };\r\n      default:\r\n        return state;\r\n    };\r\n};\r\n\r\nexport default heroReducer;","import axios from 'axios';\r\nconst baseUrl: string = '/api/equipment';\r\n\r\nconst getEquipment = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(res => { return res.data });\r\n};\r\n\r\nconst getRandomEquipment = () => {\r\n  const request = axios.get(`${baseUrl}/random`);\r\n  return request.then(res => { return res.data });\r\n};\r\n\r\nconst getXEquipment = (amount: number) => {\r\n  const request = axios.get(`${baseUrl}/amount/${amount}`);\r\n  return request.then(res => { return res.data });\r\n};\r\n\r\nexport default {\r\n  getEquipment,\r\n  getRandomEquipment,\r\n  getXEquipment\r\n};","import { EquipmentType } from '../../equipment/types';\r\nimport equipmentService from '../../../services/equipment';\r\nimport { Dispatch } from 'react';\r\n\r\nexport const FETCH_EQUIPMENT = 'FETCH_EQUIPMENT';\r\n\r\nexport function fetchEquipment() {\r\n  return async (dispatch: Dispatch<any>) => {\r\n    const res = await equipmentService.getEquipment();\r\n    dispatch(fetchEquipmentSuccess(res.equipment.sort(compare)));\r\n    return res;\r\n  }\r\n};\r\n\r\nexport const fetchEquipmentSuccess = (equipment: EquipmentType[]) => ({\r\n  type: FETCH_EQUIPMENT,\r\n  equipment\r\n});\r\n\r\nfunction compare(a: any, b: any) {\r\n  return a.id - b.id;\r\n}","import {\r\n  FETCH_EQUIPMENT\r\n} from '../actions';\r\nimport { EquipmentType } from '../../equipment/types';\r\n\r\ninterface State {\r\n  equipment?: EquipmentType[];\r\n}\r\n\r\nconst initialState: State = {\r\n  equipment: []\r\n};\r\n\r\nexport function equipmentReducer(\r\n  state = initialState,\r\n  action: { type: string, equipment?: EquipmentType[] }) {\r\n    switch (action.type) {\r\n      case FETCH_EQUIPMENT:\r\n        return {\r\n          equipment: action.equipment\r\n        };\r\n      default:\r\n        return state;\r\n    };\r\n};\r\n\r\nexport default equipmentReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport heroReducer from './hero/reducer';\r\nimport equipmentReducer from './equipment/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  heroReducer: heroReducer,\r\n  equipmentReducer: equipmentReducer\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n  );\r\n\r\n  return store;\r\n};","import axios from 'axios';\r\nconst baseUrl: string = '/api/highscores';\r\n\r\nconst getTopTenOrdered = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(res => {\r\n    return res.data.sort(compare).slice(0, 10);\r\n  });\r\n};\r\n\r\nconst newHighscore = (highscore: Object) => {\r\n  const request = axios.post(baseUrl, highscore);\r\n  return request.then(res => { return res.data });\r\n};\r\n\r\nfunction compare(a: any, b: any) {\r\n  return a.roundsFought - b.roundsFought || b.gold - a.gold;\r\n}\r\n\r\nexport default {\r\n  getTopTenOrdered,\r\n  newHighscore\r\n};","import React from 'react';\r\nimport highscoreService from '../services/highscores';\r\n\r\ninterface Highscore {\r\n  id: string;\r\n  name: string;\r\n  roundsFought: number;\r\n  gold: number;\r\n};\r\n\r\ninterface HighscoresState {\r\n  highscores: Highscore[];\r\n};\r\n\r\nexport class Highscores extends React.Component<any, HighscoresState> {\r\n  constructor(props: HighscoresState) {\r\n    super(props);\r\n    this.state = {\r\n      highscores: []\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const highscores = await highscoreService.getTopTenOrdered();\r\n    await this.setState({ highscores });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"highscores\">\r\n        <h3>Highscores</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th className=\"center-column\">Rounds</th>\r\n              <th>Gold</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {this.state.highscores.map(highscore => (\r\n            <tr key={highscore.id}>\r\n              {highscore.name.length > 15\r\n              ? <td>{highscore.name.slice(0, 15)}</td>\r\n              : <td>{highscore.name}</td>\r\n              }\r\n              <td className=\"center-column\">{highscore.roundsFought}</td>\r\n              <td>{highscore.gold}</td>\r\n            </tr>\r\n          ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Highscores;","import React from 'react';\r\nimport HighScores from './Highscores';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <h1>DragonLand</h1>\r\n      <div className=\"home-introduction\">\r\n        <span className=\"home-introduction-1\">Create a hero,</span>\r\n        <span className=\"home-introduction-2\">equip yourself,</span>\r\n        <span className=\"home-introduction-3\">slay the dragons!</span>\r\n      </div>\r\n      <div className=\"home-info\">\r\n        <span>Your quest is to vanquish the dragons with as few fought rounds as possible.</span><br />\r\n        <span>Green Dragon, the final boss, appears when you have collected all the equipment.</span><br />\r\n        <span>Losing all your money or getting crushed by the Green Dragon ends the game.</span><br />\r\n        <span>Winning a fight earns you 3 gold, getting defeated makes you lose 2 gold.</span><br />\r\n      </div>\r\n      <HighScores />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { EquipmentType } from '../store/equipment/types';\r\n\r\ninterface EquipmentProps {\r\n  equipment: EquipmentType;\r\n}\r\n\r\nconst Equipment = (props: EquipmentProps) => {\r\n  return (\r\n    <div className=\"equipment\">\r\n      <p>{props.equipment.title}</p>\r\n      {props.equipment.stats.map(stat => {\r\n        return (\r\n          <div key={stat.title}>\r\n            {stat.title + \": +\" + stat.points}\r\n          </div>\r\n        );\r\n      })}\r\n      <img src={props.equipment.imageUrl} alt={props.equipment.title} className=\"equipment-img\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Equipment;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface HeroStatsProps {\r\n  gold: number;\r\n  attack: number;\r\n  defense: number;\r\n  maxHit: number;\r\n  roundsFought: number;\r\n}\r\n\r\ninterface HeroStatsState {\r\n  heroReducer: {\r\n    gold: number;\r\n    attack: number;\r\n    defense: number;\r\n    maxHit: number;\r\n    roundsFought: number;\r\n  }\r\n}\r\n\r\nexport class HeroStats extends React.Component<HeroStatsProps, HeroStatsState> {\r\n  render() {\r\n    let { attack, defense, maxHit, roundsFought, gold } = this.props;\r\n\r\n    return (\r\n      <div className=\"hero-stats\">\r\n        <p>\r\n          <span className=\"left-column\">Rounds fought:</span>\r\n          <span className=\"right-column\">{roundsFought}</span>\r\n        </p>\r\n        <p>\r\n          <span className=\"left-column\">Gold:</span>\r\n          <span className=\"right-column\">{gold}</span>\r\n        </p>\r\n        <p>\r\n          <span className=\"left-column\">Attack:</span>\r\n          <span className=\"right-column\">{attack}</span>\r\n        </p>\r\n        <p>\r\n          <span className=\"left-column\">Defense:</span>\r\n          <span className=\"right-column\">{defense}</span>\r\n        </p>\r\n        <p>\r\n          <span className=\"left-column\">Max hit:</span>\r\n          <span className=\"right-column\">{maxHit}</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: HeroStatsState) => ({\r\n  gold: state.heroReducer.gold,\r\n  attack: state.heroReducer.attack,\r\n  defense: state.heroReducer.defense,\r\n  maxHit: state.heroReducer.maxHit,\r\n  roundsFought: state.heroReducer.roundsFought\r\n});\r\n\r\nexport default connect(mapStateToProps)(HeroStats);","import React, { Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Equipment from './Equipment';\r\nimport HeroStats from './HeroStats';\r\nimport { EquipmentType } from '../store/equipment/types';\r\nimport { createHero } from '../store/hero/actions';\r\n\r\ninterface HeroProps {\r\n  name: string;\r\n  equipment: EquipmentType[];\r\n  createHero: (name: string) => void;\r\n}\r\n\r\ninterface HeroState {\r\n  heroReducer: {\r\n    name: string;\r\n    equipment: EquipmentType[]\r\n  }\r\n}\r\n\r\ninterface DispatchProps {\r\n  createHero: (name: string) => void;\r\n}\r\n\r\ntype createHeroParam = React.SyntheticEvent<{ value: string }>;\r\n\r\nexport class Hero extends React.Component<HeroProps, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      nameRequiredWarning: false\r\n    }\r\n  }\r\n\r\n  handleNameChange = (event: createHeroParam) => {\r\n    this.setState({\r\n      name: event.currentTarget.value\r\n    })\r\n  }\r\n\r\n  createHero = () => {\r\n    if (this.state.name.length > 0 && this.state.name.length < 16) {\r\n      this.props.createHero(this.state.name);\r\n    } else {\r\n      this.setState({ nameRequiredWarning: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, equipment } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {name.length === 0 ?\r\n          <div className=\"hero-form\">\r\n            <h3>Create a hero</h3>\r\n            {this.state.nameRequiredWarning\r\n            ? <div className=\"name-required-warning\"><p>Name has to be 1-15 characters</p></div>\r\n            : null}\r\n            <label htmlFor=\"input-name\">Name:</label>\r\n            <input type=\"text\" id=\"input-name\" onChange={this.handleNameChange} autoFocus />\r\n            <button className=\"button create-hero-btn\" onClick={this.createHero}>Create</button>\r\n          </div>\r\n        : null}\r\n\r\n        {name && name.length > 0\r\n        ?\r\n          <div className=\"hero-info\">\r\n            <h3>{name}</h3>\r\n            <HeroStats />\r\n            <h3>Equipments:</h3>\r\n            {equipment && equipment.length > 0\r\n            ?\r\n              <div className=\"grid-container\">\r\n                {equipment.map(equipment => (\r\n                  <div className=\"grid-item\" key={equipment.id}>\r\n                    <Equipment equipment={equipment} key={equipment.id} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            : null}\r\n          </div>\r\n        : null}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: HeroState) => ({\r\n  name: state.heroReducer.name,\r\n  equipment: state.heroReducer.equipment\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  createHero: (name: string) => dispatch(createHero(name))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Hero);","import React, { Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { EquipmentType } from '../store/equipment/types';\r\nimport { buyEquipment } from '../store/hero/actions';\r\n\r\ninterface EquipmentForSaleProps {\r\n  gold: number;\r\n  herosEquipment: EquipmentType[];\r\n  equipment: EquipmentType;\r\n  buyEquipment: (equipment: EquipmentType) => void;\r\n}\r\n\r\ninterface EquipmentForSaleState {\r\n  heroReducer: {\r\n    gold: number;\r\n    equipment: EquipmentType[];\r\n  }\r\n}\r\n\r\ninterface DispatchProps {\r\n  buyEquipment: (equipment: EquipmentType) => void;\r\n}\r\n\r\nexport class EquipmentForSale extends React.Component<EquipmentForSaleProps, EquipmentForSaleState> {\r\n  buyEquipment = (equipment: EquipmentType) => {\r\n    this.props.buyEquipment(equipment);\r\n  }\r\n\r\n  render() {\r\n    const { gold, herosEquipment } = this.props;\r\n    return (\r\n      <div className=\"equipment-for-sale\">\r\n        <p>{this.props.equipment.title}</p>\r\n\r\n        {this.props.equipment.stats.map(stat => {\r\n          return (\r\n            <div key={stat.title}>\r\n              {stat.title + \": +\" + stat.points}\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <p>Price: {this.props.equipment.price}</p>\r\n        <img src={this.props.equipment.imageUrl} alt={this.props.equipment.title} className=\"equipment-img equipment-for-sale-img\" />\r\n        {gold >= this.props.equipment.price && !herosEquipment.includes(this.props.equipment)\r\n        ?\r\n          <button onClick={() => this.buyEquipment(this.props.equipment)} className=\"button buy-equipment-btn\">Buy</button>\r\n        :\r\n          herosEquipment.includes(this.props.equipment)\r\n          ? <button disabled className=\"button buy-equipment-btn owned\">Owned</button>\r\n          : <button disabled className=\"button buy-equipment-btn no-gold\">No gold</button>\r\n        }\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: EquipmentForSaleState) => ({\r\n  gold: state.heroReducer.gold,\r\n  herosEquipment: state.heroReducer.equipment\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  buyEquipment: (equipment: EquipmentType) => dispatch(buyEquipment(equipment))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EquipmentForSale);","import React, { Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport EquipmentForSale from './EquipmentForSale';\r\nimport { EquipmentType } from '../store/equipment/types';\r\nimport { everyEquipmentCollected } from '../store/hero/actions';\r\n\r\ninterface EquipmentShopProps {\r\n  equipment: EquipmentType[];\r\n  herosEquipment: EquipmentType[];\r\n  gold: number;\r\n  everyEquipmentCollected: () => void;\r\n}\r\n\r\ninterface EquipmentShopState {\r\n  equipmentReducer: {\r\n    equipment: EquipmentType[];\r\n  },\r\n  heroReducer: {\r\n    gold: number;\r\n    equipment: EquipmentType[];\r\n  }\r\n}\r\n\r\ninterface DispatchProps {\r\n  everyEquipmentCollected: () => void;\r\n}\r\n\r\nclass EquipmentShop extends React.Component<EquipmentShopProps, EquipmentShopState> {\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.herosEquipment.length === this.props.equipment.length) {\r\n      this.everyEquipmentCollected();\r\n    }\r\n  }\r\n\r\n  everyEquipmentCollected = () => {\r\n    this.props.everyEquipmentCollected();\r\n  }\r\n\r\n  render() {\r\n    const { equipment, herosEquipment, gold } = this.props as EquipmentShopProps;\r\n    return (\r\n      <div>\r\n        <h3>Gold: {gold}</h3>\r\n        {equipment.length > 0\r\n        ?\r\n          <div className=\"grid-container\">\r\n            {equipment.map(equipment => (\r\n              !herosEquipment.includes(equipment)\r\n              ?\r\n                <div className=\"grid-item\" key={equipment.id}>\r\n                  <EquipmentForSale equipment={equipment} />\r\n                </div>\r\n              : null\r\n            ))}\r\n          </div>\r\n        : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: EquipmentShopState) => ({\r\n  equipment: state.equipmentReducer.equipment,\r\n  gold: state.heroReducer.gold,\r\n  herosEquipment: state.heroReducer.equipment\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  everyEquipmentCollected: () => dispatch(everyEquipmentCollected())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EquipmentShop);","import React from 'react';\r\n\r\nconst DragonStats = (props: any) => {\r\n\r\n  return (\r\n    <div className=\"dragon-stats\">\r\n      <p>\r\n        <span className=\"left-column\">Max hit: </span>\r\n        <span className=\"right-column\">{props.maxHit}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DragonStats;","import React from 'react';\r\nimport Highscores from './Highscores';\r\n\r\nconst GameOver = () => {\r\n  return (\r\n    <div className=\"gameover\">\r\n      <h3>The dragons took over the land.</h3>\r\n      <h3>Try again with a new hero!</h3>\r\n      <img src=\"/images/dragon.png\" alt=\"dragon\" className=\"gameover-dragon reverse-img\" />\r\n      <img src=\"/images/dragon.png\" alt=\"dragon\" className=\"gameover-dragon\" />\r\n      <Highscores />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameOver;","import React from 'react';\r\nimport Highscores from './Highscores';\r\n\r\nconst GameOver = () => {\r\n  return (\r\n    <div className=\"gameover\">\r\n      <h3>Congratulations!</h3>\r\n      <h3>The dragons have been vanquished and the land is free once and for all!</h3>\r\n      <img src=\"/images/hero.png\" alt=\"dragon\" className=\"gameover-img reverse-img\" />\r\n      <img src=\"/images/dragon-boss.png\" alt=\"dragon\" className=\"gameover-img revert-img\" />\r\n      <Highscores />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameOver;","import React from 'react';\r\n\r\ninterface LifeBarProps {\r\n  life: number;\r\n  fightOn: boolean;\r\n  fightOver: boolean;\r\n  hitAmount: number;\r\n}\r\n\r\ninterface LifeBarState {\r\n  life: number;\r\n}\r\n\r\nexport class LifeBar extends React.Component<LifeBarProps, LifeBarState> {\r\n  constructor(props: LifeBarProps) {\r\n    super(props);\r\n    this.state = {\r\n      life: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ life: this.props.life });\r\n  }\r\n\r\n  render() {\r\n    const lifeBarStyles = {\r\n      width: `${this.props.life}%`\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"lifebar\">\r\n          <div className=\"lifebar-background\">\r\n            <span className=\"lifebar-number\">{this.props.life}</span>\r\n            <div className=\"lifebar-life\" style={lifeBarStyles}></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"battlefield-damage\">\r\n          {this.props.fightOn || this.props.fightOver\r\n          ? -this.props.hitAmount\r\n          : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default LifeBar;","import React, { Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { winGold, loseGold, gameOver, incrementRoundsFought } from '../store/hero/actions';\r\nimport { EquipmentType } from '../store/equipment/types';\r\nimport HeroStats from './HeroStats';\r\nimport DragonStats from './DragonStats';\r\nimport GameOver from './GameOver';\r\nimport GameWin from './GameWin';\r\nimport LifeBar from './LifeBar';\r\nimport highscores from '../services/highscores';\r\n\r\ninterface BattlefieldProps {\r\n  name: string;\r\n  roundsFought: number;\r\n  gold: number;\r\n  fightOn: boolean;\r\n  fightOver: boolean;\r\n  heroWon: boolean;\r\n  winAmount: number;\r\n  loseAmount: number;\r\n  herosLife: number;\r\n  attack: number;\r\n  defense: number;\r\n  maxHitForHero: number;\r\n  everyEquipmentCollected: boolean;\r\n  herosEquipment: EquipmentType[];\r\n  winGold: (amount: number) => void;\r\n  loseGold: (amount: number) => void;\r\n  gameOver: () => void;\r\n  incrementRoundsFought: () => void;\r\n}\r\n\r\ninterface BattlefieldState {\r\n  fightOn: boolean;\r\n  fightOver: boolean;\r\n  heroWon: boolean;\r\n  winAmount: number;\r\n  loseAmount: number;\r\n  gameOver: boolean;\r\n  gameWin: boolean;\r\n  herosHit: number;\r\n  herosLife: number;\r\n  dragonsLife: number;\r\n  dragonsHit: number;\r\n  maxHitForDragon: number;\r\n  extraHitForGreenDragon: number;\r\n  showWinner: boolean;\r\n}\r\n\r\ninterface MapStateProps {\r\n  heroReducer: {\r\n    name: string;\r\n    roundsFought: number;\r\n    gold: number;\r\n    life: number;\r\n    equipment: EquipmentType[];\r\n    attack: number;\r\n    defense: number;\r\n    maxHit: number;\r\n    everyEquipmentCollected: boolean;\r\n  }\r\n}\r\n\r\ninterface DispatchProps {\r\n  winGold: (amount: number) => void;\r\n  loseGold: (amount: number) => void;\r\n  gameOver: () => void;\r\n  incrementRoundsFought: () => void;\r\n}\r\n\r\nexport class Battlefield extends React.Component<BattlefieldProps, BattlefieldState> {\r\n  constructor(props: BattlefieldProps) {\r\n    super(props);\r\n    this.state = {\r\n      fightOn: false,\r\n      fightOver: false,\r\n      heroWon: false,\r\n      winAmount: 3,\r\n      loseAmount: 2,\r\n      gameOver: false,\r\n      gameWin: false,\r\n      herosHit: 0,\r\n      herosLife: 100,\r\n      dragonsLife: 100,\r\n      dragonsHit: 0,\r\n      maxHitForDragon: 35,\r\n      extraHitForGreenDragon: 12,\r\n      showWinner: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.everyEquipmentCollected) {\r\n      this.setState({\r\n        maxHitForDragon: this.state.maxHitForDragon - this.props.defense + this.state.extraHitForGreenDragon\r\n      });\r\n    } else {\r\n      this.setState({\r\n        maxHitForDragon: this.state.maxHitForDragon - this.props.defense\r\n      });\r\n    }\r\n  }\r\n\r\n  startFight = async () => {\r\n    await this.setState({\r\n      fightOn: true,\r\n      herosLife: this.props.herosLife,\r\n      dragonsLife: 100,\r\n      herosHit: 0,\r\n      dragonsHit: 0\r\n    });\r\n    this.props.incrementRoundsFought();\r\n    this.fight();\r\n  }\r\n\r\n  fight = async () => {\r\n    if (this.state.herosLife <= 0 || this.state.dragonsLife <= 0) {\r\n      await this.battleOver();\r\n    } else {\r\n      await this.dealDamage();\r\n    }\r\n  }\r\n\r\n  wait = (ms: number) => new Promise(res => setTimeout(res, ms));\r\n\r\n  animation = (elementId: string, transformParams1: string, transformParams2: string) => {\r\n    const element = document.getElementById(elementId);\r\n    if (element) {\r\n      element.animate({\r\n          transform: [transformParams1, transformParams2],\r\n      }, {\r\n          duration: 500,\r\n          iterations: 1,\r\n      });\r\n    }\r\n  }\r\n\r\n  dealDamage = async () => {\r\n    // Hero hits first after 1 second\r\n    await this.wait(1000);\r\n    this.animation('hero-character', 'translateX(10px)', 'translateX(-10px)');\r\n    const herosHit = await Math.floor(Math.random() * (this.props.maxHitForHero + 1));\r\n    let dragonsLife = await this.state.dragonsLife - herosHit;\r\n    if (dragonsLife < 0) {\r\n      dragonsLife = 0;\r\n    }\r\n    await this.setState({\r\n      dragonsLife,\r\n      herosHit\r\n    });\r\n\r\n    // Dragon hits 1 second after Hero\r\n    if (this.state.dragonsLife > 0) {\r\n      await this.wait(1000);\r\n      this.animation('dragon-character', 'translateY(-10px)', 'translateY(10px)');\r\n      const dragonsHit = await Math.floor(Math.random() * (this.state.maxHitForDragon + 1));\r\n      let herosLife = await this.state.herosLife - dragonsHit;\r\n      if (herosLife < 0) {\r\n        herosLife = 0;\r\n      }\r\n      await this.setState({\r\n        herosLife,\r\n        dragonsHit\r\n      });\r\n    }\r\n    this.fight();\r\n  }\r\n\r\n  battleOver = async () => {\r\n    let heroWon: boolean;\r\n    this.state.herosLife > 0 ? heroWon = true : heroWon = false;\r\n    this.setState({\r\n      fightOn: false,\r\n      fightOver: true,\r\n      showWinner: true,\r\n      heroWon\r\n    });\r\n    heroWon ? this.battleWon() : this.battleLost();\r\n    await this.wait(2000);\r\n    this.setState({ showWinner: false });\r\n  }\r\n\r\n  battleWon = async () => {\r\n    this.winGold();\r\n    if (this.props.everyEquipmentCollected) {\r\n      await this.newHighscore();\r\n      await this.gameWin();\r\n    }\r\n  }\r\n\r\n  newHighscore = () => {\r\n    const highscore = {\r\n      name: this.props.name,\r\n      roundsFought: this.props.roundsFought,\r\n      gold: this.props.gold\r\n    }\r\n    return highscores.newHighscore(highscore);\r\n  }\r\n\r\n  winGold = () => {\r\n    this.props.winGold(this.state.winAmount);\r\n  }\r\n\r\n  battleLost = () => {\r\n    if ((this.props.gold - this.state.loseAmount <= 0) || this.props.everyEquipmentCollected) {\r\n      this.gameOver();\r\n    } else {\r\n      this.loseGold();\r\n    }\r\n  }\r\n\r\n  loseGold = () => {\r\n    this.props.loseGold(this.state.loseAmount);\r\n  }\r\n\r\n  gameWin = async () => {\r\n    await this.wait(500);\r\n    this.setState({ gameWin: true });\r\n    this.gameOver();\r\n  }\r\n\r\n  gameOver = async () => {\r\n    this.setState({\r\n      gameOver: true\r\n    });\r\n    this.props.gameOver();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.gameWin\r\n        ?\r\n          <GameWin />\r\n        :\r\n          this.state.gameOver\r\n          ? \r\n            <GameOver />\r\n          :\r\n            <div className=\"battlefield\">\r\n              <h1>Battlefield</h1>\r\n\r\n              <div className=\"battlefield-characters\">\r\n                <div className=\"battlefield-character hero-character\">\r\n                  <div className=\"battlefield-hero-stats\">\r\n                    <HeroStats />\r\n                  </div>\r\n                  <LifeBar\r\n                    life={this.state.herosLife}\r\n                    fightOn={this.state.fightOn}\r\n                    fightOver={this.state.fightOver}\r\n                    hitAmount={this.state.dragonsHit}\r\n                  />\r\n                  <img src=\"/images/hero.png\" alt=\"hero\" className=\"battlefield-character-image\" id=\"hero-character\" />\r\n                </div>\r\n                <div className=\"battlefield-character dragon-character\">\r\n                  <div className=\"battlefied-dragon-stats\">\r\n                    <DragonStats\r\n                      maxHit={this.state.maxHitForDragon}\r\n                    />\r\n                  </div>\r\n                  <LifeBar\r\n                    life={this.state.dragonsLife}\r\n                    fightOn={this.state.fightOn}\r\n                    fightOver={this.state.fightOver}\r\n                    hitAmount={this.state.herosHit}\r\n                  />\r\n                  {this.props.everyEquipmentCollected\r\n                  ?\r\n                    <img src=\"/images/dragon-boss.png\" alt=\"dragon\" className=\"battlefield-character-image\" id=\"dragon-character\" />\r\n                  :\r\n                    <img src=\"/images/dragon.png\" alt=\"dragon\" className=\"battlefield-character-image\" id=\"dragon-character\" />\r\n                  }\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"battlefield-actions\">\r\n                {this.state.fightOn\r\n                ?\r\n                  <button className=\"button battlefield-fight-button disabled\" disabled>Fight</button>\r\n                :\r\n                  <button className=\"button battlefield-fight-button\" onClick={this.startFight}>Fight</button>\r\n                }\r\n                {this.state.fightOver && !this.state.fightOn  && this.state.heroWon && this.state.showWinner\r\n                ? <p>You won!</p>\r\n                : null}\r\n                {this.state.fightOver && !this.state.fightOn  && !this.state.heroWon && this.state.showWinner\r\n                ? <p>You lost!</p>\r\n                : null}\r\n              </div>\r\n            </div>\r\n          }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: MapStateProps) => ({\r\n  name: state.heroReducer.name,\r\n  roundsFought: state.heroReducer.roundsFought,\r\n  gold: state.heroReducer.gold,\r\n  herosLife: state.heroReducer.life,\r\n  attack: state.heroReducer.attack,\r\n  defense: state.heroReducer.defense,\r\n  maxHitForHero: state.heroReducer.maxHit,\r\n  everyEquipmentCollected: state.heroReducer.everyEquipmentCollected,\r\n  herosEquipment: state.heroReducer.equipment\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  winGold: (amount: number) => dispatch(winGold(amount)),\r\n  loseGold: (amount: number) => dispatch(loseGold(amount)),\r\n  gameOver: () => dispatch(gameOver()),\r\n  incrementRoundsFought: () => dispatch(incrementRoundsFought())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Battlefield);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport Home from '../components/Home';\r\nimport Hero from '../components/Hero';\r\nimport EquipmentShop from '../components/EquipmentShop';\r\nimport Battlefield from '../components/Battlefield';\r\n\r\ninterface RoutesProps {\r\n  name: string,\r\n}\r\n\r\ninterface RoutesState {\r\n  heroReducer: {\r\n    name: string\r\n  }\r\n}\r\n\r\nclass Routes extends React.Component<RoutesProps> {\r\n  render() {\r\n\r\n    const { name } = this.props;\r\n    return (\r\n      <Router>\r\n        <header className=\"header\">\r\n          <Link to=\"/\"><img src=\"favicon.png\" alt=\"logo\" className=\"logo\" /></Link>\r\n          <div className=\"container\">\r\n            <nav className=\"nav\">\r\n              <ul className=\"nav-ul\">\r\n                <li className=\"nav-li\"><Link to=\"/hero\" className=\"nav-link\">Hero</Link></li>\r\n                {name ? <li className=\"nav-li\"><Link to=\"/shop\" className=\"nav-link\">Shop</Link></li> : null}\r\n                {name ? <li className=\"nav-li\"><Link to=\"/battlefield\" className=\"nav-link\">Battlefield</Link></li> : null}\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </header>\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/hero\" component={Hero} />\r\n            <Route path=\"/shop\" component={EquipmentShop} />\r\n            <Route path=\"/battlefield\" component={Battlefield} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RoutesState) => ({\r\n  name: state.heroReducer.name\r\n});\r\n\r\nexport default connect(mapStateToProps)(Routes);","import React, { Dispatch } from 'react';\nimport Routes from './routes/Routes';\nimport { connect } from 'react-redux';\nimport { fetchEquipment } from './store/equipment/actions';\n\ninterface DispatchProps {\n  fetchEquipment: () => void;\n}\n\nclass App extends React.Component<DispatchProps> {\n  componentDidMount() {\n    this.props.fetchEquipment();\n  }\n\n  render() {\n    return (\n      <Routes />\n    );\n  };\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\n  fetchEquipment: () => dispatch(fetchEquipment())\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport App from './App';\nimport './styles/index.scss';\nimport './styles/responsive.scss';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}
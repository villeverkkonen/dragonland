{"version":3,"sources":["store/hero/actions/index.tsx","store/hero/reducer/index.tsx","services/equipment.tsx","store/equipment/actions/index.tsx","store/equipment/reducer/index.tsx","store/battlefield/actions/index.tsx","store/battlefield/reducer/index.tsx","store/index.tsx","services/highscores.tsx","components/Highscores.tsx","components/Home.tsx","components/Equipment.tsx","components/HeroStats.tsx","components/Hero.tsx","components/EquipmentForSale.tsx","components/EquipmentShop.tsx","components/LifeBar.tsx","components/HeroCharacter.tsx","components/DragonStats.tsx","components/DragonCharacter.tsx","components/Battlefield.tsx","components/GameOver.tsx","components/GameWin.tsx","routes/Routes.tsx","App.tsx","index.tsx"],"names":["CREATE_HERO","BUY_EQUIPMENT","WIN_GOLD","LOSE_GOLD","GAME_OVER","GAIN_LIFE","LOSE_LIFE","EVERY_EQUIPMENT_COLLECTED","INCREMENT_ROUNDS_FOUGHT","INCREMENT_HITS","initialState","name","gold","life","attack","defense","maxHit","everyEquipmentCollected","roundsFought","hits","equipment","heroReducer","state","arguments","length","undefined","action","type","Object","objectSpread","stats","map","stat","title","toLowerCase","points","price","concat","goldAmount","newGoldAmount","lifeAmount","newLifeAmount","baseUrl","services_equipment","getEquipment","axios","get","then","res","data","getRandomEquipment","getXEquipment","amount","FETCH_EQUIPMENT","fetchEquipmentSuccess","compare","a","b","id","equipmentReducer","SWITCH_FIGHT_ON","fightOn","battlefieldReducer","rootReducer","combineReducers","services_highscores","getTopTenOrdered","sort","slice","newHighscore","highscore","post","Highscores","_React$Component","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","highscores","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","highscoreService","sent","setState","stop","apply","react_default","createElement","className","React","Component","Home","components_Highscores","Equipment","src","imageUrl","alt","HeroStats","_ref","connect","Hero","handleNameChange","event","currentTarget","createHero","nameRequiredWarning","htmlFor","onChange","autoFocus","onClick","components_HeroStats","components_Equipment","dispatch","EquipmentForSale","_getPrototypeOf2","_len","args","Array","_key","buyEquipment","_this2","herosEquipment","includes","disabled","EquipmentShop","components_EquipmentForSale","react_router","to","LifeBar","lifeBarStyles","width","style","fightOver","hitAmount","HeroCharacter","components_LifeBar","heroWon","DragonStats","DragonCharacter","components_DragonStats","Battlefield","startFight","herosLife","dragonsLife","herosHit","dragonsHit","switchFightOn","incrementRoundsFought","fight","battleOver","dealDamage","wait","ms","Promise","setTimeout","showWinnerForTwoSec","_callee2","_context2","showWinner","animation","elementId","transformParams1","transformParams2","element","document","getElementById","animate","transform","duration","iterations","_callee3","_context3","incrementHits","Math","floor","random","maxHitForHero","maxHitForDragon","_callee4","_context4","battleWon","battleLost","_callee5","_context5","gameWin","winGold","_callee6","_context6","winAmount","_callee7","_context7","loseAmount","gameOver","loseGold","_callee8","_context8","_callee9","_context9","extraHitForGreenDragon","components_HeroCharacter","components_DragonCharacter","GameOver","Routes","checkIfFightOn","e","preventDefault","react_router_dom","path","exact","component","GameWin","App","fetchEquipment","routes_Routes","equipmentService","abrupt","_x","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App"],"mappings":"iTAEaA,EAAc,cACdC,EAAgB,gBAChBC,EAAW,WACXC,EAAY,YACZC,EAAY,YACZC,EAAY,YACZC,EAAY,YACZC,EAA4B,4BAC5BC,EAA0B,0BAC1BC,EAAiB,iBCIxBC,EAAyB,CAC7BC,KAAM,GACNC,KAAM,EACNC,KAAM,EACNC,OAAQ,EACRC,QAAS,EACTC,OAAQ,GACRC,yBAAyB,EACzBC,aAAc,EACdC,KAAM,EACNC,UAAW,IA+FEC,MA5FR,WAEqG,IAD1GC,EAC0GC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADlGb,EACRgB,EAA0GH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1G,OAAQC,EAAOC,MACb,KAAK3B,EACH,OAAO4B,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEV,KAAM,EACNC,KAAM,IACNG,OAAQ,GACRL,KAAMe,EAAOf,OAEjB,KAAKV,EACH,IAAIa,EAAS,EACTC,EAAU,EASd,OARAW,EAAON,UAAUU,MAAMC,IAAI,SAAAC,GAMzB,MALiC,WAA7BA,EAAKC,MAAMC,cACbpB,EAASkB,EAAKG,OACwB,YAA7BH,EAAKC,MAAMC,gBACpBnB,EAAUiB,EAAKG,QAEV,OAEFP,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEV,KAAMU,EAAMV,KAAOc,EAAON,UAAUgB,MACpCtB,OAAQQ,EAAMR,OAASA,EACvBC,QAASO,EAAMP,QAAUA,EACzBC,OAAQM,EAAMN,OAASF,EACvBM,UAAWE,EAAMF,UAAUiB,OAAOX,EAAON,aAE7C,KAAKlB,EACH,OAAO0B,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEV,KAAMU,EAAMV,KAAOc,EAAOY,aAE9B,KAAKnC,EACH,IAAIoC,EAAgBjB,EAAMV,KAAOc,EAAOY,WAIxC,OAHIC,EAAgB,IAClBA,EAAgB,GAEXX,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEV,KAAM2B,IAEV,KAAKlC,EACH,OAAOuB,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEET,KAAMS,EAAMT,KAAOa,EAAOc,aAE9B,KAAKlC,EACH,IAAImC,EAAgBnB,EAAMT,KAAOa,EAAOc,WAIxC,OAHIC,EAAgB,IAClBA,EAAgB,GAEXb,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEET,KAAM4B,IAEV,KAAKjC,EACH,OAAOoB,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEJ,aAAcI,EAAMJ,aAAe,IAEvC,KAAKT,EACH,OAAOmB,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEH,KAAMG,EAAMH,KAAO,IAEvB,KAAKZ,EACH,OAAOqB,OAAAC,EAAA,EAAAD,CAAA,GACFN,EADL,CAEEL,yBAAyB,IAE7B,KAAKb,EACH,MAAO,CACLO,KAAM,GACNC,KAAM,EACNC,KAAM,EACNC,OAAQ,EACRC,QAAS,EACTC,OAAQ,EACRC,yBAAyB,EACzBC,aAAc,EACdC,KAAM,EACNC,UAAW,IAEf,QACE,OAAOE,6CCnHPoB,EAAkB,iBAiBTC,EAAA,CACbC,aAhBmB,WAEnB,OADgBC,IAAMC,IAAIJ,GACXK,KAAK,SAAAC,GAAS,OAAOA,EAAIC,QAexCC,mBAZyB,WAEzB,OADgBL,IAAMC,IAAN,GAAAT,OAAaK,EAAb,YACDK,KAAK,SAAAC,GAAS,OAAOA,EAAIC,QAWxCE,cARoB,SAACC,GAErB,OADgBP,IAAMC,IAAN,GAAAT,OAAaK,EAAb,YAAAL,OAA+Be,IAChCL,KAAK,SAAAC,GAAS,OAAOA,EAAIC,SCX7BI,EAAkB,kBAUxB,IAAMC,EAAwB,SAAClC,GAAD,MAAiC,CACpEO,KAAM0B,EACNjC,cAGF,SAASmC,EAAQC,EAAQC,GACvB,OAAOD,EAAEE,GAAKD,EAAEC,GCXlB,IAAMhD,EAAsB,CAC1BU,UAAW,IAgBEuC,MAbR,WAEiD,IADtDrC,EACsDC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAD9Cb,EACRgB,EAAsDH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtD,OAAQC,EAAOC,MACb,KAAK0B,EACH,MAAO,CACLjC,UAAWM,EAAON,WAEtB,QACE,OAAOE,ICtBAsC,EAAkB,kBCQzBlD,EAAsB,CAC1BmD,SAAS,GAgBIC,MAbR,WAEqB,IAD1BxC,EAC0BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADlBb,EAER,QAD0Ba,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GACXE,MACb,KAAKiC,EACH,MAAO,CACLC,SAAUvC,EAAMuC,SAEpB,QACE,OAAOvC,ICfPyC,EAAcC,YAAgB,CAClC3C,YAAaA,EACbsC,iBAAkBA,EAClBG,mBAAoBA,0DCctB,SAASP,EAAQC,EAAcC,GAC7B,OAAOD,EAAEtC,aAAeuC,EAAEvC,cAAgBsC,EAAErC,KAAOsC,EAAEtC,MAAQsC,EAAE7C,KAAO4C,EAAE5C,KAG3D,IAAAqD,EAAA,CACbC,iBAjBuB,WAEvB,OADgBrB,IAAMC,IAVA,mBAWPC,KAAK,SAAAC,GAClB,OAAOA,EAAIC,KAAKkB,KAAKZ,GAASa,MAAM,EAAG,OAezCC,aAXmB,SAACC,GAEpB,OADgBzB,IAAM0B,KAjBA,kBAiBcD,GACrBvB,KAAK,SAAAC,GAAS,OAAOA,EAAIC,SCwC3BuB,EA7Cf,SAAAC,GACE,SAAAD,EAAYE,GAAwB,IAAAC,EAAA,OAAA/C,OAAAgD,EAAA,EAAAhD,CAAAiD,KAAAL,IAClCG,EAAA/C,OAAAkD,EAAA,EAAAlD,CAAAiD,KAAAjD,OAAAmD,EAAA,EAAAnD,CAAA4C,GAAAQ,KAAAH,KAAMH,KACDpD,MAAQ,CACX2D,WAAY,IAHoBN,EADtC,OAAA/C,OAAAsD,EAAA,EAAAtD,CAAA4C,EAAAC,GAAA7C,OAAAuD,EAAA,EAAAvD,CAAA4C,EAAA,EAAAY,IAAA,oBAAAC,MAAA,eAAAC,EAAA1D,OAAA2D,EAAA,EAAA3D,CAAA4D,EAAAhC,EAAAiC,KAAA,SAAAC,IAAA,IAAAT,EAAA,OAAAO,EAAAhC,EAAAmC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAS6BC,EAAiB7B,mBAT9C,cASUe,EATVW,EAAAI,KAAAJ,EAAAE,KAAA,EAUUjB,KAAKoB,SAAS,CAAEhB,eAV1B,wBAAAW,EAAAM,SAAAR,EAAAb,SAAA,yBAAAS,EAAAa,MAAAtB,KAAAtD,YAAA,KAAA6D,IAAA,SAAAC,MAAA,WAcI,OACEe,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,cACbF,EAAA5C,EAAA6C,cAAA,wBACAD,EAAA5C,EAAA6C,cAAA,aACED,EAAA5C,EAAA6C,cAAA,aACED,EAAA5C,EAAA6C,cAAA,UACED,EAAA5C,EAAA6C,cAAA,kBACAD,EAAA5C,EAAA6C,cAAA,oBACAD,EAAA5C,EAAA6C,cAAA,kBACAD,EAAA5C,EAAA6C,cAAA,oBAGJD,EAAA5C,EAAA6C,cAAA,aACCxB,KAAKvD,MAAM2D,WAAWlD,IAAI,SAAAuC,GAAS,OAClC8B,EAAA5C,EAAA6C,cAAA,MAAIjB,IAAKd,EAAUZ,IAChBY,EAAU3D,KAAKa,OAAS,GACvB4E,EAAA5C,EAAA6C,cAAA,UAAK/B,EAAU3D,KAAKyD,MAAM,EAAG,KAC7BgC,EAAA5C,EAAA6C,cAAA,UAAK/B,EAAU3D,MAEjByF,EAAA5C,EAAA6C,cAAA,UAAK/B,EAAUpD,cACfkF,EAAA5C,EAAA6C,cAAA,UAAK/B,EAAUnD,MACfiF,EAAA5C,EAAA6C,cAAA,UAAK/B,EAAU1D,gBAnC7B4D,EAAA,CAAgC+B,IAAMC,WCSvBC,EArBF,WACX,OACEL,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,QACbF,EAAA5C,EAAA6C,cAAA,wBACAD,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,qBACbF,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,uBAAhB,kBACAF,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,uBAAhB,mBACAF,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,uBAAhB,sBAEFF,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,aACbF,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,iBAAhB,yFACAF,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,iBAAhB,oFACAF,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,iBAAhB,yEACAF,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,iBAAhB,4BACAF,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,iBAAhB,4BAEFF,EAAA5C,EAAA6C,cAACK,EAAD,QCISC,EAhBG,SAACjC,GACjB,OACE0B,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,aACbF,EAAA5C,EAAA6C,cAAA,SAAI3B,EAAMtD,UAAUa,OACnByC,EAAMtD,UAAUU,MAAMC,IAAI,SAAAC,GACzB,OACEoE,EAAA5C,EAAA6C,cAAA,OAAKjB,IAAKpD,EAAKC,OACZD,EAAKC,MAAQ,MAAQD,EAAKG,UAIjCiE,EAAA5C,EAAA6C,cAAA,OAAKO,IAAKlC,EAAMtD,UAAUyF,SAAUC,IAAKpC,EAAMtD,UAAUa,MAAOqE,UAAU,oBCKnES,EAAb,SAAAtC,GAAA,SAAAsC,IAAA,OAAAnF,OAAAgD,EAAA,EAAAhD,CAAAiD,KAAAkC,GAAAnF,OAAAkD,EAAA,EAAAlD,CAAAiD,KAAAjD,OAAAmD,EAAA,EAAAnD,CAAAmF,GAAAZ,MAAAtB,KAAAtD,YAAA,OAAAK,OAAAsD,EAAA,EAAAtD,CAAAmF,EAAAtC,GAAA7C,OAAAuD,EAAA,EAAAvD,CAAAmF,EAAA,EAAA3B,IAAA,SAAAC,MAAA,WACW,IAAA2B,EACuDnC,KAAKH,MAA3DxD,EADD8F,EACC9F,aAAcC,EADf6F,EACe7F,KAAMP,EADrBoG,EACqBpG,KAAME,EAD3BkG,EAC2BlG,OAAQC,EADnCiG,EACmCjG,QAASC,EAD5CgG,EAC4ChG,OAEnD,OACEoF,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,cACbF,EAAA5C,EAAA6C,cAAA,SACED,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,eAAhB,WACAF,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,gBAAgBpF,IAElCkF,EAAA5C,EAAA6C,cAAA,SACED,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,eAAhB,SACAF,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,gBAAgBnF,IAElCiF,EAAA5C,EAAA6C,cAAA,SACED,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,eAAhB,SACAF,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,gBAAgB1F,IAElCwF,EAAA5C,EAAA6C,cAAA,SACED,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,eAAhB,WACAF,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,gBAAgBxF,IAElCsF,EAAA5C,EAAA6C,cAAA,SACED,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,eAAhB,YACAF,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,gBAAgBvF,IAElCqF,EAAA5C,EAAA6C,cAAA,SACED,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,eAAhB,YACAF,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,gBAAgBtF,SA5B1C+F,EAAA,CAA+BR,IAAMC,WA4CtBS,cATS,SAAC3F,GAAD,MAA4B,CAClDV,KAAMU,EAAMD,YAAYT,KACxBE,OAAQQ,EAAMD,YAAYP,OAC1BC,QAASO,EAAMD,YAAYN,QAC3BC,OAAQM,EAAMD,YAAYL,OAC1BE,aAAcI,EAAMD,YAAYH,aAChCC,KAAMG,EAAMD,YAAYF,OAGX8F,CAAyBF,GCzC3BG,EAAb,SAAAzC,GACE,SAAAyC,EAAYxC,GAAY,IAAAC,EAAA,OAAA/C,OAAAgD,EAAA,EAAAhD,CAAAiD,KAAAqC,IACtBvC,EAAA/C,OAAAkD,EAAA,EAAAlD,CAAAiD,KAAAjD,OAAAmD,EAAA,EAAAnD,CAAAsF,GAAAlC,KAAAH,KAAMH,KAORyC,iBAAmB,SAACC,GAClBzC,EAAKsB,SAAS,CACZtF,KAAMyG,EAAMC,cAAchC,SAVNV,EAcxB2C,WAAa,WACP3C,EAAKrD,MAAMX,KAAKa,OAAS,GAAKmD,EAAKrD,MAAMX,KAAKa,OAAS,GACzDmD,EAAKD,MAAM4C,WAAW3C,EAAKrD,MAAMX,MAEjCgE,EAAKsB,SAAS,CAAEsB,qBAAqB,KAhBvC5C,EAAKrD,MAAQ,CACXX,KAAM,GACN4G,qBAAqB,GAJD5C,EAD1B,OAAA/C,OAAAsD,EAAA,EAAAtD,CAAAsF,EAAAzC,GAAA7C,OAAAuD,EAAA,EAAAvD,CAAAsF,EAAA,EAAA9B,IAAA,SAAAC,MAAA,WAuBW,IAAA2B,EACqBnC,KAAKH,MAAzB/D,EADDqG,EACCrG,KAAMS,EADP4F,EACO5F,UAEd,OACEgF,EAAA5C,EAAA6C,cAAA,WACmB,IAAhB1F,EAAKa,OACJ4E,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,aACbF,EAAA5C,EAAA6C,cAAA,2BACCxB,KAAKvD,MAAMiG,oBACVnB,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,yBAAwBF,EAAA5C,EAAA6C,cAAA,4CACvC,KACFD,EAAA5C,EAAA6C,cAAA,SAAOmB,QAAQ,cAAf,SACApB,EAAA5C,EAAA6C,cAAA,SAAO1E,KAAK,OAAO+B,GAAG,aAAa+D,SAAU5C,KAAKsC,iBAAkBO,WAAS,IAC7EtB,EAAA5C,EAAA6C,cAAA,UAAQC,UAAU,yBAAyBqB,QAAS9C,KAAKyC,YAAzD,WAEF,KAED3G,GAAQA,EAAKa,OAAS,EAErB4E,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,aACbF,EAAA5C,EAAA6C,cAAA,UAAK1F,GACLyF,EAAA5C,EAAA6C,cAACuB,EAAD,MACAxB,EAAA5C,EAAA6C,cAAA,yBACCjF,GAAaA,EAAUI,OAAS,EAE/B4E,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,kBACZlF,EAAUW,IAAI,SAAAX,GAAS,OACtBgF,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,YAAYlB,IAAKhE,EAAUsC,IACxC0C,EAAA5C,EAAA6C,cAACwB,EAAD,CAAWzG,UAAWA,EAAWgE,IAAKhE,EAAUsC,SAItD,MAEJ,UAzDVwD,EAAA,CAA0BX,IAAMC,WAwEjBS,eATS,SAAC3F,GAAD,MAAuB,CAC7CX,KAAMW,EAAMD,YAAYV,KACxBS,UAAWE,EAAMD,YAAYD,YAGJ,SAAC0G,GAAD,MAA6C,CACtER,WAAY,SAAC3G,GAAD,OAAkBmH,EblFN,SAACnH,GAAD,MAAmB,CAC3CgB,KAAM3B,EACNW,QagFuC2G,CAAW3G,OAGrCsG,CAGbC,GC9EWa,GAAb,SAAAtD,GAAA,SAAAsD,IAAA,IAAAC,EAAArD,EAAA/C,OAAAgD,EAAA,EAAAhD,CAAAiD,KAAAkD,GAAA,QAAAE,EAAA1G,UAAAC,OAAA0G,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAA7G,UAAA6G,GAAA,OAAAzD,EAAA/C,OAAAkD,EAAA,EAAAlD,CAAAiD,MAAAmD,EAAApG,OAAAmD,EAAA,EAAAnD,CAAAmG,IAAA/C,KAAAmB,MAAA6B,EAAA,CAAAnD,MAAAxC,OAAA6F,MAEEG,aAAe,SAACjH,GACduD,EAAKD,MAAM2D,aAAajH,IAH5BuD,EAAA,OAAA/C,OAAAsD,EAAA,EAAAtD,CAAAmG,EAAAtD,GAAA7C,OAAAuD,EAAA,EAAAvD,CAAAmG,EAAA,EAAA3C,IAAA,SAAAC,MAAA,WAMW,IAAAiD,EAAAzD,KAAAmC,EAC0BnC,KAAKH,MAA9B9D,EADDoG,EACCpG,KAAM2H,EADPvB,EACOuB,eACd,OACEnC,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,sBACbF,EAAA5C,EAAA6C,cAAA,SAAIxB,KAAKH,MAAMtD,UAAUa,OAExB4C,KAAKH,MAAMtD,UAAUU,MAAMC,IAAI,SAAAC,GAC9B,OACEoE,EAAA5C,EAAA6C,cAAA,OAAKjB,IAAKpD,EAAKC,OACZD,EAAKC,MAAQ,MAAQD,EAAKG,UAKjCiE,EAAA5C,EAAA6C,cAAA,mBAAWxB,KAAKH,MAAMtD,UAAUgB,OAChCgE,EAAA5C,EAAA6C,cAAA,OAAKO,IAAK/B,KAAKH,MAAMtD,UAAUyF,SAAUC,IAAKjC,KAAKH,MAAMtD,UAAUa,MAAOqE,UAAU,yCACnF1F,GAAQiE,KAAKH,MAAMtD,UAAUgB,QAAUmG,EAAeC,SAAS3D,KAAKH,MAAMtD,WAEzEgF,EAAA5C,EAAA6C,cAAA,UAAQsB,QAAS,kBAAMW,EAAKD,aAAaC,EAAK5D,MAAMtD,YAAYkF,UAAU,4BAA1E,OAEAF,EAAA5C,EAAA6C,cAAA,UAAQoC,UAAQ,EAACnC,UAAU,oCAA3B,gBA1BVyB,EAAA,CAAsCxB,IAAMC,WA0C7BS,eATS,SAAC3F,GAAD,MAAmC,CACzDV,KAAMU,EAAMD,YAAYT,KACxB2H,eAAgBjH,EAAMD,YAAYD,YAGT,SAAC0G,GAAD,MAA6C,CACtEO,aAAc,SAACjH,GAAD,OAA8B0G,Ed5ClB,SAAC1G,GAAD,MAA+B,CACzDO,KAAM1B,EACNmB,ac0CqDiH,CAAajH,OAGrD6F,CAGbc,ICtCIW,8MAQJzH,wBAA0B,WACxB0D,EAAKD,MAAMzD,+GANP4D,KAAKH,MAAM6D,eAAe/G,SAAWqD,KAAKH,MAAMtD,UAAUI,QAC5DqD,KAAK5D,2DAQA,IAAA+F,EAC2CnC,KAAKH,MAA/CtD,EADD4F,EACC5F,UAAWmH,EADZvB,EACYuB,eAAgB3H,EAD5BoG,EAC4BpG,KAEnC,OAHOoG,EACkCrG,KAOvCyF,EAAA5C,EAAA6C,cAAA,WACED,EAAA5C,EAAA6C,cAAA,mBAAWzF,GACVQ,EAAUI,OAAS,EAElB4E,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,kBACZlF,EAAUW,IAAI,SAAAX,GAAS,OACrBmH,EAAeC,SAASpH,GAKvB,KAHAgF,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,YAAYlB,IAAKhE,EAAUsC,IACxC0C,EAAA5C,EAAA6C,cAACsC,GAAD,CAAkBvH,UAAWA,QAKrC,MAlBGgF,EAAA5C,EAAA6C,cAACuC,EAAA,EAAD,CAAUC,GAAG,aAhBEtC,IAAMC,WAmDnBS,eAXS,SAAC3F,GAAD,MAAgC,CACtDF,UAAWE,EAAMqC,iBAAiBvC,UAClCR,KAAMU,EAAMD,YAAYT,KACxB2H,eAAgBjH,EAAMD,YAAYD,UAClCT,KAAMW,EAAMD,YAAYV,OAGC,SAACmH,GAAD,MAA6C,CACtE7G,wBAAyB,kBAAM6G,Ef/Ba,CAC5CnG,KAAMpB,OeiCO0G,CAGbyB,IC9CaI,GAzBf,SAAArE,GAAA,SAAAqE,IAAA,OAAAlH,OAAAgD,EAAA,EAAAhD,CAAAiD,KAAAiE,GAAAlH,OAAAkD,EAAA,EAAAlD,CAAAiD,KAAAjD,OAAAmD,EAAA,EAAAnD,CAAAkH,GAAA3C,MAAAtB,KAAAtD,YAAA,OAAAK,OAAAsD,EAAA,EAAAtD,CAAAkH,EAAArE,GAAA7C,OAAAuD,EAAA,EAAAvD,CAAAkH,EAAA,EAAA1D,IAAA,SAAAC,MAAA,WAEI,IAAM0D,EAAgB,CACpBC,MAAK,GAAA3G,OAAKwC,KAAKH,MAAM7D,KAAhB,MAGP,OACEuF,EAAA5C,EAAA6C,cAAA,WACED,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,WACbF,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,sBACbF,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,kBAAkBzB,KAAKH,MAAM7D,MAC7CuF,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,eAAe2C,MAAOF,MAIzC3C,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,sBACZzB,KAAKH,MAAMb,SAAWgB,KAAKH,MAAMwE,WAC/BrE,KAAKH,MAAMyE,UACZ,WAlBZL,EAAA,CAA6BvC,IAAMC,WCoBpB4C,GApBO,SAAC1E,GACrB,OACE0B,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,wCACbF,EAAA5C,EAAA6C,cAACuB,EAAD,MACAxB,EAAA5C,EAAA6C,cAACgD,GAAD,CACExI,KAAM6D,EAAM7D,KACZgD,QAASa,EAAMb,QACfqF,UAAWxE,EAAMwE,UACjBC,UAAWzE,EAAMyE,YAElBzE,EAAMwE,YAAcxE,EAAMb,QAEzBa,EAAM4E,QACJlD,EAAA5C,EAAA6C,cAAA,OAAKO,IAAI,mBAAmBE,IAAI,OAAOR,UAAU,8BAA8B5C,GAAG,mBAClF0C,EAAA5C,EAAA6C,cAAA,OAAKO,IAAI,mBAAmBE,IAAI,OAAOR,UAAU,4CAA4C5C,GAAG,mBAClG0C,EAAA5C,EAAA6C,cAAA,OAAKO,IAAI,mBAAmBE,IAAI,OAAOR,UAAU,8BAA8B5C,GAAG,qBCX3E6F,GAXK,SAAC7E,GACnB,OACE0B,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,gBACbF,EAAA5C,EAAA6C,cAAA,SACED,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,eAAhB,aACAF,EAAA5C,EAAA6C,cAAA,QAAMC,UAAU,gBAAgB5B,EAAM1D,WC8B/BwI,GA3BS,SAAC9E,GACvB,OACE0B,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,0CACbF,EAAA5C,EAAA6C,cAACoD,GAAD,CAAazI,OAAQ0D,EAAM1D,SAC3BoF,EAAA5C,EAAA6C,cAACgD,GAAD,CACExI,KAAM6D,EAAM7D,KACZgD,QAASa,EAAMb,QACfqF,UAAWxE,EAAMwE,UACjBC,UAAWzE,EAAMyE,YAElBzE,EAAMwE,YAAcxE,EAAMb,SAExBa,EAAM4E,QAKLlD,EAAA5C,EAAA6C,cAAA,OAAKO,IAAI,qBAAqBE,IAAI,SAASR,UAAU,4CAA4C5C,GAAG,qBAEtGgB,EAAMzD,wBACJmF,EAAA5C,EAAA6C,cAAA,OAAKO,IAAI,0BAA0BE,IAAI,SAASR,UAAU,8BAA8B5C,GAAG,qBAC3F0C,EAAA5C,EAAA6C,cAAA,OAAKO,IAAI,qBAAqBE,IAAI,SAASR,UAAU,8BAA8B5C,GAAG,uBCwCnFgG,GAAb,SAAAjF,GACE,SAAAiF,EAAYhF,GAAyB,IAAAC,EAAA,OAAA/C,OAAAgD,EAAA,EAAAhD,CAAAiD,KAAA6E,IACnC/E,EAAA/C,OAAAkD,EAAA,EAAAlD,CAAAiD,KAAAjD,OAAAmD,EAAA,EAAAnD,CAAA8H,GAAA1E,KAAAH,KAAMH,KAgCRiF,WAjCqC/H,OAAA2D,EAAA,EAAA3D,CAAA4D,EAAAhC,EAAAiC,KAiCxB,SAAAC,IAAA,OAAAF,EAAAhC,EAAAmC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACLnB,EAAKsB,SAAS,CAClBpC,SAAS,EACT+F,UAAWjF,EAAKD,MAAMkF,UACtBC,YAAa,IACbC,SAAU,EACVC,WAAY,IANH,OAQXpF,EAAKD,MAAMsF,gBACXrF,EAAKD,MAAMuF,wBACXtF,EAAKuF,QAVM,wBAAAtE,EAAAM,SAAAR,MAjCwBf,EA8CrCuF,MAAQ,WACFvF,EAAKrD,MAAMsI,WAAa,GAAKjF,EAAKrD,MAAMuI,aAAe,EACzDlF,EAAKwF,aAELxF,EAAKyF,cAlD4BzF,EAsDrC0F,KAAO,SAACC,GAAD,OAAgB,IAAIC,QAAQ,SAAAvH,GAAG,OAAIwH,WAAWxH,EAAKsH,MAtDrB3F,EAwDrC8F,oBAxDqC7I,OAAA2D,EAAA,EAAA3D,CAAA4D,EAAAhC,EAAAiC,KAwDf,SAAAiF,IAAA,OAAAlF,EAAAhC,EAAAmC,KAAA,SAAAgF,GAAA,cAAAA,EAAA9E,KAAA8E,EAAA7E,MAAA,cACpBnB,EAAKsB,SAAS,CAAE2E,YAAY,IADRD,EAAA7E,KAAA,EAEdnB,EAAK0F,KAAK,KAFI,OAGpB1F,EAAKsB,SAAS,CAAE2E,YAAY,IAHR,wBAAAD,EAAAzE,SAAAwE,MAxDe/F,EA8DrCkG,UAAY,SAACC,EAAmBC,EAA0BC,GACxD,IAAMC,EAAUC,SAASC,eAAeL,GACpCG,GACFA,EAAQG,QAAQ,CACZC,UAAW,CAACN,EAAkBC,IAC/B,CACCM,SAAU,IACVC,WAAY,KArEiB5G,EA0ErCyF,WA1EqCxI,OAAA2D,EAAA,EAAA3D,CAAA4D,EAAAhC,EAAAiC,KA0ExB,SAAA+F,IAAA,IAAA1B,EAAAD,EAAAE,EAAAH,EAAA,OAAApE,EAAAhC,EAAAmC,KAAA,SAAA8F,GAAA,cAAAA,EAAA5F,KAAA4F,EAAA3F,MAAA,cAAA2F,EAAA3F,KAAA,EAELnB,EAAK0F,KAAK,KAFL,UAGX1F,EAAKD,MAAMgH,gBACX/G,EAAKkG,UAAU,iBAAkB,mBAAoB,qBAC/Cf,EAAW6B,KAAKC,MAAMD,KAAKE,UAAYlH,EAAKD,MAAMoH,cAAgB,KACpEjC,EAAclF,EAAKrD,MAAMuI,YAAcC,GACzB,IAChBD,EAAc,GAEhBlF,EAAKsB,SAAS,CACZ4D,cACAC,eAIEnF,EAAKrD,MAAMuI,YAAc,GAhBlB,CAAA4B,EAAA3F,KAAA,gBAAA2F,EAAA3F,KAAA,GAiBHnB,EAAK0F,KAAK,KAjBP,QAkBT1F,EAAKkG,UAAU,mBAAoB,oBAAqB,oBAClDd,EAAa4B,KAAKC,MAAMD,KAAKE,UAAYlH,EAAKrD,MAAMyK,gBAAkB,KACxEnC,EAAYjF,EAAKrD,MAAMsI,UAAYG,GACvB,IACdH,EAAY,GAEdjF,EAAKsB,SAAS,CACZ2D,YACAG,eA1BO,QA6BXpF,EAAKuF,QA7BM,yBAAAuB,EAAAvF,SAAAsF,MA1EwB7G,EA0GrCwF,WA1GqCvI,OAAA2D,EAAA,EAAA3D,CAAA4D,EAAAhC,EAAAiC,KA0GxB,SAAAuG,IAAA,IAAA1C,EAAA,OAAA9D,EAAAhC,EAAAmC,KAAA,SAAAsG,GAAA,cAAAA,EAAApG,KAAAoG,EAAAnG,MAAA,cAAAmG,EAAAnG,KAAA,EACLnB,EAAKD,MAAMsF,gBADN,cAGgBV,EAA3B3E,EAAKrD,MAAMsI,UAAY,EAHZqC,EAAAnG,KAAA,EAILnB,EAAKsB,SAAS,CAClBpC,SAAS,EACTqF,WAAW,EACXI,YAPS,OASXA,EAAU3E,EAAKuH,YAAcvH,EAAKwH,aATvB,wBAAAF,EAAA/F,SAAA8F,MA1GwBrH,EAsHrCuH,UAtHqCtK,OAAA2D,EAAA,EAAA3D,CAAA4D,EAAAhC,EAAAiC,KAsHzB,SAAA2G,IAAA,OAAA5G,EAAAhC,EAAAmC,KAAA,SAAA0G,GAAA,cAAAA,EAAAxG,KAAAwG,EAAAvG,MAAA,WACNnB,EAAKD,MAAMzD,wBADL,CAAAoL,EAAAvG,KAAA,eAAAuG,EAAAvG,KAAA,EAEFnB,EAAKN,eAFH,cAAAgI,EAAAvG,KAAA,EAGFnB,EAAK2H,UAHH,OAAAD,EAAAvG,KAAA,eAKRnB,EAAK4H,UACL5H,EAAK8F,sBANG,wBAAA4B,EAAAnG,SAAAkG,MAtHyBzH,EAgIrCN,aAhIqCzC,OAAA2D,EAAA,EAAA3D,CAAA4D,EAAAhC,EAAAiC,KAgItB,SAAA+G,IAAA,IAAAlI,EAAA,OAAAkB,EAAAhC,EAAAmC,KAAA,SAAA8G,GAAA,cAAAA,EAAA5G,KAAA4G,EAAA3G,MAAA,cACPxB,EAAY,CAChB3D,KAAMgE,EAAKD,MAAM/D,KACjBO,aAAcyD,EAAKD,MAAMxD,aACzBC,KAAMwD,EAAKD,MAAMvD,KACjBP,KAAM+D,EAAKD,MAAM9D,MALN6L,EAAA3G,KAAA,EAOPb,EAAWZ,aAAaC,GAPjB,wBAAAmI,EAAAvG,SAAAsG,MAhIsB7H,EA0IrC4H,QAAU,WACR5H,EAAKD,MAAM6H,QAAQ5H,EAAKrD,MAAMoL,YA3IK/H,EA8IrCwH,WA9IqCvK,OAAA2D,EAAA,EAAA3D,CAAA4D,EAAAhC,EAAAiC,KA8IxB,SAAAkH,IAAA,OAAAnH,EAAAhC,EAAAmC,KAAA,SAAAiH,GAAA,cAAAA,EAAA/G,KAAA+G,EAAA9G,MAAA,OACNnB,EAAKD,MAAM9D,KAAO+D,EAAKrD,MAAMuL,WAAa,GAAMlI,EAAKD,MAAMzD,wBAC9D0D,EAAKmI,YAELnI,EAAKoI,WACLpI,EAAK8F,uBALI,wBAAAmC,EAAA1G,SAAAyG,MA9IwBhI,EAuJrCoI,SAAW,WACTpI,EAAKD,MAAMqI,SAASpI,EAAKrD,MAAMuL,aAxJIlI,EA2JrC2H,QA3JqC1K,OAAA2D,EAAA,EAAA3D,CAAA4D,EAAAhC,EAAAiC,KA2J3B,SAAAuH,IAAA,OAAAxH,EAAAhC,EAAAmC,KAAA,SAAAsH,GAAA,cAAAA,EAAApH,KAAAoH,EAAAnH,MAAA,cAAAmH,EAAAnH,KAAA,EACFnB,EAAKsB,SAAS,CAClBqG,SAAS,EACTQ,UAAU,IAHJ,cAAAG,EAAAnH,KAAA,EAKFnB,EAAKD,MAAMoI,WALT,wBAAAG,EAAA/G,SAAA8G,MA3J2BrI,EAmKrCmI,SAnKqClL,OAAA2D,EAAA,EAAA3D,CAAA4D,EAAAhC,EAAAiC,KAmK1B,SAAAyH,IAAA,OAAA1H,EAAAhC,EAAAmC,KAAA,SAAAwH,GAAA,cAAAA,EAAAtH,KAAAsH,EAAArH,MAAA,cAAAqH,EAAArH,KAAA,EACHnB,EAAKsB,SAAS,CAClB6G,UAAU,IAFH,cAAAK,EAAArH,KAAA,EAIHnB,EAAKD,MAAMoI,WAJR,wBAAAK,EAAAjH,SAAAgH,MAjKTvI,EAAKrD,MAAQ,CACXuC,SAAS,EACTqF,WAAW,EACXI,SAAS,EACToD,UAAW,EACXG,WAAY,EACZC,UAAU,EACVR,SAAS,EACTxC,SAAU,EACVF,UAAW,IACXC,YAAa,IACbE,WAAY,EACZgC,gBAAiB,GACjBqB,uBAAwB,EACxBxC,YAAY,GAhBqBjG,EADvC,OAAA/C,OAAAsD,EAAA,EAAAtD,CAAA8H,EAAAjF,GAAA7C,OAAAuD,EAAA,EAAAvD,CAAA8H,EAAA,EAAAtE,IAAA,oBAAAC,MAAA,WAuBQR,KAAKH,MAAMzD,wBACb4D,KAAKoB,SAAS,CACZ8F,gBAAiBlH,KAAKvD,MAAMyK,gBAAkBlH,KAAKH,MAAM3D,QAAU8D,KAAKvD,MAAM8L,yBAGhFvI,KAAKoB,SAAS,CACZ8F,gBAAiBlH,KAAKvD,MAAMyK,gBAAkBlH,KAAKH,MAAM3D,YA7BjE,CAAAqE,IAAA,SAAAC,MAAA,WA4KI,OAAKR,KAAKH,MAAM/D,KAGZkE,KAAKvD,MAAMgL,QACNlG,EAAA5C,EAAA6C,cAACuC,EAAA,EAAD,CAAUC,GAAG,aAElBhE,KAAKvD,MAAMwL,SACN1G,EAAA5C,EAAA6C,cAACuC,EAAA,EAAD,CAAUC,GAAG,cAGpBzC,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,eACbF,EAAA5C,EAAA6C,cAAA,yBAEAD,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,0BACbF,EAAA5C,EAAA6C,cAACgH,GAAD,CACErM,OAAQ6D,KAAKH,MAAMoH,cACnBjL,KAAMgE,KAAKvD,MAAMsI,UACjB/F,QAASgB,KAAKvD,MAAMuC,QACpBqF,UAAWrE,KAAKvD,MAAM4H,UACtBC,UAAWtE,KAAKvD,MAAMyI,WACtBT,QAASzE,KAAKvD,MAAMgI,UAEtBlD,EAAA5C,EAAA6C,cAACiH,GAAD,CACEtM,OAAQ6D,KAAKvD,MAAMyK,gBACnBlL,KAAMgE,KAAKvD,MAAMuI,YACjBhG,QAASgB,KAAKvD,MAAMuC,QACpBqF,UAAWrE,KAAKvD,MAAM4H,UACtBC,UAAWtE,KAAKvD,MAAMwI,SACtBR,QAASzE,KAAKvD,MAAMgI,QACpBrI,wBAAyB4D,KAAKH,MAAMzD,2BAIxCmF,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,uBACXzB,KAAKvD,MAAMuC,QAEX,KADAuC,EAAA5C,EAAA6C,cAAA,UAAQC,UAAU,kCAAkCqB,QAAS9C,KAAK8E,YAAlE,SAED9E,KAAKvD,MAAM4H,YAAcrE,KAAKvD,MAAMuC,SAAYgB,KAAKvD,MAAMgI,SAAWzE,KAAKvD,MAAMsJ,WAChFxE,EAAA5C,EAAA6C,cAAA,qBACA,KACDxB,KAAKvD,MAAM4H,YAAcrE,KAAKvD,MAAMuC,UAAagB,KAAKvD,MAAMgI,SAAWzE,KAAKvD,MAAMsJ,WACjFxE,EAAA5C,EAAA6C,cAAA,sBACA,OAzCCD,EAAA5C,EAAA6C,cAACuC,EAAA,EAAD,CAAUC,GAAG,UA7K1Ba,EAAA,CAAiCnD,IAAMC,WAmPxBS,eAtBS,SAAC3F,GAAD,MAA2B,CACjDX,KAAMW,EAAMD,YAAYV,KACxBO,aAAcI,EAAMD,YAAYH,aAChCC,KAAMG,EAAMD,YAAYF,KACxBP,KAAMU,EAAMD,YAAYT,KACxBgJ,UAAWtI,EAAMD,YAAYR,KAC7BC,OAAQQ,EAAMD,YAAYP,OAC1BC,QAASO,EAAMD,YAAYN,QAC3B+K,cAAexK,EAAMD,YAAYL,OACjCC,wBAAyBK,EAAMD,YAAYJ,wBAC3CsH,eAAgBjH,EAAMD,YAAYD,YAGT,SAAC0G,GAAD,MAA6C,CACtEyE,QAAS,SAACnJ,GAAD,OAAoB0E,EpB/RR,SAAC1E,GAAD,MAAqB,CAC1CzB,KAAMzB,EACNoC,WAAYc,GoB6R0BmJ,CAAQnJ,KAC9C2J,SAAU,SAAC3J,GAAD,OAAoB0E,EpB3RR,SAAC1E,GAAD,MAAqB,CAC3CzB,KAAMxB,EACNmC,WAAYc,GoByR2B2J,CAAS3J,KAChD0J,SAAU,kBAAMhF,EpB7Qa,CAC7BnG,KAAMvB,KoB6QN6J,sBAAuB,kBAAMnC,EpBtQa,CAC1CnG,KAAMnB,KoBsQNkL,cAAe,kBAAM5D,EpBnQa,CAClCnG,KAAMlB,KoBmQNuJ,cAAe,kBAAMlC,EfzTa,CAClCnG,KAAMiC,Oe2TOqD,CAA6CyC,IC/S7C6D,GAZE,WACf,OACEnH,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,YACbF,EAAA5C,EAAA6C,cAAA,6CACAD,EAAA5C,EAAA6C,cAAA,wCACAD,EAAA5C,EAAA6C,cAAA,OAAKO,IAAI,qBAAqBE,IAAI,SAASR,UAAU,6BACrDF,EAAA5C,EAAA6C,cAAA,OAAKO,IAAI,qBAAqBE,IAAI,SAASR,UAAU,iBACrDF,EAAA5C,EAAA6C,cAACK,EAAD,QCKS6G,GAZE,WACf,OACEnH,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,YACbF,EAAA5C,EAAA6C,cAAA,8BACAD,EAAA5C,EAAA6C,cAAA,qFACAD,EAAA5C,EAAA6C,cAAA,OAAKO,IAAI,mBAAmBE,IAAI,SAASR,UAAU,iBACnDF,EAAA5C,EAAA6C,cAAA,OAAKO,IAAI,0BAA0BE,IAAI,SAASR,UAAU,4BAC1DF,EAAA5C,EAAA6C,cAACK,EAAD,QCcA8G,8MAGJC,eAAiB,SAACC,GACZ/I,EAAKD,MAAMb,SACb6J,EAAEC,0FAIG,IACChN,EAASkE,KAAKH,MAAd/D,KAER,OACEyF,EAAA5C,EAAA6C,cAACuH,EAAA,EAAD,KACExH,EAAA5C,EAAA6C,cAAA,UAAQC,UAAU,UAChBF,EAAA5C,EAAA6C,cAACuH,EAAA,EAAD,CAAM/E,GAAG,IAAIlB,QAAS9C,KAAK4I,gBAAgBrH,EAAA5C,EAAA6C,cAAA,OAAKO,IAAI,cAAcE,IAAI,OAAOR,UAAU,UACvFF,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,aACbF,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,OACbF,EAAA5C,EAAA6C,cAAA,MAAIC,UAAU,UACZF,EAAA5C,EAAA6C,cAAA,MAAIC,UAAU,UAASF,EAAA5C,EAAA6C,cAACuH,EAAA,EAAD,CAAM/E,GAAG,QAAQvC,UAAU,WAAWqB,QAAS9C,KAAK4I,gBAApD,SACtB9M,EAAOyF,EAAA5C,EAAA6C,cAAA,MAAIC,UAAU,UAASF,EAAA5C,EAAA6C,cAACuH,EAAA,EAAD,CAAM/E,GAAG,QAAQvC,UAAU,WAAWqB,QAAS9C,KAAK4I,gBAApD,SAAuF,KACrH9M,EAAOyF,EAAA5C,EAAA6C,cAAA,MAAIC,UAAU,UAASF,EAAA5C,EAAA6C,cAACuH,EAAA,EAAD,CAAM/E,GAAG,eAAevC,UAAU,WAAWqB,QAAS9C,KAAK4I,gBAA3D,gBAAqG,SAK5IrH,EAAA5C,EAAA6C,cAAA,OAAKC,UAAU,WACbF,EAAA5C,EAAA6C,cAACuC,EAAA,EAAD,KACExC,EAAA5C,EAAA6C,cAACuC,EAAA,EAAD,CAAOiF,KAAK,IAAIC,OAAK,EAACC,UAAWtH,IACjCL,EAAA5C,EAAA6C,cAACuC,EAAA,EAAD,CAAOiF,KAAK,QAAQE,UAAW7G,KAC/Bd,EAAA5C,EAAA6C,cAACuC,EAAA,EAAD,CAAOiF,KAAK,QAAQE,UAAWrF,KAC/BtC,EAAA5C,EAAA6C,cAACuC,EAAA,EAAD,CAAOiF,KAAK,eAAeE,UAAWrE,KACtCtD,EAAA5C,EAAA6C,cAACuC,EAAA,EAAD,CAAOiF,KAAK,YAAYE,UAAWR,KACnCnH,EAAA5C,EAAA6C,cAACuC,EAAA,EAAD,CAAOiF,KAAK,WAAWE,UAAWC,eAjCzBzH,IAAMC,WA8CZS,eALS,SAAC3F,GAAD,MAAyB,CAC/CX,KAAMW,EAAMD,YAAYV,KACxBkD,QAASvC,EAAMwC,mBAAmBD,UAGrBoD,CAAyBuG,IC7DlCS,+LAEFpJ,KAAKH,MAAMwJ,kDAIX,OACE9H,EAAA5C,EAAA6C,cAAC8H,GAAD,aAPY5H,IAAMC,WAgBTS,eAAQ,KAJI,SAACa,GAAD,MAA6C,CACtEoG,eAAgB,kBAAMpG,ErBftB,eAAAd,EAAApF,OAAA2D,EAAA,EAAA3D,CAAA4D,EAAAhC,EAAAiC,KAAO,SAAAC,EAAOoC,GAAP,IAAA9E,EAAA,OAAAwC,EAAAhC,EAAAmC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACasI,EAAiBxL,eAD9B,cACCI,EADD4C,EAAAI,KAEL8B,EAASxE,EAAsBN,EAAI5B,UAAU+C,KAAKZ,KAF7CqC,EAAAyI,OAAA,SAGErL,GAHF,wBAAA4C,EAAAM,SAAAR,MAAP,gBAAA4I,GAAA,OAAAtH,EAAAb,MAAAtB,KAAAtD,YAAA,OqBkBa0F,CAAkCgH,ICd3CM,kClBIUC,YACZzK,EACA0K,YAAgBC,OkBJpBC,IAASC,OACPxI,EAAA5C,EAAA6C,cAACwI,EAAA,EAAD,CAAUN,MAAOA,IACfnI,EAAA5C,EAAA6C,cAACyI,GAAD,OAEF5D,SAASC,eAAe","file":"static/js/main.4a05b414.chunk.js","sourcesContent":["import { EquipmentType } from '../../equipment/types';\r\n\r\nexport const CREATE_HERO = 'CREATE_HERO';\r\nexport const BUY_EQUIPMENT = 'BUY_EQUIPMENT';\r\nexport const WIN_GOLD = 'WIN_GOLD';\r\nexport const LOSE_GOLD = 'LOSE_GOLD';\r\nexport const GAME_OVER = 'GAME_OVER';\r\nexport const GAIN_LIFE = 'GAIN_LIFE';\r\nexport const LOSE_LIFE = 'LOSE_LIFE';\r\nexport const EVERY_EQUIPMENT_COLLECTED = 'EVERY_EQUIPMENT_COLLECTED';\r\nexport const INCREMENT_ROUNDS_FOUGHT = 'INCREMENT_ROUNDS_FOUGHT';\r\nexport const INCREMENT_HITS = 'INCREMENT_HITS';\r\n\r\nexport const createHero = (name: string) => ({\r\n  type: CREATE_HERO,\r\n  name\r\n});\r\n\r\nexport const buyEquipment = (equipment: EquipmentType) => ({\r\n  type: BUY_EQUIPMENT,\r\n  equipment\r\n});\r\n\r\nexport const winGold = (amount: number) => ({\r\n  type: WIN_GOLD,\r\n  goldAmount: amount\r\n});\r\n\r\nexport const loseGold = (amount: number) => ({\r\n  type: LOSE_GOLD,\r\n  goldAmount: amount\r\n});\r\n\r\nexport const gainLife = (amount: number) => ({\r\n    type: GAIN_LIFE,\r\n    lifeAmount: amount\r\n});\r\n\r\nexport const loseLife = (amount: number) => ({\r\n  type: LOSE_LIFE,\r\n  lifeAmount: amount\r\n});\r\n\r\nexport const gameOver = () => ({\r\n  type: GAME_OVER\r\n});\r\n\r\nexport const everyEquipmentCollected = () => ({\r\n  type: EVERY_EQUIPMENT_COLLECTED\r\n});\r\n\r\nexport const incrementRoundsFought = () => ({\r\n  type: INCREMENT_ROUNDS_FOUGHT\r\n});\r\n\r\nexport const incrementHits = () => ({\r\n  type: INCREMENT_HITS\r\n});","import {\r\n  CREATE_HERO,\r\n  BUY_EQUIPMENT,\r\n  WIN_GOLD,\r\n  LOSE_GOLD,\r\n  GAME_OVER,\r\n  GAIN_LIFE,\r\n  LOSE_LIFE,\r\n  EVERY_EQUIPMENT_COLLECTED,\r\n  INCREMENT_ROUNDS_FOUGHT,\r\n  INCREMENT_HITS\r\n} from '../actions';\r\nimport { EquipmentType } from '../../equipment/types';\r\nimport { HeroType } from '../types';\r\n\r\nconst initialState: HeroType = {\r\n  name: '',\r\n  gold: 0,\r\n  life: 0,\r\n  attack: 0,\r\n  defense: 0,\r\n  maxHit: 30,\r\n  everyEquipmentCollected: false,\r\n  roundsFought: 0,\r\n  hits: 0,\r\n  equipment: []\r\n};\r\n\r\nexport function heroReducer(\r\n  state = initialState,\r\n  action: { type: string, name: string, goldAmount: number, lifeAmount: number, equipment: EquipmentType }) {\r\n  switch (action.type) {\r\n    case CREATE_HERO:\r\n      return {\r\n        ...state,\r\n        gold: 4,\r\n        life: 100,\r\n        maxHit: 30,\r\n        name: action.name\r\n      };\r\n    case BUY_EQUIPMENT:\r\n      let attack = 0;\r\n      let defense = 0;\r\n      action.equipment.stats.map(stat => {\r\n        if (stat.title.toLowerCase() === 'attack') {\r\n          attack = stat.points;\r\n        } else if (stat.title.toLowerCase() === 'defense') {\r\n          defense = stat.points;\r\n        }\r\n        return null;\r\n      });\r\n      return {\r\n        ...state,\r\n        gold: state.gold - action.equipment.price,\r\n        attack: state.attack + attack,\r\n        defense: state.defense + defense,\r\n        maxHit: state.maxHit + attack,\r\n        equipment: state.equipment.concat(action.equipment)\r\n      };\r\n    case WIN_GOLD:\r\n      return {\r\n        ...state,\r\n        gold: state.gold + action.goldAmount\r\n      };\r\n    case LOSE_GOLD:\r\n      let newGoldAmount = state.gold - action.goldAmount;\r\n      if (newGoldAmount < 0) {\r\n        newGoldAmount = 0;\r\n      }\r\n      return {\r\n        ...state,\r\n        gold: newGoldAmount\r\n      };\r\n    case GAIN_LIFE:\r\n      return {\r\n        ...state,\r\n        life: state.life + action.lifeAmount\r\n      };\r\n    case LOSE_LIFE:\r\n      let newLifeAmount = state.life - action.lifeAmount;\r\n      if (newLifeAmount < 0) {\r\n        newLifeAmount = 0;\r\n      }\r\n      return {\r\n        ...state,\r\n        life: newLifeAmount\r\n      };\r\n    case INCREMENT_ROUNDS_FOUGHT:\r\n      return {\r\n        ...state,\r\n        roundsFought: state.roundsFought + 1\r\n      };\r\n    case INCREMENT_HITS:\r\n      return {\r\n        ...state,\r\n        hits: state.hits + 1\r\n      };\r\n    case EVERY_EQUIPMENT_COLLECTED:\r\n      return {\r\n        ...state,\r\n        everyEquipmentCollected: true\r\n      };\r\n    case GAME_OVER:\r\n      return {\r\n        name: '',\r\n        gold: 0,\r\n        life: 0,\r\n        attack: 0,\r\n        defense: 0,\r\n        maxHit: 0,\r\n        everyEquipmentCollected: false,\r\n        roundsFought: 0,\r\n        hits: 0,\r\n        equipment: []\r\n      };\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default heroReducer;","import axios from 'axios';\r\nconst baseUrl: string = '/api/equipment';\r\n\r\nconst getEquipment = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(res => { return res.data });\r\n};\r\n\r\nconst getRandomEquipment = () => {\r\n  const request = axios.get(`${baseUrl}/random`);\r\n  return request.then(res => { return res.data });\r\n};\r\n\r\nconst getXEquipment = (amount: number) => {\r\n  const request = axios.get(`${baseUrl}/amount/${amount}`);\r\n  return request.then(res => { return res.data });\r\n};\r\n\r\nexport default {\r\n  getEquipment,\r\n  getRandomEquipment,\r\n  getXEquipment\r\n};","import { EquipmentType } from '../../equipment/types';\r\nimport equipmentService from '../../../services/equipment';\r\nimport { Dispatch } from 'react';\r\n\r\nexport const FETCH_EQUIPMENT = 'FETCH_EQUIPMENT';\r\n\r\nexport function fetchEquipment() {\r\n  return async (dispatch: Dispatch<any>) => {\r\n    const res = await equipmentService.getEquipment();\r\n    dispatch(fetchEquipmentSuccess(res.equipment.sort(compare)));\r\n    return res;\r\n  }\r\n};\r\n\r\nexport const fetchEquipmentSuccess = (equipment: EquipmentType[]) => ({\r\n  type: FETCH_EQUIPMENT,\r\n  equipment\r\n});\r\n\r\nfunction compare(a: any, b: any) {\r\n  return a.id - b.id;\r\n}","import {\r\n  FETCH_EQUIPMENT\r\n} from '../actions';\r\nimport { EquipmentType } from '../../equipment/types';\r\n\r\ninterface State {\r\n  equipment: EquipmentType[];\r\n}\r\n\r\nconst initialState: State = {\r\n  equipment: []\r\n};\r\n\r\nexport function equipmentReducer(\r\n  state = initialState,\r\n  action: { type: string, equipment: EquipmentType[] }) {\r\n  switch (action.type) {\r\n    case FETCH_EQUIPMENT:\r\n      return {\r\n        equipment: action.equipment\r\n      };\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default equipmentReducer;","export const SWITCH_FIGHT_ON = 'SWITCH_FIGHT_ON';\r\n\r\nexport const switchFightOn = () => ({\r\n  type: SWITCH_FIGHT_ON\r\n});\r\n","import {\r\n  SWITCH_FIGHT_ON\r\n} from '../actions';\r\n\r\ninterface State {\r\n  fightOn: boolean;\r\n}\r\n\r\nconst initialState: State = {\r\n  fightOn: false\r\n};\r\n\r\nexport function battlefieldReducer(\r\n  state = initialState,\r\n  action: { type: string }) {\r\n  switch (action.type) {\r\n    case SWITCH_FIGHT_ON:\r\n      return {\r\n        fightOn: !state.fightOn\r\n      };\r\n    default:\r\n      return state;\r\n  };\r\n};\r\n\r\nexport default battlefieldReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport heroReducer from './hero/reducer';\r\nimport equipmentReducer from './equipment/reducer';\r\nimport battlefieldReducer from './battlefield/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  heroReducer: heroReducer,\r\n  equipmentReducer: equipmentReducer,\r\n  battlefieldReducer: battlefieldReducer\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n  );\r\n\r\n  return store;\r\n};","import axios from 'axios';\r\n\r\nconst baseUrl: string = '/api/highscores';\r\n\r\nexport interface Highscore {\r\n  name: string;\r\n  roundsFought: number;\r\n  hits: number;\r\n  gold: number;\r\n};\r\n\r\nconst getTopTenOrdered = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(res => {\r\n    return res.data.sort(compare).slice(0, 10);\r\n  });\r\n};\r\n\r\nconst newHighscore = (highscore: Highscore) => {\r\n  const request = axios.post(baseUrl, highscore);\r\n  return request.then(res => { return res.data });\r\n};\r\n\r\nfunction compare(a: Highscore, b: Highscore) {\r\n  return a.roundsFought - b.roundsFought || a.hits - b.hits || b.gold - a.gold;\r\n};\r\n\r\nexport default {\r\n  getTopTenOrdered,\r\n  newHighscore\r\n};","import React from 'react';\r\nimport highscoreService from '../services/highscores';\r\n\r\ninterface Highscore {\r\n  id: string;\r\n  name: string;\r\n  roundsFought: number;\r\n  hits: number;\r\n  gold: number;\r\n};\r\n\r\ninterface HighscoresState {\r\n  highscores: Highscore[];\r\n};\r\n\r\nexport class Highscores extends React.Component<any, HighscoresState> {\r\n  constructor(props: HighscoresState) {\r\n    super(props);\r\n    this.state = {\r\n      highscores: []\r\n    };\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const highscores = await highscoreService.getTopTenOrdered();\r\n    await this.setState({ highscores });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"highscores\">\r\n        <h3>Highscores</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Rounds</th>\r\n              <th>Hits</th>\r\n              <th>Gold</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n          {this.state.highscores.map(highscore => (\r\n            <tr key={highscore.id}>\r\n              {highscore.name.length > 15\r\n              ? <td>{highscore.name.slice(0, 15)}</td>\r\n              : <td>{highscore.name}</td>\r\n              }\r\n              <td>{highscore.roundsFought}</td>\r\n              <td>{highscore.hits}</td>\r\n              <td>{highscore.gold}</td>\r\n            </tr>\r\n          ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default Highscores;","import React from 'react';\r\nimport HighScores from './Highscores';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <h1>DragonLand</h1>\r\n      <div className=\"home-introduction\">\r\n        <span className=\"home-introduction-1\">Create a hero,</span>\r\n        <span className=\"home-introduction-2\">equip yourself,</span>\r\n        <span className=\"home-introduction-3\">slay the dragons!</span>\r\n      </div>\r\n      <div className=\"home-info\">\r\n        <span className=\"home-info-row\">Your quest is to vanquish the dragons with as few fought rounds and hits as possible.</span>\r\n        <span className=\"home-info-row\">Green Dragon, the final boss, appears when you have collected all the equipment.</span>\r\n        <span className=\"home-info-row\">Below zero gold or getting crushed by the Green Dragon ends the game.</span>\r\n        <span className=\"home-info-row\">Winning a fight: +3 gold</span>\r\n        <span className=\"home-info-row\">Losing a fight: -2 gold</span>\r\n      </div>\r\n      <HighScores />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { EquipmentType } from '../store/equipment/types';\r\n\r\ninterface EquipmentProps {\r\n  equipment: EquipmentType;\r\n};\r\n\r\nconst Equipment = (props: EquipmentProps) => {\r\n  return (\r\n    <div className=\"equipment\">\r\n      <p>{props.equipment.title}</p>\r\n      {props.equipment.stats.map(stat => {\r\n        return (\r\n          <div key={stat.title}>\r\n            {stat.title + \": +\" + stat.points}\r\n          </div>\r\n        );\r\n      })}\r\n      <img src={props.equipment.imageUrl} alt={props.equipment.title} className=\"equipment-img\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Equipment;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface HeroStatsProps {\r\n  roundsFought: number;\r\n  hits: number;\r\n  gold: number;\r\n  attack: number;\r\n  defense: number;\r\n  maxHit: number;\r\n};\r\n\r\ninterface HeroStatsState {\r\n  heroReducer: {\r\n    roundsFought: number;\r\n    hits: number;\r\n    gold: number;\r\n    attack: number;\r\n    defense: number;\r\n    maxHit: number;\r\n  }\r\n};\r\n\r\nexport class HeroStats extends React.Component<HeroStatsProps, HeroStatsState> {\r\n  render() {\r\n    const { roundsFought, hits, gold, attack, defense, maxHit } = this.props as HeroStatsProps;\r\n\r\n    return (\r\n      <div className=\"hero-stats\">\r\n        <p>\r\n          <span className=\"left-column\">Rounds:</span>\r\n          <span className=\"right-column\">{roundsFought}</span>\r\n        </p>\r\n        <p>\r\n          <span className=\"left-column\">Hits:</span>\r\n          <span className=\"right-column\">{hits}</span>\r\n        </p>\r\n        <p>\r\n          <span className=\"left-column\">Gold:</span>\r\n          <span className=\"right-column\">{gold}</span>\r\n        </p>\r\n        <p>\r\n          <span className=\"left-column\">Attack:</span>\r\n          <span className=\"right-column\">{attack}</span>\r\n        </p>\r\n        <p>\r\n          <span className=\"left-column\">Defense:</span>\r\n          <span className=\"right-column\">{defense}</span>\r\n        </p>\r\n        <p>\r\n          <span className=\"left-column\">Max hit:</span>\r\n          <span className=\"right-column\">{maxHit}</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: HeroStatsState) => ({\r\n  gold: state.heroReducer.gold,\r\n  attack: state.heroReducer.attack,\r\n  defense: state.heroReducer.defense,\r\n  maxHit: state.heroReducer.maxHit,\r\n  roundsFought: state.heroReducer.roundsFought,\r\n  hits: state.heroReducer.hits\r\n});\r\n\r\nexport default connect(mapStateToProps)(HeroStats);","import React, { Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Equipment from './Equipment';\r\nimport HeroStats from './HeroStats';\r\nimport { EquipmentType } from '../store/equipment/types';\r\nimport { createHero } from '../store/hero/actions';\r\n\r\ninterface HeroProps {\r\n  name: string;\r\n  equipment: EquipmentType[];\r\n  createHero: (name: string) => void;\r\n};\r\n\r\ninterface HeroState {\r\n  heroReducer: {\r\n    name: string;\r\n    equipment: EquipmentType[]\r\n  }\r\n};\r\n\r\ninterface DispatchProps {\r\n  createHero: (name: string) => void;\r\n};\r\n\r\ntype createHeroParam = React.SyntheticEvent<{ value: string }>;\r\n\r\nexport class Hero extends React.Component<HeroProps, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      nameRequiredWarning: false\r\n    };\r\n  };\r\n\r\n  handleNameChange = (event: createHeroParam) => {\r\n    this.setState({\r\n      name: event.currentTarget.value\r\n    });\r\n  };\r\n\r\n  createHero = () => {\r\n    if (this.state.name.length > 0 && this.state.name.length < 16) {\r\n      this.props.createHero(this.state.name);\r\n    } else {\r\n      this.setState({ nameRequiredWarning: true });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { name, equipment } = this.props as HeroProps;\r\n\r\n    return (\r\n      <div>\r\n        {name.length === 0 ?\r\n          <div className=\"hero-form\">\r\n            <h3>Create a hero</h3>\r\n            {this.state.nameRequiredWarning\r\n            ? <div className=\"name-required-warning\"><p>Name has to be 1-15 characters</p></div>\r\n            : null}\r\n            <label htmlFor=\"input-name\">Name:</label>\r\n            <input type=\"text\" id=\"input-name\" onChange={this.handleNameChange} autoFocus />\r\n            <button className=\"button create-hero-btn\" onClick={this.createHero}>Create</button>\r\n          </div>\r\n        : null}\r\n\r\n        {name && name.length > 0\r\n        ?\r\n          <div className=\"hero-info\">\r\n            <h3>{name}</h3>\r\n            <HeroStats />\r\n            <h3>Equipments:</h3>\r\n            {equipment && equipment.length > 0\r\n            ?\r\n              <div className=\"grid-container\">\r\n                {equipment.map(equipment => (\r\n                  <div className=\"grid-item\" key={equipment.id}>\r\n                    <Equipment equipment={equipment} key={equipment.id} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            : null}\r\n          </div>\r\n        : null}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: HeroState) => ({\r\n  name: state.heroReducer.name,\r\n  equipment: state.heroReducer.equipment\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  createHero: (name: string) => dispatch(createHero(name))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Hero);","import React, { Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { EquipmentType } from '../store/equipment/types';\r\nimport { buyEquipment } from '../store/hero/actions';\r\n\r\ninterface EquipmentForSaleProps {\r\n  gold: number;\r\n  herosEquipment: EquipmentType[];\r\n  equipment: EquipmentType;\r\n  buyEquipment: (equipment: EquipmentType) => void;\r\n};\r\n\r\ninterface EquipmentForSaleState {\r\n  heroReducer: {\r\n    gold: number;\r\n    equipment: EquipmentType[];\r\n  }\r\n};\r\n\r\ninterface DispatchProps {\r\n  buyEquipment: (equipment: EquipmentType) => void;\r\n};\r\n\r\nexport class EquipmentForSale extends React.Component<EquipmentForSaleProps, EquipmentForSaleState> {\r\n  \r\n  buyEquipment = (equipment: EquipmentType) => {\r\n    this.props.buyEquipment(equipment);\r\n  };\r\n\r\n  render() {\r\n    const { gold, herosEquipment } = this.props as EquipmentForSaleProps;\r\n    return (\r\n      <div className=\"equipment-for-sale\">\r\n        <p>{this.props.equipment.title}</p>\r\n\r\n        {this.props.equipment.stats.map(stat => {\r\n          return (\r\n            <div key={stat.title}>\r\n              {stat.title + \": +\" + stat.points}\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <p>Price: {this.props.equipment.price}</p>\r\n        <img src={this.props.equipment.imageUrl} alt={this.props.equipment.title} className=\"equipment-img equipment-for-sale-img\" />\r\n        {gold >= this.props.equipment.price && !herosEquipment.includes(this.props.equipment)\r\n        ?\r\n          <button onClick={() => this.buyEquipment(this.props.equipment)} className=\"button buy-equipment-btn\">Buy</button>\r\n        :\r\n          <button disabled className=\"button buy-equipment-btn no-gold\">No gold</button>\r\n        }\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: EquipmentForSaleState) => ({\r\n  gold: state.heroReducer.gold,\r\n  herosEquipment: state.heroReducer.equipment\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  buyEquipment: (equipment: EquipmentType) => dispatch(buyEquipment(equipment))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EquipmentForSale);","import React, { Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport EquipmentForSale from './EquipmentForSale';\r\nimport { EquipmentType } from '../store/equipment/types';\r\nimport { everyEquipmentCollected } from '../store/hero/actions';\r\nimport { Redirect } from 'react-router';\r\n\r\ninterface EquipmentShopProps {\r\n  equipment: EquipmentType[];\r\n  herosEquipment: EquipmentType[];\r\n  gold: number;\r\n  name: string;\r\n  everyEquipmentCollected: () => void;\r\n};\r\n\r\ninterface EquipmentShopState {\r\n  equipmentReducer: {\r\n    equipment: EquipmentType[];\r\n  },\r\n  heroReducer: {\r\n    gold: number;\r\n    equipment: EquipmentType[];\r\n    name: string;\r\n  }\r\n};\r\n\r\ninterface DispatchProps {\r\n  everyEquipmentCollected: () => void;\r\n};\r\n\r\nclass EquipmentShop extends React.Component<EquipmentShopProps, EquipmentShopState> {\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.herosEquipment.length === this.props.equipment.length) {\r\n      this.everyEquipmentCollected();\r\n    }\r\n  };\r\n\r\n  everyEquipmentCollected = () => {\r\n    this.props.everyEquipmentCollected();\r\n  };\r\n\r\n  render() {\r\n    const { equipment, herosEquipment, gold, name } = this.props as EquipmentShopProps;\r\n\r\n    if (!name) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>Gold: {gold}</h3>\r\n        {equipment.length > 0\r\n        ?\r\n          <div className=\"grid-container\">\r\n            {equipment.map(equipment => (\r\n              !herosEquipment.includes(equipment)\r\n              ?\r\n                <div className=\"grid-item\" key={equipment.id}>\r\n                  <EquipmentForSale equipment={equipment} />\r\n                </div>\r\n              : null\r\n            ))}\r\n          </div>\r\n        : null}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: EquipmentShopState) => ({\r\n  equipment: state.equipmentReducer.equipment,\r\n  gold: state.heroReducer.gold,\r\n  herosEquipment: state.heroReducer.equipment,\r\n  name: state.heroReducer.name\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  everyEquipmentCollected: () => dispatch(everyEquipmentCollected())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EquipmentShop);","import React from 'react';\r\n\r\ninterface LifeBarProps {\r\n  life: number;\r\n  fightOn: boolean;\r\n  fightOver: boolean;\r\n  hitAmount: number;\r\n}\r\n\r\ninterface LifeBarState {\r\n  life: number;\r\n}\r\n\r\nexport class LifeBar extends React.Component<LifeBarProps, LifeBarState> {\r\n  render() {\r\n    const lifeBarStyles = {\r\n      width: `${this.props.life}%`\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"lifebar\">\r\n          <div className=\"lifebar-background\">\r\n            <span className=\"lifebar-number\">{this.props.life}</span>\r\n            <div className=\"lifebar-life\" style={lifeBarStyles}></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"battlefield-damage\">\r\n          {this.props.fightOn || this.props.fightOver\r\n          ? -this.props.hitAmount\r\n          : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default LifeBar;","import React from 'react';\r\nimport HeroStats from './HeroStats';\r\nimport LifeBar from './LifeBar';\r\n\r\ninterface HeroCharacterProps {\r\n  maxHit: number;\r\n  life: number;\r\n  hitAmount: number;\r\n  fightOn: boolean;\r\n  fightOver: boolean;\r\n  heroWon: boolean;\r\n};\r\n\r\nconst HeroCharacter = (props: HeroCharacterProps) => {\r\n  return (\r\n    <div className=\"battlefield-character hero-character\">\r\n      <HeroStats />\r\n      <LifeBar\r\n        life={props.life}\r\n        fightOn={props.fightOn}\r\n        fightOver={props.fightOver}\r\n        hitAmount={props.hitAmount}\r\n      />\r\n      {props.fightOver && !props.fightOn\r\n      ?\r\n        props.heroWon\r\n        ? <img src=\"/images/hero.png\" alt=\"hero\" className=\"battlefield-character-image\" id=\"hero-character\" />\r\n        : <img src=\"/images/hero.png\" alt=\"hero\" className=\"battlefield-character-image invisible-img\" id=\"hero-character\" />\r\n      : <img src=\"/images/hero.png\" alt=\"hero\" className=\"battlefield-character-image\" id=\"hero-character\" />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroCharacter;","import React from 'react';\r\n\r\ninterface DragonStatsProps {\r\n  maxHit: number;\r\n};\r\n\r\nconst DragonStats = (props: DragonStatsProps) => {\r\n  return (\r\n    <div className=\"dragon-stats\">\r\n      <p>\r\n        <span className=\"left-column\">Max hit: </span>\r\n        <span className=\"right-column\">{props.maxHit}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragonStats;","import React from 'react';\r\nimport DragonStats from './DragonStats';\r\nimport LifeBar from './LifeBar';\r\n\r\ninterface DragonCharacterProps {\r\n  maxHit: number;\r\n  life: number;\r\n  hitAmount: number;\r\n  fightOn: boolean;\r\n  fightOver: boolean;\r\n  heroWon: boolean;\r\n  everyEquipmentCollected: boolean;\r\n};\r\n\r\nconst DragonCharacter = (props: DragonCharacterProps) => {\r\n  return (\r\n    <div className=\"battlefield-character dragon-character\">\r\n      <DragonStats maxHit={props.maxHit} />\r\n      <LifeBar\r\n        life={props.life}\r\n        fightOn={props.fightOn}\r\n        fightOver={props.fightOver}\r\n        hitAmount={props.hitAmount}\r\n      />\r\n      {props.fightOver && !props.fightOn\r\n      ?\r\n        !props.heroWon\r\n        ?\r\n          props.everyEquipmentCollected\r\n          ? <img src=\"/images/dragon-boss.png\" alt=\"dragon\" className=\"battlefield-character-image\" id=\"dragon-character\" />\r\n          : <img src=\"/images/dragon.png\" alt=\"dragon\" className=\"battlefield-character-image\" id=\"dragon-character\" />\r\n        : <img src=\"/images/dragon.png\" alt=\"dragon\" className=\"battlefield-character-image invisible-img\" id=\"dragon-character\" />\r\n      :\r\n        props.everyEquipmentCollected\r\n        ? <img src=\"/images/dragon-boss.png\" alt=\"dragon\" className=\"battlefield-character-image\" id=\"dragon-character\" />\r\n        : <img src=\"/images/dragon.png\" alt=\"dragon\" className=\"battlefield-character-image\" id=\"dragon-character\" />\r\n      }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DragonCharacter;","import React, { Dispatch } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\nimport { winGold, loseGold, gameOver, incrementRoundsFought, incrementHits } from '../store/hero/actions';\r\nimport { switchFightOn } from '../store/battlefield/actions';\r\nimport { EquipmentType } from '../store/equipment/types';\r\nimport HeroCharacter from './HeroCharacter';\r\nimport DragonCharacter from './DragonCharacter';\r\nimport highscores from '../services/highscores';\r\n\r\ninterface BattlefieldProps {\r\n  name: string;\r\n  roundsFought: number;\r\n  hits: number;\r\n  gold: number;\r\n  fightOn: boolean;\r\n  fightOver: boolean;\r\n  heroWon: boolean;\r\n  winAmount: number;\r\n  loseAmount: number;\r\n  herosLife: number;\r\n  attack: number;\r\n  defense: number;\r\n  maxHitForHero: number;\r\n  everyEquipmentCollected: boolean;\r\n  herosEquipment: EquipmentType[];\r\n  winGold: (amount: number) => void;\r\n  loseGold: (amount: number) => void;\r\n  gameOver: () => void;\r\n  incrementRoundsFought: () => void;\r\n  incrementHits: () => void;\r\n  switchFightOn: () => void;\r\n};\r\n\r\ninterface BattlefieldState {\r\n  fightOn: boolean;\r\n  fightOver: boolean;\r\n  heroWon: boolean;\r\n  winAmount: number;\r\n  loseAmount: number;\r\n  gameOver: boolean;\r\n  gameWin: boolean;\r\n  herosHit: number;\r\n  herosLife: number;\r\n  dragonsLife: number;\r\n  dragonsHit: number;\r\n  maxHitForDragon: number;\r\n  extraHitForGreenDragon: number;\r\n  showWinner: boolean;\r\n};\r\n\r\ninterface MapStateProps {\r\n  heroReducer: {\r\n    name: string;\r\n    roundsFought: number;\r\n    hits: number;\r\n    gold: number;\r\n    life: number;\r\n    equipment: EquipmentType[];\r\n    attack: number;\r\n    defense: number;\r\n    maxHit: number;\r\n    everyEquipmentCollected: boolean;\r\n  }\r\n};\r\n\r\ninterface DispatchProps {\r\n  winGold: (amount: number) => void;\r\n  loseGold: (amount: number) => void;\r\n  gameOver: () => void;\r\n  incrementRoundsFought: () => void;\r\n  incrementHits: () => void;\r\n  switchFightOn: () => void;\r\n};\r\n\r\nexport class Battlefield extends React.Component<BattlefieldProps, BattlefieldState> {\r\n  constructor(props: BattlefieldProps) {\r\n    super(props);\r\n    this.state = {\r\n      fightOn: false,\r\n      fightOver: false,\r\n      heroWon: false,\r\n      winAmount: 3,\r\n      loseAmount: 2,\r\n      gameOver: false,\r\n      gameWin: false,\r\n      herosHit: 0,\r\n      herosLife: 100,\r\n      dragonsLife: 100,\r\n      dragonsHit: 0,\r\n      maxHitForDragon: 30,\r\n      extraHitForGreenDragon: 9,\r\n      showWinner: false\r\n    };\r\n  };\r\n\r\n  componentDidMount() {\r\n    // Stats for Green Dragon if all equipment have been collected\r\n    if (this.props.everyEquipmentCollected) {\r\n      this.setState({\r\n        maxHitForDragon: this.state.maxHitForDragon - this.props.defense + this.state.extraHitForGreenDragon\r\n      });\r\n    } else {\r\n      this.setState({\r\n        maxHitForDragon: this.state.maxHitForDragon - this.props.defense\r\n      });\r\n    }\r\n  };\r\n\r\n  startFight = async () => {\r\n    await this.setState({\r\n      fightOn: true,\r\n      herosLife: this.props.herosLife,\r\n      dragonsLife: 100,\r\n      herosHit: 0,\r\n      dragonsHit: 0\r\n    });\r\n    this.props.switchFightOn();\r\n    this.props.incrementRoundsFought();\r\n    this.fight();\r\n  };\r\n\r\n  fight = () => {\r\n    if (this.state.herosLife <= 0 || this.state.dragonsLife <= 0) {\r\n      this.battleOver();\r\n    } else {\r\n      this.dealDamage();\r\n    }\r\n  };\r\n\r\n  wait = (ms: number) => new Promise(res => setTimeout(res, ms));\r\n\r\n  showWinnerForTwoSec = async () => {\r\n    this.setState({ showWinner: true });\r\n    await this.wait(2000);\r\n    this.setState({ showWinner: false });\r\n  };\r\n\r\n  animation = (elementId: string, transformParams1: string, transformParams2: string) => {\r\n    const element = document.getElementById(elementId);\r\n    if (element) {\r\n      element.animate({\r\n          transform: [transformParams1, transformParams2],\r\n      }, {\r\n          duration: 500,\r\n          iterations: 1,\r\n      });\r\n    }\r\n  };\r\n\r\n  dealDamage = async () => {\r\n    // Hero hits first after 1 second\r\n    await this.wait(1000);\r\n    this.props.incrementHits();\r\n    this.animation('hero-character', 'translateX(10px)', 'translateX(-10px)');\r\n    const herosHit = Math.floor(Math.random() * (this.props.maxHitForHero + 1));\r\n    let dragonsLife = this.state.dragonsLife - herosHit;\r\n    if (dragonsLife < 0) {\r\n      dragonsLife = 0;\r\n    }\r\n    this.setState({\r\n      dragonsLife,\r\n      herosHit\r\n    });\r\n\r\n    // Dragon hits 1 second after Hero\r\n    if (this.state.dragonsLife > 0) {\r\n      await this.wait(1000);\r\n      this.animation('dragon-character', 'translateY(-10px)', 'translateY(10px)');\r\n      const dragonsHit = Math.floor(Math.random() * (this.state.maxHitForDragon + 1));\r\n      let herosLife = this.state.herosLife - dragonsHit;\r\n      if (herosLife < 0) {\r\n        herosLife = 0;\r\n      }\r\n      this.setState({\r\n        herosLife,\r\n        dragonsHit\r\n      });\r\n    }\r\n    this.fight();\r\n  };\r\n\r\n  battleOver = async () => {\r\n    await this.props.switchFightOn();\r\n    let heroWon: boolean;\r\n    this.state.herosLife > 0 ? heroWon = true : heroWon = false;\r\n    await this.setState({\r\n      fightOn: false,\r\n      fightOver: true,\r\n      heroWon\r\n    });\r\n    heroWon ? this.battleWon() : this.battleLost();\r\n  };\r\n\r\n  battleWon = async () => {\r\n    if (this.props.everyEquipmentCollected) {\r\n      await this.newHighscore();\r\n      await this.gameWin();\r\n    } else {\r\n      this.winGold();\r\n      this.showWinnerForTwoSec();\r\n    }\r\n  };\r\n\r\n  newHighscore = async () => {\r\n    const highscore = {\r\n      name: this.props.name,\r\n      roundsFought: this.props.roundsFought,\r\n      hits: this.props.hits,\r\n      gold: this.props.gold\r\n    };\r\n    await highscores.newHighscore(highscore);\r\n  };\r\n\r\n  winGold = () => {\r\n    this.props.winGold(this.state.winAmount);\r\n  };\r\n\r\n  battleLost = async () => {\r\n    if ((this.props.gold - this.state.loseAmount < 0) || this.props.everyEquipmentCollected) {\r\n      this.gameOver();\r\n    } else {\r\n      this.loseGold();\r\n      this.showWinnerForTwoSec();\r\n    }\r\n  };\r\n\r\n  loseGold = () => {\r\n    this.props.loseGold(this.state.loseAmount);\r\n  };\r\n\r\n  gameWin = async () => {\r\n    await this.setState({\r\n      gameWin: true,\r\n      gameOver: true\r\n    });\r\n    await this.props.gameOver();\r\n  };\r\n\r\n  gameOver = async () => {\r\n    await this.setState({\r\n      gameOver: true\r\n    });\r\n    await this.props.gameOver();\r\n  };\r\n\r\n  render() {\r\n    if (!this.props.name) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    if (this.state.gameWin) {\r\n      return <Redirect to=\"/gamewin\" />;\r\n    }\r\n    if (this.state.gameOver) {\r\n      return <Redirect to=\"/gameover\" />;\r\n    }\r\n    return (\r\n      <div className=\"battlefield\">\r\n        <h1>Battlefield</h1>\r\n\r\n        <div className=\"battlefield-characters\">\r\n          <HeroCharacter\r\n            maxHit={this.props.maxHitForHero}\r\n            life={this.state.herosLife}\r\n            fightOn={this.state.fightOn}\r\n            fightOver={this.state.fightOver}\r\n            hitAmount={this.state.dragonsHit}\r\n            heroWon={this.state.heroWon}\r\n          />\r\n          <DragonCharacter\r\n            maxHit={this.state.maxHitForDragon}\r\n            life={this.state.dragonsLife}\r\n            fightOn={this.state.fightOn}\r\n            fightOver={this.state.fightOver}\r\n            hitAmount={this.state.herosHit}\r\n            heroWon={this.state.heroWon}\r\n            everyEquipmentCollected={this.props.everyEquipmentCollected}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"battlefield-actions\">\r\n          {!this.state.fightOn\r\n          ? <button className=\"button battlefield-fight-button\" onClick={this.startFight}>Fight</button>\r\n          : null}\r\n          {this.state.fightOver && !this.state.fightOn  && this.state.heroWon && this.state.showWinner\r\n          ? <p>You won!</p>\r\n          : null}\r\n          {this.state.fightOver && !this.state.fightOn  && !this.state.heroWon && this.state.showWinner\r\n          ? <p>You lost!</p>\r\n          : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: MapStateProps) => ({\r\n  name: state.heroReducer.name,\r\n  roundsFought: state.heroReducer.roundsFought,\r\n  hits: state.heroReducer.hits,\r\n  gold: state.heroReducer.gold,\r\n  herosLife: state.heroReducer.life,\r\n  attack: state.heroReducer.attack,\r\n  defense: state.heroReducer.defense,\r\n  maxHitForHero: state.heroReducer.maxHit,\r\n  everyEquipmentCollected: state.heroReducer.everyEquipmentCollected,\r\n  herosEquipment: state.heroReducer.equipment\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  winGold: (amount: number) => dispatch(winGold(amount)),\r\n  loseGold: (amount: number) => dispatch(loseGold(amount)),\r\n  gameOver: () => dispatch(gameOver()),\r\n  incrementRoundsFought: () => dispatch(incrementRoundsFought()),\r\n  incrementHits: () => dispatch(incrementHits()),\r\n  switchFightOn: () => dispatch(switchFightOn())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Battlefield);","import React from 'react';\r\nimport Highscores from './Highscores';\r\n\r\nconst GameOver = () => {\r\n  return (\r\n    <div className=\"gameover\">\r\n      <h3>The dragons took over the land.</h3>\r\n      <h3>Try again with a new hero!</h3>\r\n      <img src=\"/images/dragon.png\" alt=\"dragon\" className=\"gameover-img reverse-img\" />\r\n      <img src=\"/images/dragon.png\" alt=\"dragon\" className=\"gameover-img\" />\r\n      <Highscores />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameOver;","import React from 'react';\r\nimport Highscores from './Highscores';\r\n\r\nconst GameOver = () => {\r\n  return (\r\n    <div className=\"gameover\">\r\n      <h3>Congratulations!</h3>\r\n      <h3>The dragons have been vanquished and the land is free once and for all!</h3>\r\n      <img src=\"/images/hero.png\" alt=\"dragon\" className=\"gameover-img\" />\r\n      <img src=\"/images/dragon-boss.png\" alt=\"dragon\" className=\"gameover-img revert-img\" />\r\n      <Highscores />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameOver;","import React, { MouseEvent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport Home from '../components/Home';\r\nimport Hero from '../components/Hero';\r\nimport EquipmentShop from '../components/EquipmentShop';\r\nimport Battlefield from '../components/Battlefield';\r\nimport GameOver from '../components/GameOver';\r\nimport GameWin from '../components/GameWin';\r\n\r\ninterface RoutesProps {\r\n  name: string;\r\n  fightOn: boolean;\r\n};\r\n\r\ninterface RoutesState {\r\n  heroReducer: {\r\n    name: string\r\n  },\r\n  battlefieldReducer: {\r\n    fightOn: boolean;\r\n  }\r\n};\r\n\r\nclass Routes extends React.Component<RoutesProps, any> {\r\n\r\n  // Prevent click if fight is on\r\n  checkIfFightOn = (e: MouseEvent) => {\r\n    if (this.props.fightOn) {\r\n      e.preventDefault();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name } = this.props as RoutesProps;\r\n\r\n    return (\r\n      <Router>\r\n        <header className=\"header\">\r\n          <Link to=\"/\" onClick={this.checkIfFightOn}><img src=\"favicon.png\" alt=\"logo\" className=\"logo\" /></Link>\r\n          <div className=\"container\">\r\n            <nav className=\"nav\">\r\n              <ul className=\"nav-ul\">\r\n                <li className=\"nav-li\"><Link to=\"/hero\" className=\"nav-link\" onClick={this.checkIfFightOn}>Hero</Link></li>\r\n                {name ? <li className=\"nav-li\"><Link to=\"/shop\" className=\"nav-link\" onClick={this.checkIfFightOn}>Shop</Link></li> : null}\r\n                {name ? <li className=\"nav-li\"><Link to=\"/battlefield\" className=\"nav-link\" onClick={this.checkIfFightOn}>Battlefield</Link></li> : null}\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </header>\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/hero\" component={Hero} />\r\n            <Route path=\"/shop\" component={EquipmentShop} />\r\n            <Route path=\"/battlefield\" component={Battlefield} />\r\n            <Route path=\"/gameover\" component={GameOver} />\r\n            <Route path=\"/gamewin\" component={GameWin} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RoutesState) => ({\r\n  name: state.heroReducer.name,\r\n  fightOn: state.battlefieldReducer.fightOn\r\n});\r\n\r\nexport default connect(mapStateToProps)(Routes);","import React, { Dispatch } from 'react';\nimport Routes from './routes/Routes';\nimport { connect } from 'react-redux';\nimport { fetchEquipment } from './store/equipment/actions';\n\ninterface DispatchProps {\n  fetchEquipment: () => void;\n}\n\nclass App extends React.Component<DispatchProps> {\n  componentDidMount() {\n    this.props.fetchEquipment();\n  }\n\n  render() {\n    return (\n      <Routes />\n    );\n  };\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\n  fetchEquipment: () => dispatch(fetchEquipment())\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport App from './App';\nimport './styles/index.scss';\nimport './styles/header.scss';\nimport './styles/home.scss';\nimport './styles/battlefield.scss';\nimport './styles/responsive.scss';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}
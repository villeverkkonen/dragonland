{"version":3,"sources":["store/hero/actions/index.tsx","store/hero/reducer/index.tsx","services/equipment.tsx","store/equipment/actions/index.tsx","store/equipment/reducer/index.tsx","store/index.tsx","components/Home.tsx","components/Equipment.tsx","components/HeroStats.tsx","components/Hero.tsx","components/EquipmentForSale.tsx","components/EquipmentShop.tsx","components/DragonStats.tsx","components/GameOver.tsx","components/LifeBar.tsx","components/Battlefield.tsx","routes/Routes.tsx","App.tsx","index.tsx"],"names":["CREATE_HERO","BUY_EQUIPMENT","WIN_GOLD","LOSE_GOLD","GAME_OVER","GAIN_LIFE","LOSE_LIFE","initialState","name","gold","life","equipment","heroReducer","state","arguments","length","undefined","action","type","Object","objectSpread","newEquipmentList","concat","price","goldAmount","newGoldAmount","lifeAmount","newLifeAmount","baseUrl","services_equipment","getEquipment","axios","get","then","res","data","getRandomEquipment","getXEquipment","amount","FETCH_EQUIPMENT","fetchEquipmentSuccess","equipmentReducer","rootReducer","combineReducers","Home","react_default","a","createElement","className","Equipment","props","title","stats","map","stat","key","points","src","imageUrl","alt","HeroStats","attack","defense","equip","toLowerCase","Hero","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleNameChange","event","setState","currentTarget","value","createHero","nameRequiredWarning","inherits","createClass","_this$props","htmlFor","id","onChange","autoFocus","onClick","components_HeroStats","components_Equipment","React","Component","connect","dispatch","EquipmentForSale","_getPrototypeOf2","_len","args","Array","_key","apply","buyEquipment","_this2","herosEquipment","includes","disabled","EquipmentShop","_ref","components_EquipmentForSale","DragonStats","maxHit","minHit","GameOver","LifeBar","lifeBarStyles","width","style","Battlefield","startFight","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fightOn","herosLife","dragonsLife","herosHit","dragonsHit","fight","stop","_callee2","_context2","battleOver","dealDamage","wait","ms","Promise","setTimeout","_callee3","_context3","Math","floor","random","maxHitForHero","sent","t0","t1","maxHitForDragon","t2","t3","heroWon","fightOver","battleWon","battleLost","winGold","winAmount","loseAmount","gameOver","loseGold","minHitForHero","minHitForDragon","components_GameOver","components_LifeBar","components_DragonStats","Routes","react_router_dom","to","react_router","path","exact","component","App","fetchEquipment","routes_Routes","equipmentService","abrupt","_x","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.76390006.chunk.js","sourcesContent":["import { EquipmentType } from '../../equipment/types';\r\n\r\nexport const CREATE_HERO = 'CREATE_HERO';\r\nexport const BUY_EQUIPMENT = 'BUY_EQUIPMENT';\r\nexport const WIN_GOLD = 'WIN_GOLD';\r\nexport const LOSE_GOLD = 'LOSE_GOLD';\r\nexport const GAME_OVER = 'GAME_OVER';\r\nexport const GAIN_LIFE = 'GAIN_LIFE';\r\nexport const LOSE_LIFE = 'LOSE_LIFE';\r\n\r\nexport const createHero = (name: string) => {\r\n  return {\r\n    type: CREATE_HERO,\r\n    name\r\n  };\r\n};\r\n\r\nexport const buyEquipment = (equipment: EquipmentType) => {\r\n  return {\r\n    type: BUY_EQUIPMENT,\r\n    equipment\r\n  };\r\n};\r\n\r\nexport const winGold = (amount: number) => {\r\n  return {\r\n    type: WIN_GOLD,\r\n    goldAmount: amount\r\n  };\r\n};\r\n\r\nexport const loseGold = (amount: number) => {\r\n  return {\r\n    type: LOSE_GOLD,\r\n    goldAmount: amount\r\n  };\r\n};\r\n\r\nexport const gainLife = (amount: number) => {\r\n  return {\r\n    type: GAIN_LIFE,\r\n    lifeAmount: amount\r\n  };\r\n};\r\n\r\nexport const loseLife = (amount: number) => {\r\n  return {\r\n    type: LOSE_LIFE,\r\n    lifeAmount: amount\r\n  };\r\n};\r\n\r\nexport const gameOver = () => {\r\n  return {\r\n    type: GAME_OVER\r\n  }\r\n}","import {\r\n  CREATE_HERO,\r\n  BUY_EQUIPMENT,\r\n  WIN_GOLD,\r\n  LOSE_GOLD,\r\n  GAME_OVER,\r\n  GAIN_LIFE,\r\n  LOSE_LIFE\r\n} from '../actions';\r\nimport { EquipmentType } from '../../equipment/types';\r\nimport { HeroType } from '../types';\r\n\r\nconst initialState: HeroType = {\r\n  name: '',\r\n  gold: 0,\r\n  life: 0,\r\n  equipment: []\r\n};\r\n\r\nexport function heroReducer(\r\n  state = initialState,\r\n  action: { type: string, name: string, goldAmount: number, lifeAmount: number, equipment: EquipmentType }) {\r\n    switch (action.type) {\r\n      case CREATE_HERO:\r\n        return {\r\n          ...state,\r\n          gold: 10,\r\n          life: 100,\r\n          name: action.name\r\n        };\r\n      case BUY_EQUIPMENT:\r\n        const newEquipmentList = state.equipment.concat(action.equipment);\r\n        return {\r\n          ...state,\r\n          gold: state.gold - action.equipment.price,\r\n          equipment: newEquipmentList\r\n        };\r\n      case WIN_GOLD:\r\n        return {\r\n          ...state,\r\n          gold: state.gold + action.goldAmount\r\n        };\r\n      case LOSE_GOLD:\r\n        let newGoldAmount = state.gold - action.goldAmount;\r\n        if (newGoldAmount < 0) {\r\n          newGoldAmount = 0;\r\n        }\r\n        return {\r\n          ...state,\r\n          gold: newGoldAmount\r\n        };\r\n      case GAIN_LIFE:\r\n        return {\r\n          ...state,\r\n          life: state.life + action.lifeAmount\r\n        };\r\n      case LOSE_LIFE:\r\n        let newLifeAmount = state.life - action.lifeAmount;\r\n        if (newLifeAmount < 0) {\r\n          newLifeAmount = 0;\r\n        }\r\n        return {\r\n          ...state,\r\n          life: newLifeAmount\r\n        };\r\n      case GAME_OVER:\r\n        return {\r\n          name: '',\r\n          gold: 0,\r\n          life: 0,\r\n          equipment: []\r\n        };\r\n      default:\r\n        return state;\r\n    };\r\n};\r\n\r\nexport default heroReducer;","import axios from 'axios';\r\nconst baseUrl: string = '/api/equipment';\r\n\r\nconst getEquipment = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(res => { return res.data });\r\n}\r\n\r\nconst getRandomEquipment = () => {\r\n  const request = axios.get(`${baseUrl}/random`);\r\n  return request.then(res => { return res.data });\r\n}\r\n\r\nconst getXEquipment = (amount: number) => {\r\n  const request = axios.get(`${baseUrl}/amount/${amount}`);\r\n  return request.then(res => { return res.data });\r\n}\r\n\r\nexport default {\r\n  getEquipment,\r\n  getRandomEquipment,\r\n  getXEquipment\r\n}","import { EquipmentType } from '../../equipment/types';\r\nimport equipmentService from '../../../services/equipment';\r\nimport { Dispatch } from 'react';\r\n\r\nexport const FETCH_EQUIPMENT = 'FETCH_EQUIPMENT';\r\n\r\nexport function fetchEquipment() {\r\n  return async (dispatch: Dispatch<any>) => {\r\n    const res = await equipmentService.getEquipment();\r\n    dispatch(fetchEquipmentSuccess(res.equipment));\r\n    return res;\r\n  }\r\n};\r\n\r\nexport const fetchEquipmentSuccess = (equipment: EquipmentType[]) => ({\r\n  type: FETCH_EQUIPMENT,\r\n  equipment\r\n});","import {\r\n  FETCH_EQUIPMENT\r\n} from '../actions';\r\nimport { EquipmentType } from '../../equipment/types';\r\n\r\ninterface State {\r\n  equipment?: EquipmentType[];\r\n}\r\n\r\nconst initialState: State = {\r\n  equipment: []\r\n};\r\n\r\nexport function equipmentReducer(\r\n  state = initialState,\r\n  action: { type: string, equipment?: EquipmentType[] }) {\r\n    switch (action.type) {\r\n      case FETCH_EQUIPMENT:\r\n        return {\r\n          equipment: action.equipment\r\n        };\r\n      default:\r\n        return state;\r\n    };\r\n};\r\n\r\nexport default equipmentReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport heroReducer from './hero/reducer';\r\nimport equipmentReducer from './equipment/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  heroReducer: heroReducer,\r\n  equipmentReducer: equipmentReducer\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n  );\r\n\r\n  return store;\r\n};","import React from 'react';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <h1>DragonLand</h1>\r\n      <div className=\"home-instuctions\">\r\n        <span className=\"home-instruction-1\">Create a hero,</span>\r\n        <span className=\"home-instruction-2\">equip yourself,</span>\r\n        <span className=\"home-instruction-3\">slay the dragons!</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { EquipmentType } from '../store/equipment/types';\r\n\r\ninterface EquipmentProps {\r\n  equipment: EquipmentType;\r\n}\r\n\r\nconst Equipment = (props: EquipmentProps) => {\r\n  return (\r\n    <div className=\"equipment\">\r\n      <p>{props.equipment.title}</p>\r\n      {props.equipment.stats.map(stat => {\r\n        return (\r\n          <div key={stat.title}>\r\n            {stat.title + \": +\" + stat.points}\r\n          </div>\r\n        );\r\n      })}\r\n      <img src={props.equipment.imageUrl} alt={props.equipment.title} className=\"equipment-img\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Equipment;","import React from 'react';\r\nimport { EquipmentType } from '../store/equipment/types';\r\n\r\ninterface EquipmentProps {\r\n  equipment: EquipmentType[];\r\n}\r\n\r\nconst HeroStats = (props: EquipmentProps) => {\r\n  let attack = 0, defense = 0, maxHit = 30;\r\n\r\n  props.equipment.map(equip => {\r\n    return (\r\n      equip.stats.map(stat => {\r\n        if (stat.title.toLowerCase() === \"attack\") {\r\n          return attack += stat.points;\r\n        } else if (stat.title.toLowerCase() === \"defense\") {\r\n          return defense += stat.points;\r\n        }\r\n        return null;\r\n      })\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className=\"hero-stats\">\r\n      <p>\r\n        <span className=\"left-column\">Attack: </span>\r\n        <span className=\"right-column\">{attack}</span>\r\n      </p>\r\n      <p>\r\n        <span className=\"left-column\">Defense: </span>\r\n        <span className=\"right-column\">{defense}</span>\r\n      </p>\r\n      <p>\r\n        <span className=\"left-column\">Max hit: </span>\r\n        <span className=\"right-column\">{maxHit + attack}</span>\r\n      </p>\r\n      <p>\r\n        <span className=\"left-column\">Min hit: </span>\r\n        <span className=\"right-column\">{attack}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeroStats;","import React, { Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Equipment from './Equipment';\r\nimport HeroStats from './HeroStats';\r\nimport { EquipmentType } from '../store/equipment/types';\r\nimport { createHero } from '../store/hero/actions';\r\n\r\ninterface HeroProps {\r\n  name: string;\r\n  gold: number;\r\n  life: number;\r\n  equipment: EquipmentType[];\r\n  createHero: (name: string) => void;\r\n}\r\n\r\ninterface HeroState {\r\n  heroReducer: {\r\n    name: string,\r\n    gold: number,\r\n    life: number,\r\n    equipment: EquipmentType[]\r\n  }\r\n}\r\n\r\ninterface DispatchProps {\r\n  createHero: (name: string) => void;\r\n}\r\n\r\ntype createHeroParam = React.SyntheticEvent<{ value: string }>;\r\n\r\nexport class Hero extends React.Component<HeroProps, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      nameRequiredWarning: false\r\n    }\r\n  }\r\n\r\n  handleNameChange = (event: createHeroParam) => {\r\n    this.setState({\r\n      name: event.currentTarget.value\r\n    })\r\n  }\r\n\r\n  createHero = () => {\r\n    if (this.state.name.length > 0) {\r\n      this.props.createHero(this.state.name);\r\n    } else {\r\n      this.setState({ nameRequiredWarning: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, gold, life, equipment } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {name.length === 0 ?\r\n          <div className=\"hero-form\">\r\n            <h3>Create a hero</h3>\r\n            {this.state.nameRequiredWarning\r\n            ? <div className=\"name-required-warning\"><p>Please enter name</p></div>\r\n            : null}\r\n            <label htmlFor=\"input-name\">Name:</label>\r\n            <input type=\"text\" id=\"input-name\" onChange={this.handleNameChange} autoFocus />\r\n            <button className=\"button create-hero-btn\" onClick={this.createHero}>Create</button>\r\n          </div>\r\n        : null}\r\n\r\n        {name && name.length > 0\r\n        ?\r\n          <div className=\"hero-info\">\r\n            <h3>Your hero:</h3>\r\n            <p>Name: {name}</p>\r\n            <p>Gold: {gold}</p>\r\n            <p>Life: {life}</p>\r\n            <HeroStats equipment={equipment} />\r\n            <h3>Equipments:</h3>\r\n            {equipment && equipment.length > 0\r\n            ?\r\n              <div className=\"grid-container\">\r\n                {equipment.map(equipment => (\r\n                  <div className=\"grid-item\" key={equipment.id}>\r\n                    <Equipment equipment={equipment} key={equipment.id} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            : null}\r\n          </div>\r\n        : null}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: HeroState) => ({\r\n  name: state.heroReducer.name,\r\n  gold: state.heroReducer.gold,\r\n  life: state.heroReducer.life,\r\n  equipment: state.heroReducer.equipment\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  createHero: (name: string) => dispatch(createHero(name))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Hero);","import React, { Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { EquipmentType } from '../store/equipment/types';\r\nimport { buyEquipment } from '../store/hero/actions';\r\n\r\ninterface EquipmentForSaleProps {\r\n  gold: number;\r\n  herosEquipment: EquipmentType[];\r\n  equipment: EquipmentType;\r\n  buyEquipment: (equipment: EquipmentType) => void;\r\n}\r\n\r\ninterface EquipmentForSaleState {\r\n  heroReducer: {\r\n    gold: number;\r\n    equipment: EquipmentType[];\r\n  }\r\n}\r\n\r\ninterface DispatchProps {\r\n  buyEquipment: (equipment: EquipmentType) => void;\r\n}\r\n\r\nexport class EquipmentForSale extends React.Component<EquipmentForSaleProps, EquipmentForSaleState> {\r\n  buyEquipment = (equipment: EquipmentType) => {\r\n    this.props.buyEquipment(equipment);\r\n  }\r\n\r\n  render() {\r\n    const { gold, herosEquipment } = this.props;\r\n    return (\r\n      <div className=\"equipment-for-sale\">\r\n        <p>{this.props.equipment.title}</p>\r\n\r\n        {this.props.equipment.stats.map(stat => {\r\n          return (\r\n            <div key={stat.title}>\r\n              {stat.title + \": +\" + stat.points}\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <p>Price: {this.props.equipment.price}</p>\r\n        <img src={this.props.equipment.imageUrl} alt={this.props.equipment.title} className=\"equipment-img equipment-for-sale-img\" />\r\n        {gold >= this.props.equipment.price && !herosEquipment.includes(this.props.equipment)\r\n        ?\r\n          <button onClick={() => this.buyEquipment(this.props.equipment)} className=\"button buy-equipment-btn\">Buy</button>\r\n        :\r\n          herosEquipment.includes(this.props.equipment)\r\n          ? <button disabled className=\"button buy-equipment-btn owned\">Owned</button>\r\n          : <button disabled className=\"button buy-equipment-btn no-gold\">No gold</button>\r\n        }\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: EquipmentForSaleState) => ({\r\n  gold: state.heroReducer.gold,\r\n  herosEquipment: state.heroReducer.equipment\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  buyEquipment: (equipment: EquipmentType) => dispatch(buyEquipment(equipment))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EquipmentForSale);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport EquipmentForSale from './EquipmentForSale';\r\nimport { EquipmentType } from '../store/equipment/types';\r\n\r\ninterface EquipmentShopProps {\r\n  equipment: EquipmentType[];\r\n  herosEquipment: EquipmentType[];\r\n  gold: number;\r\n}\r\n\r\ninterface EquipmentShopState {\r\n  equipmentReducer: {\r\n    equipment: EquipmentType[];\r\n  },\r\n  heroReducer: {\r\n    gold: number;\r\n    equipment: EquipmentType[];\r\n  }\r\n}\r\n\r\nclass EquipmentShop extends React.Component<EquipmentShopProps, EquipmentShopState> {\r\n\r\n  render() {\r\n    const { equipment, herosEquipment, gold } = this.props as EquipmentShopProps;\r\n    return (\r\n      <div>\r\n        <h3>Gold: {gold}</h3>\r\n        {equipment.length > 0\r\n        ?\r\n          <div className=\"grid-container\">\r\n            {equipment.map(equipment => (\r\n              !herosEquipment.includes(equipment)\r\n              ?\r\n                <div className=\"grid-item\" key={equipment.id}>\r\n                  <EquipmentForSale equipment={equipment}/>\r\n                </div>\r\n              : null\r\n            ))}\r\n          </div>\r\n        : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: EquipmentShopState) => ({\r\n  equipment: state.equipmentReducer.equipment,\r\n  gold: state.heroReducer.gold,\r\n  herosEquipment: state.heroReducer.equipment\r\n});\r\n\r\nexport default connect(mapStateToProps)(EquipmentShop);","import React from 'react';\r\n\r\nconst DragonStats = (props: any) => {\r\n\r\n  return (\r\n    <div className=\"dragon-stats\">\r\n      <p>\r\n        <span className=\"left-column\">Max hit: </span>\r\n        <span className=\"right-column\">{props.maxHit}</span>\r\n      </p>\r\n      <p>\r\n        <span className=\"left-column\">Min hit: </span>\r\n        <span className=\"right-column\">{props.minHit}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DragonStats;","import React from 'react';\r\n\r\nconst GameOver = () => {\r\n  return (\r\n    <div className=\"gameover\">\r\n      <h3>The dragons took over the land.</h3>\r\n      <h3>Try again with a new hero!</h3>\r\n      <img src=\"/images/dragon.png\" alt=\"dragon\" className=\"gameover-dragon reverse-img\" />\r\n      <img src=\"/images/dragon.png\" alt=\"dragon\" className=\"gameover-dragon\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameOver;","import React from 'react';\r\n\r\ninterface LifeBarProps {\r\n  life: number;\r\n}\r\n\r\ninterface LifeBarState {\r\n  life: number;\r\n}\r\n\r\nexport class LifeBar extends React.Component<LifeBarProps, LifeBarState> {\r\n  constructor(props: LifeBarProps) {\r\n    super(props);\r\n    this.state = {\r\n      life: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ life: this.props.life });\r\n  }\r\n\r\n  render() {\r\n    const lifeBarStyles = {\r\n      width: `${this.props.life}%`\r\n    }\r\n    return (\r\n      <div className=\"lifebar\">\r\n        <div className=\"lifebar-background\">\r\n          <span className=\"lifebar-number\">{this.props.life}</span>\r\n          <div className=\"lifebar-life\" style={lifeBarStyles}></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default LifeBar;","import React, { Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { winGold, loseGold, gameOver } from '../store/hero/actions';\r\nimport { EquipmentType } from '../store/equipment/types';\r\nimport HeroStats from './HeroStats';\r\nimport DragonStats from './DragonStats';\r\nimport GameOver from './GameOver';\r\nimport LifeBar from './LifeBar';\r\n\r\ninterface BattlefieldProps {\r\n  fightOn: boolean;\r\n  fightOver: boolean;\r\n  heroWon: boolean;\r\n  winAmount: number;\r\n  loseAmount: number;\r\n  gold: number;\r\n  herosLife: number;\r\n  herosEquipment: EquipmentType[];\r\n  winGold: (amount: number) => void;\r\n  loseGold: (amount: number) => void;\r\n  gameOver: () => void;\r\n}\r\n\r\ninterface BattlefieldState {\r\n  fightOn: boolean;\r\n  fightOver: boolean;\r\n  heroWon: boolean;\r\n  winAmount: number;\r\n  loseAmount: number;\r\n  gameOver: boolean;\r\n  herosLife: number;\r\n  herosHit: number;\r\n  dragonsLife: number;\r\n  dragonsHit: number;\r\n  maxHitForHero: number;\r\n  minHitForHero: number;\r\n  maxHitForDragon: number;\r\n  minHitForDragon: number;\r\n}\r\n\r\ninterface MapStateProps {\r\n  heroReducer: {\r\n    gold: number;\r\n    life: number;\r\n    equipment: EquipmentType[];\r\n  }\r\n}\r\n\r\ninterface DispatchProps {\r\n  winGold: (amount: number) => void;\r\n  loseGold: (amount: number) => void;\r\n  gameOver: () => void;\r\n}\r\n\r\nexport class Battlefield extends React.Component<BattlefieldProps, BattlefieldState> {\r\n  constructor(props: BattlefieldProps) {\r\n    super(props);\r\n    this.state = {\r\n      fightOn: false,\r\n      fightOver: false,\r\n      heroWon: false,\r\n      winAmount: 3,\r\n      loseAmount: 2,\r\n      gameOver: false,\r\n      herosLife: 100,\r\n      herosHit: 0,\r\n      dragonsLife: 100,\r\n      dragonsHit: 0,\r\n      maxHitForHero: 30,\r\n      minHitForHero: 0,\r\n      maxHitForDragon: 40,\r\n      minHitForDragon: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // @TODO Better solution for maxHit calculations, now duplicates\r\n    let attack = 0, defense = 0, maxHitForHero = 30, maxHitForDragon = 40;\r\n    this.props.herosEquipment.map(equip => {\r\n      return (\r\n        equip.stats.map(stat => {\r\n          if (stat.title.toLowerCase() === \"attack\") {\r\n            return attack += stat.points;\r\n          } else if (stat.title.toLowerCase() === \"defense\") {\r\n            return defense += stat.points;\r\n          }\r\n          return null;\r\n        })\r\n      );\r\n    });\r\n\r\n    this.setState({\r\n      herosLife: this.props.herosLife,\r\n      maxHitForHero: maxHitForHero + attack,\r\n      minHitForHero: attack,\r\n      maxHitForDragon: maxHitForDragon - defense\r\n    });\r\n  }\r\n\r\n  startFight = async () => {\r\n    await this.setState({\r\n      fightOn: true,\r\n      herosLife: this.props.herosLife,\r\n      dragonsLife: 100,\r\n      herosHit: 0,\r\n      dragonsHit: 0\r\n    });\r\n    this.fight();\r\n  }\r\n\r\n  fight = async () => {\r\n    if (this.state.herosLife <= 0 || this.state.dragonsLife <= 0) {\r\n      await this.battleOver();\r\n    } else {\r\n      await this.dealDamage();\r\n    }\r\n  }\r\n\r\n  wait = (ms: number) => new Promise(res => setTimeout(res, ms));\r\n\r\n  dealDamage = async () => {\r\n    await this.wait(1000);\r\n    const herosHit = await Math.floor(Math.random() * this.state.maxHitForHero);\r\n    let dragonsLife = await this.state.dragonsLife - herosHit;\r\n    if (dragonsLife < 0) {\r\n      dragonsLife = 0;\r\n    }\r\n    await this.setState({\r\n      dragonsLife: dragonsLife,\r\n      herosHit\r\n    });\r\n\r\n    if (this.state.dragonsLife > 0) {\r\n      await this.wait(1000);\r\n      const dragonsHit = await Math.floor(Math.random() * this.state.maxHitForDragon);\r\n      let herosLife = await this.state.herosLife - dragonsHit;\r\n      if (herosLife < 0) {\r\n        herosLife = 0;\r\n      }\r\n      await this.setState({\r\n        herosLife: herosLife,\r\n        dragonsHit\r\n      });\r\n    }\r\n    this.fight();\r\n  }\r\n\r\n  battleOver = () => {\r\n    let heroWon: boolean;\r\n    this.state.herosLife > 0 ? heroWon = true : heroWon = false;\r\n    this.setState({\r\n      fightOn: false,\r\n      fightOver: true,\r\n      heroWon: heroWon\r\n    });\r\n    heroWon ? this.battleWon() : this.battleLost();\r\n  }\r\n\r\n  battleWon = () => {\r\n    this.winGold();\r\n  }\r\n\r\n  winGold = () => {\r\n    this.props.winGold(this.state.winAmount);\r\n  }\r\n\r\n  battleLost = () => {\r\n    if (this.props.gold - this.state.loseAmount <= 0) {\r\n      this.gameOver();\r\n    } else {\r\n      this.loseGold();\r\n    }\r\n  }\r\n\r\n  loseGold = () => {\r\n    this.props.loseGold(this.state.loseAmount);\r\n  }\r\n\r\n  gameOver = () => {\r\n    this.setState({\r\n      gameOver: true\r\n    });\r\n    this.props.gameOver();\r\n  }\r\n\r\n  render() {\r\n    const { gold, herosEquipment } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {this.state.gameOver\r\n        ? \r\n          <GameOver />\r\n        :\r\n          <div className=\"battlefield\">\r\n            <h1>Battlefield</h1>\r\n\r\n            <div className=\"battlefield-characters\">\r\n              <div className=\"battlefield-character\" id=\"hero-character\">\r\n                <div className=\"battlefield-hero-stats\">\r\n                  <p>Gold: {gold}</p>\r\n                  <HeroStats equipment={herosEquipment} />\r\n                </div>\r\n                <LifeBar life={this.state.herosLife} />\r\n                <div className=\"battlefield-damage hero-damage\">\r\n                  {this.state.fightOn || this.state.fightOver\r\n                  ? -this.state.dragonsHit\r\n                  : null}\r\n                </div>\r\n                <img src=\"/images/hero.png\" alt=\"hero\" className=\"battlefield-character-image\" />\r\n              </div>\r\n              <div className=\"battlefield-character\" id=\"dragon-character\">\r\n                <div className=\"battlefied-dragon-stats\">\r\n                  <DragonStats\r\n                    maxHit={this.state.maxHitForDragon}\r\n                    minHit={this.state.minHitForDragon}\r\n                  />\r\n                </div>\r\n                <LifeBar life={this.state.dragonsLife} />\r\n                <div className=\"battlefield-damage dragon-damage\">\r\n                  {this.state.fightOn || this.state.fightOver\r\n                  ? -this.state.herosHit\r\n                  : null}\r\n                </div>\r\n                <img src=\"/images/dragon.png\" alt=\"dragon\" className=\"battlefield-character-image\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"battlefield-actions\">\r\n              <button className=\"button battlefield-fight-button\" onClick={this.startFight}>Fight</button>\r\n              {this.state.fightOver && !this.state.fightOn  && this.state.heroWon\r\n              ? <p>You won!</p>\r\n              : null}\r\n              {this.state.fightOver && !this.state.fightOn  && !this.state.heroWon\r\n              ? <p>You lost!</p>\r\n              : null}\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: MapStateProps) => ({\r\n  gold: state.heroReducer.gold,\r\n  herosLife: state.heroReducer.life,\r\n  herosEquipment: state.heroReducer.equipment\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  winGold: (amount: number) => dispatch(winGold(amount)),\r\n  loseGold: (amount: number) => dispatch(loseGold(amount)),\r\n  gameOver: () => dispatch(gameOver())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Battlefield);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport Home from '../components/Home';\r\nimport Hero from '../components/Hero';\r\nimport EquipmentShop from '../components/EquipmentShop';\r\nimport Battlefield from '../components/Battlefield';\r\n\r\ninterface RoutesProps {\r\n  name: string,\r\n}\r\n\r\ninterface RoutesState {\r\n  heroReducer: {\r\n    name: string\r\n  }\r\n}\r\n\r\nclass Routes extends React.Component<RoutesProps> {\r\n  render() {\r\n\r\n    const { name } = this.props;\r\n    return (\r\n      <Router>\r\n        <header className=\"header\">\r\n          <Link to=\"/\"><img src=\"favicon.png\" alt=\"logo\" className=\"logo\" /></Link>\r\n          <div className=\"container\">\r\n            <nav className=\"nav\">\r\n              <ul className=\"nav-ul\">\r\n                <li className=\"nav-li\"><Link to=\"/hero\" className=\"nav-link\">Hero</Link></li>\r\n                {name ? <li className=\"nav-li\"><Link to=\"/shop\" className=\"nav-link\">Shop</Link></li> : null}\r\n                {name ? <li className=\"nav-li\"><Link to=\"/battlefield\" className=\"nav-link\">Battlefield</Link></li> : null}\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </header>\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/hero\" component={Hero} />\r\n            <Route path=\"/shop\" component={EquipmentShop} />\r\n            <Route path=\"/battlefield\" component={Battlefield} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RoutesState) => ({\r\n  name: state.heroReducer.name\r\n});\r\n\r\nexport default connect(mapStateToProps)(Routes);","import React, { Dispatch } from 'react';\nimport Routes from './routes/Routes';\nimport { connect } from 'react-redux';\nimport { fetchEquipment } from './store/equipment/actions';\n\ninterface DispatchProps {\n  fetchEquipment: () => void;\n}\n\nclass App extends React.Component<DispatchProps> {\n  componentDidMount() {\n    this.props.fetchEquipment();\n  }\n\n  render() {\n    return (\n      <Routes />\n    );\n  };\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\n  fetchEquipment: () => dispatch(fetchEquipment())\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport App from './App';\nimport './styles/index.scss';\nimport './styles/responsive.scss';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}
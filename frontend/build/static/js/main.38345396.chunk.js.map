{"version":3,"sources":["store/hero/actions/index.tsx","store/hero/reducer/index.tsx","services/equipment.tsx","store/equipment/actions/index.tsx","store/equipment/reducer/index.tsx","store/index.tsx","components/Home.tsx","components/Equipment.tsx","components/HeroStats.tsx","components/Hero.tsx","components/EquipmentForSale.tsx","components/EquipmentShop.tsx","components/GameOver.tsx","components/LifeBar.tsx","components/Battlefield.tsx","routes/Routes.tsx","App.tsx","index.tsx"],"names":["CREATE_HERO","BUY_EQUIPMENT","WIN_GOLD","LOSE_GOLD","GAME_OVER","GAIN_LIFE","LOSE_LIFE","initialState","name","gold","life","equipment","heroReducer","state","arguments","length","undefined","action","type","Object","objectSpread","newEquipmentList","concat","price","goldAmount","newGoldAmount","lifeAmount","newLifeAmount","baseUrl","services_equipment","getEquipment","axios","get","then","res","data","getRandomEquipment","getXEquipment","amount","FETCH_EQUIPMENT","fetchEquipmentSuccess","equipmentReducer","rootReducer","combineReducers","Home","react_default","a","createElement","className","Equipment","props","title","stats","map","stat","key","points","src","imageUrl","alt","HeroStats","attack","defense","movement","equip","toLowerCase","Hero","_React$Component","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleNameChange","event","setState","currentTarget","value","createHero","nameRequiredWarning","inherits","createClass","_this$props","htmlFor","id","onChange","autoFocus","onClick","components_HeroStats","components_Equipment","React","Component","connect","dispatch","EquipmentForSale","_getPrototypeOf2","_len","args","Array","_key","apply","buyEquipment","_this2","herosEquipment","includes","disabled","EquipmentShop","_ref","components_EquipmentForSale","GameOver","LifeBar","lifeBarStyles","width","style","Battlefield","fight","fightOn","heroElement","document","getElementById","dragonElement","animate","transform","duration","iterations","heroWon","randomNum","Math","floor","random","setTimeout","fightOver","battleWon","battleLost","herosLife","winGold","winAmount","loseAmount","gameOver","loseGold","components_GameOver","components_LifeBar","Routes","react_router_dom","to","react_router","path","exact","component","App","fetchEquipment","routes_Routes","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","equipmentService","sent","abrupt","stop","_x","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App"],"mappings":"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","file":"static/js/main.38345396.chunk.js","sourcesContent":["import { EquipmentType } from '../../equipment/types';\r\n\r\nexport const CREATE_HERO = 'CREATE_HERO';\r\nexport const BUY_EQUIPMENT = 'BUY_EQUIPMENT';\r\nexport const WIN_GOLD = 'WIN_GOLD';\r\nexport const LOSE_GOLD = 'LOSE_GOLD';\r\nexport const GAME_OVER = 'GAME_OVER';\r\nexport const GAIN_LIFE = 'GAIN_LIFE';\r\nexport const LOSE_LIFE = 'LOSE_LIFE';\r\n\r\nexport const createHero = (name: string) => {\r\n  return {\r\n    type: CREATE_HERO,\r\n    name\r\n  };\r\n};\r\n\r\nexport const buyEquipment = (equipment: EquipmentType) => {\r\n  return {\r\n    type: BUY_EQUIPMENT,\r\n    equipment\r\n  };\r\n};\r\n\r\nexport const winGold = (amount: number) => {\r\n  return {\r\n    type: WIN_GOLD,\r\n    goldAmount: amount\r\n  };\r\n};\r\n\r\nexport const loseGold = (amount: number) => {\r\n  return {\r\n    type: LOSE_GOLD,\r\n    goldAmount: amount\r\n  };\r\n};\r\n\r\nexport const gainLife = (amount: number) => {\r\n  return {\r\n    type: GAIN_LIFE,\r\n    lifeAmount: amount\r\n  };\r\n};\r\n\r\nexport const loseLife = (amount: number) => {\r\n  return {\r\n    type: LOSE_LIFE,\r\n    lifeAmount: amount\r\n  };\r\n};\r\n\r\nexport const gameOver = () => {\r\n  return {\r\n    type: GAME_OVER\r\n  }\r\n}","import {\r\n  CREATE_HERO,\r\n  BUY_EQUIPMENT,\r\n  WIN_GOLD,\r\n  LOSE_GOLD,\r\n  GAME_OVER,\r\n  GAIN_LIFE,\r\n  LOSE_LIFE\r\n} from '../actions';\r\nimport { EquipmentType } from '../../equipment/types';\r\nimport { HeroType } from '../types';\r\n\r\nconst initialState: HeroType = {\r\n  name: '',\r\n  gold: 0,\r\n  life: 0,\r\n  equipment: []\r\n};\r\n\r\nexport function heroReducer(\r\n  state = initialState,\r\n  action: { type: string, name: string, goldAmount: number, lifeAmount: number, equipment: EquipmentType }) {\r\n    switch (action.type) {\r\n      case CREATE_HERO:\r\n        return {\r\n          ...state,\r\n          gold: 10,\r\n          life: 100,\r\n          name: action.name\r\n        };\r\n      case BUY_EQUIPMENT:\r\n        const newEquipmentList = state.equipment.concat(action.equipment);\r\n        return {\r\n          ...state,\r\n          gold: state.gold - action.equipment.price,\r\n          equipment: newEquipmentList\r\n        };\r\n      case WIN_GOLD:\r\n        return {\r\n          ...state,\r\n          gold: state.gold + action.goldAmount\r\n        };\r\n      case LOSE_GOLD:\r\n        let newGoldAmount = state.gold - action.goldAmount;\r\n        if (newGoldAmount < 0) {\r\n          newGoldAmount = 0;\r\n        }\r\n        return {\r\n          ...state,\r\n          gold: newGoldAmount\r\n        };\r\n      case GAIN_LIFE:\r\n        return {\r\n          ...state,\r\n          life: state.life + action.lifeAmount\r\n        };\r\n      case LOSE_LIFE:\r\n        let newLifeAmount = state.life - action.lifeAmount;\r\n        if (newLifeAmount < 0) {\r\n          newLifeAmount = 0;\r\n        }\r\n        return {\r\n          ...state,\r\n          life: newLifeAmount\r\n        };\r\n      case GAME_OVER:\r\n        return {\r\n          name: '',\r\n          gold: 0,\r\n          life: 0,\r\n          equipment: []\r\n        };\r\n      default:\r\n        return state;\r\n    };\r\n};\r\n\r\nexport default heroReducer;","import axios from 'axios';\r\nconst baseUrl: string = '/api/equipment';\r\n\r\nconst getEquipment = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(res => { return res.data });\r\n}\r\n\r\nconst getRandomEquipment = () => {\r\n  const request = axios.get(`${baseUrl}/random`);\r\n  return request.then(res => { return res.data });\r\n}\r\n\r\nconst getXEquipment = (amount: number) => {\r\n  const request = axios.get(`${baseUrl}/amount/${amount}`);\r\n  return request.then(res => { return res.data });\r\n}\r\n\r\nexport default {\r\n  getEquipment,\r\n  getRandomEquipment,\r\n  getXEquipment\r\n}","import { EquipmentType } from '../../equipment/types';\r\nimport equipmentService from '../../../services/equipment';\r\nimport { Dispatch } from 'react';\r\n\r\nexport const FETCH_EQUIPMENT = 'FETCH_EQUIPMENT';\r\n\r\nexport function fetchEquipment() {\r\n  return async (dispatch: Dispatch<any>) => {\r\n    const res = await equipmentService.getEquipment();\r\n    dispatch(fetchEquipmentSuccess(res.equipment));\r\n    return res;\r\n  }\r\n};\r\n\r\nexport const fetchEquipmentSuccess = (equipment: EquipmentType[]) => ({\r\n  type: FETCH_EQUIPMENT,\r\n  equipment\r\n});","import {\r\n  FETCH_EQUIPMENT\r\n} from '../actions';\r\nimport { EquipmentType } from '../../equipment/types';\r\n\r\ninterface State {\r\n  equipment?: EquipmentType[];\r\n}\r\n\r\nconst initialState: State = {\r\n  equipment: []\r\n};\r\n\r\nexport function equipmentReducer(\r\n  state = initialState,\r\n  action: { type: string, equipment?: EquipmentType[] }) {\r\n    switch (action.type) {\r\n      case FETCH_EQUIPMENT:\r\n        return {\r\n          equipment: action.equipment\r\n        };\r\n      default:\r\n        return state;\r\n    };\r\n};\r\n\r\nexport default equipmentReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport heroReducer from './hero/reducer';\r\nimport equipmentReducer from './equipment/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  heroReducer: heroReducer,\r\n  equipmentReducer: equipmentReducer\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n  );\r\n\r\n  return store;\r\n};","import React from 'react';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <h1>DragonLand</h1>\r\n      <div className=\"home-instuctions\">\r\n        <span className=\"home-instruction-1\">Create a hero,</span>\r\n        <span className=\"home-instruction-2\">equip yourself,</span>\r\n        <span className=\"home-instruction-3\">slay the dragons!</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { EquipmentType } from '../store/equipment/types';\r\n\r\ninterface EquipmentProps {\r\n  equipment: EquipmentType;\r\n}\r\n\r\nconst Equipment = (props: EquipmentProps) => {\r\n  return (\r\n    <div className=\"equipment\">\r\n      <p>{props.equipment.title}</p>\r\n      {props.equipment.stats.map(stat => {\r\n        return (\r\n          <div key={stat.title}>\r\n            {stat.title + \": +\" + stat.points}\r\n          </div>\r\n        );\r\n      })}\r\n      <img src={props.equipment.imageUrl} alt={props.equipment.title} className=\"equipment-img\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Equipment;","import React from 'react';\r\nimport { EquipmentType } from '../store/equipment/types';\r\n\r\ninterface EquipmentProps {\r\n  equipment: EquipmentType[];\r\n}\r\n\r\nconst HeroStats = (props: EquipmentProps) => {\r\n  let attack = 0, defense = 0, movement = 0;\r\n\r\n  props.equipment.map(equip => {\r\n    return (\r\n      equip.stats.map(stat => {\r\n        if (stat.title.toLowerCase() === \"attack\") {\r\n          return attack += stat.points;\r\n        } else if (stat.title.toLowerCase() === \"defense\") {\r\n          return defense += stat.points;\r\n        } else if (stat.title.toLowerCase() === \"movement\") {\r\n          return movement += stat.points;\r\n        }\r\n        return null;\r\n      })\r\n    );\r\n  })\r\n\r\n  return (\r\n    <div className=\"hero-stats\">\r\n      <p>\r\n        <span className=\"left-column\">Attack: </span>\r\n        <span className=\"right-column\">{attack}</span>\r\n      </p>\r\n      <p>\r\n        <span className=\"left-column\">Defense: </span>\r\n        <span className=\"right-column\">{defense}</span>\r\n      </p>\r\n      <p>\r\n        <span className=\"left-column\">Movement: </span>\r\n        <span className=\"right-column\">{movement}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default HeroStats;","import React, { Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Equipment from './Equipment';\r\nimport HeroStats from './HeroStats';\r\nimport { EquipmentType } from '../store/equipment/types';\r\nimport { createHero } from '../store/hero/actions';\r\n\r\ninterface HeroProps {\r\n  name: string;\r\n  gold: number;\r\n  life: number;\r\n  equipment: EquipmentType[];\r\n  createHero: (name: string) => void;\r\n}\r\n\r\ninterface HeroState {\r\n  heroReducer: {\r\n    name: string,\r\n    gold: number,\r\n    life: number,\r\n    equipment: EquipmentType[]\r\n  }\r\n}\r\n\r\ninterface DispatchProps {\r\n  createHero: (name: string) => void;\r\n}\r\n\r\ntype createHeroParam = React.SyntheticEvent<{ value: string }>;\r\n\r\nexport class Hero extends React.Component<HeroProps, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      nameRequiredWarning: false\r\n    }\r\n  }\r\n\r\n  handleNameChange = (event: createHeroParam) => {\r\n    this.setState({\r\n      name: event.currentTarget.value\r\n    })\r\n  }\r\n\r\n  createHero = () => {\r\n    if (this.state.name.length > 0) {\r\n      this.props.createHero(this.state.name);\r\n    } else {\r\n      this.setState({ nameRequiredWarning: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, gold, life, equipment } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {name.length === 0 ?\r\n          <div className=\"hero-form\">\r\n            <h3>Create a hero</h3>\r\n            {this.state.nameRequiredWarning\r\n            ? <div className=\"name-required-warning\"><p>Please enter name</p></div>\r\n            : null}\r\n            <label htmlFor=\"input-name\">Name:</label>\r\n            <input type=\"text\" id=\"input-name\" onChange={this.handleNameChange} autoFocus />\r\n            <button className=\"button create-hero-btn\" onClick={this.createHero}>Create</button>\r\n          </div>\r\n        : null}\r\n\r\n        {name && name.length > 0\r\n        ?\r\n          <div className=\"hero-info\">\r\n            <h3>Your hero:</h3>\r\n            <p>Name: {name}</p>\r\n            <p>Gold: {gold}</p>\r\n            <p>Life: {life}</p>\r\n            <HeroStats equipment={equipment} />\r\n            <h3>Equipments:</h3>\r\n            {equipment && equipment.length > 0\r\n            ?\r\n              <div className=\"grid-container\">\r\n                {equipment.map(equipment => (\r\n                  <div className=\"grid-item\" key={equipment.id}>\r\n                    <Equipment equipment={equipment} key={equipment.id} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            : null}\r\n          </div>\r\n        : null}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: HeroState) => ({\r\n  name: state.heroReducer.name,\r\n  gold: state.heroReducer.gold,\r\n  life: state.heroReducer.life,\r\n  equipment: state.heroReducer.equipment\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  createHero: (name: string) => dispatch(createHero(name))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Hero);","import React, { Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { EquipmentType } from '../store/equipment/types';\r\nimport { buyEquipment } from '../store/hero/actions';\r\n\r\ninterface EquipmentForSaleProps {\r\n  gold: number;\r\n  herosEquipment: EquipmentType[];\r\n  equipment: EquipmentType;\r\n  buyEquipment: (equipment: EquipmentType) => void;\r\n}\r\n\r\ninterface EquipmentForSaleState {\r\n  heroReducer: {\r\n    gold: number;\r\n    equipment: EquipmentType[];\r\n  }\r\n}\r\n\r\ninterface DispatchProps {\r\n  buyEquipment: (equipment: EquipmentType) => void;\r\n}\r\n\r\nexport class EquipmentForSale extends React.Component<EquipmentForSaleProps, EquipmentForSaleState> {\r\n  buyEquipment = (equipment: EquipmentType) => {\r\n    this.props.buyEquipment(equipment);\r\n  }\r\n\r\n  render() {\r\n    const { gold, herosEquipment } = this.props;\r\n    return (\r\n      <div className=\"equipment-for-sale\">\r\n        <p>{this.props.equipment.title}</p>\r\n\r\n        {this.props.equipment.stats.map(stat => {\r\n          return (\r\n            <div key={stat.title}>\r\n              {stat.title + \": +\" + stat.points}\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <p>Price: {this.props.equipment.price}</p>\r\n        <img src={this.props.equipment.imageUrl} alt={this.props.equipment.title} className=\"equipment-img equipment-for-sale-img\" />\r\n        {gold >= this.props.equipment.price && !herosEquipment.includes(this.props.equipment)\r\n        ?\r\n          <button onClick={() => this.buyEquipment(this.props.equipment)} className=\"button buy-equipment-btn\">Buy</button>\r\n        :\r\n          herosEquipment.includes(this.props.equipment)\r\n          ? <button disabled className=\"button buy-equipment-btn owned\">Owned</button>\r\n          : <button disabled className=\"button buy-equipment-btn no-gold\">No gold</button>\r\n        }\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: EquipmentForSaleState) => ({\r\n  gold: state.heroReducer.gold,\r\n  herosEquipment: state.heroReducer.equipment\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  buyEquipment: (equipment: EquipmentType) => dispatch(buyEquipment(equipment))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EquipmentForSale);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport EquipmentForSale from './EquipmentForSale';\r\nimport { EquipmentType } from '../store/equipment/types';\r\n\r\ninterface EquipmentShopProps {\r\n  equipment: EquipmentType[];\r\n  herosEquipment: EquipmentType[];\r\n  gold: number;\r\n}\r\n\r\ninterface EquipmentShopState {\r\n  equipmentReducer: {\r\n    equipment: EquipmentType[];\r\n  },\r\n  heroReducer: {\r\n    gold: number;\r\n    equipment: EquipmentType[];\r\n  }\r\n}\r\n\r\nclass EquipmentShop extends React.Component<EquipmentShopProps, EquipmentShopState> {\r\n\r\n  render() {\r\n    const { equipment, herosEquipment, gold } = this.props as EquipmentShopProps;\r\n    return (\r\n      <div>\r\n        <h3>Gold: {gold}</h3>\r\n        {equipment.length > 0\r\n        ?\r\n          <div className=\"grid-container\">\r\n            {equipment.map(equipment => (\r\n              !herosEquipment.includes(equipment)\r\n              ?\r\n                <div className=\"grid-item\" key={equipment.id}>\r\n                  <EquipmentForSale equipment={equipment}/>\r\n                </div>\r\n              : null\r\n            ))}\r\n          </div>\r\n        : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: EquipmentShopState) => ({\r\n  equipment: state.equipmentReducer.equipment,\r\n  gold: state.heroReducer.gold,\r\n  herosEquipment: state.heroReducer.equipment\r\n});\r\n\r\nexport default connect(mapStateToProps)(EquipmentShop);","import React from 'react';\r\n\r\nconst GameOver = () => {\r\n  return (\r\n    <div className=\"gameover\">\r\n      <h3>The dragons took over the land.</h3>\r\n      <h3>Try again with a new hero!</h3>\r\n      <img src=\"/images/dragon.png\" alt=\"dragon\" className=\"gameover-dragon reverse-img\" />\r\n      <img src=\"/images/dragon.png\" alt=\"dragon\" className=\"gameover-dragon\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameOver;","import React from 'react';\r\n\r\ninterface LifeBarProps {\r\n  life: number;\r\n}\r\n\r\ninterface LifeBarState {\r\n  life: number;\r\n}\r\n\r\nexport class LifeBar extends React.Component<LifeBarProps, LifeBarState> {\r\n  constructor(props: LifeBarProps) {\r\n    super(props);\r\n    this.state = {\r\n      life: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ life: this.props.life });\r\n  }\r\n\r\n  render() {\r\n    const lifeBarStyles = {\r\n      width: `${this.props.life}%`\r\n    }\r\n    return (\r\n      <div className=\"lifebar\">\r\n        <div className=\"lifebar-background\">\r\n          <span className=\"lifebar-number\">{this.props.life}</span>\r\n          <div className=\"lifebar-life\" style={lifeBarStyles}></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default LifeBar;","import React, { Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { winGold, loseGold, gameOver } from '../store/hero/actions';\r\nimport { EquipmentType } from '../store/equipment/types';\r\nimport HeroStats from './HeroStats';\r\nimport GameOver from './GameOver';\r\nimport LifeBar from './LifeBar';\r\n\r\ninterface BattlefieldProps {\r\n  fightOn: boolean;\r\n  fightOver: boolean;\r\n  heroWon: boolean;\r\n  winAmount: number;\r\n  loseAmount: number;\r\n  gold: number;\r\n  herosLife: number;\r\n  herosEquipment: EquipmentType[];\r\n  winGold: (amount: number) => void;\r\n  loseGold: (amount: number) => void;\r\n  gameOver: () => void;\r\n}\r\n\r\ninterface BattlefieldState {\r\n  fightOn: boolean;\r\n  fightOver: boolean;\r\n  heroWon: boolean;\r\n  winAmount: number;\r\n  loseAmount: number;\r\n  gameOver: boolean;\r\n  herosLife: number;\r\n}\r\n\r\ninterface MapStateProps {\r\n  heroReducer: {\r\n    gold: number;\r\n    life: number;\r\n    equipment: EquipmentType[];\r\n  }\r\n}\r\n\r\ninterface DispatchProps {\r\n  winGold: (amount: number) => void;\r\n  loseGold: (amount: number) => void;\r\n  gameOver: () => void;\r\n}\r\n\r\nexport class Battlefield extends React.Component<BattlefieldProps, BattlefieldState> {\r\n  constructor(props: BattlefieldProps) {\r\n    super(props);\r\n    this.state = {\r\n      fightOn: false,\r\n      fightOver: false,\r\n      heroWon: false,\r\n      winAmount: 3,\r\n      loseAmount: 2,\r\n      gameOver: false,\r\n      herosLife: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ herosLife: this.props.herosLife });\r\n  }\r\n\r\n  fight = () => {\r\n    this.setState({ fightOn: true });\r\n    const heroElement = document.getElementById('hero-charater');\r\n    const dragonElement = document.getElementById('dragon-character');\r\n    if (heroElement && dragonElement) {\r\n      heroElement.animate({\r\n        transform: ['rotate(0deg)', 'rotate(360deg)'],\r\n      }, {\r\n          duration: 1000,\r\n          iterations: 2,\r\n      });\r\n\r\n      dragonElement.animate({\r\n        transform: [ 'translateY(0px)', 'translateY(10px)' ]\r\n        }, {\r\n          duration: 1000,\r\n          iterations: 2\r\n        });\r\n    }\r\n\r\n    const randomNum = Math.floor(Math.random() * 101);\r\n    let heroWon: boolean;\r\n    randomNum % 2 === 0 ? heroWon = true : heroWon = false;\r\n\r\n    setTimeout(() => {\r\n      this.setState({\r\n        fightOn: false,\r\n        fightOver: true,\r\n        heroWon: heroWon\r\n      });\r\n      heroWon ? this.battleWon() : this.battleLost();\r\n    }, 2000);\r\n  }\r\n\r\n  battleWon = () => {\r\n    this.setState({ herosLife: 100 });\r\n    this.winGold();\r\n  }\r\n\r\n  winGold = () => {\r\n    this.props.winGold(this.state.winAmount);\r\n  }\r\n\r\n  battleLost = () => {\r\n    this.setState({ herosLife: 0 });\r\n    if (this.props.gold - this.state.loseAmount <= 0) {\r\n      this.gameOver();\r\n    } else {\r\n      this.loseGold();\r\n    }\r\n  }\r\n\r\n  loseGold = () => {\r\n    this.props.loseGold(this.state.loseAmount);\r\n  }\r\n\r\n  gameOver = () => {\r\n    this.setState({\r\n      gameOver: true\r\n    });\r\n    this.props.gameOver();\r\n  }\r\n\r\n  render() {\r\n    const { gold, herosEquipment } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {this.state.gameOver\r\n        ? \r\n          <GameOver />\r\n        :\r\n          <div className=\"battlefield\">\r\n            <h1>Battlefield</h1>\r\n            <div className=\"battlefield-hero-stats\">\r\n              <p>Gold: {gold}</p>\r\n              <HeroStats equipment={herosEquipment} />\r\n              <LifeBar life={this.state.herosLife} />\r\n            </div>\r\n\r\n            <div className=\"battlefield-characters\">\r\n              <div className=\"battlefield-character\" id=\"hero-charater\">\r\n                <img src=\"/images/hero.png\" alt=\"hero\" className=\"battlefield-character-image\" />\r\n              </div>\r\n              <div className=\"battlefield-character\" id=\"dragon-character\">\r\n                <img src=\"/images/dragon.png\" alt=\"dragon\" className=\"battlefield-character-image\" />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"battlefield-actions\">\r\n              <button className=\"button battlefield-fight-button\" onClick={this.fight}>Fight</button>\r\n              {this.state.fightOver && !this.state.fightOn  && this.state.heroWon\r\n              ? <p>You won!</p>\r\n              : null}\r\n              {this.state.fightOver && !this.state.fightOn  && !this.state.heroWon\r\n              ? <p>You lost!</p>\r\n              : null}\r\n            </div>\r\n          </div>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: MapStateProps) => ({\r\n  gold: state.heroReducer.gold,\r\n  herosLife: state.heroReducer.life,\r\n  herosEquipment: state.heroReducer.equipment\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  winGold: (amount: number) => dispatch(winGold(amount)),\r\n  loseGold: (amount: number) => dispatch(loseGold(amount)),\r\n  gameOver: () => dispatch(gameOver())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Battlefield);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport Home from '../components/Home';\r\nimport Hero from '../components/Hero';\r\nimport EquipmentShop from '../components/EquipmentShop';\r\nimport Battlefield from '../components/Battlefield';\r\n\r\ninterface RoutesProps {\r\n  name: string,\r\n}\r\n\r\ninterface RoutesState {\r\n  heroReducer: {\r\n    name: string\r\n  }\r\n}\r\n\r\nclass Routes extends React.Component<RoutesProps> {\r\n  render() {\r\n\r\n    const { name } = this.props;\r\n    return (\r\n      <Router>\r\n        <header className=\"header\">\r\n          <Link to=\"/\"><img src=\"favicon.png\" alt=\"logo\" className=\"logo\" /></Link>\r\n          <div className=\"container\">\r\n            <nav className=\"nav\">\r\n              <ul className=\"nav-ul\">\r\n                <li className=\"nav-li\"><Link to=\"/hero\" className=\"nav-link\">Hero</Link></li>\r\n                {name ? <li className=\"nav-li\"><Link to=\"/shop\" className=\"nav-link\">Shop</Link></li> : null}\r\n                {name ? <li className=\"nav-li\"><Link to=\"/battlefield\" className=\"nav-link\">Battlefield</Link></li> : null}\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </header>\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/hero\" component={Hero} />\r\n            <Route path=\"/shop\" component={EquipmentShop} />\r\n            <Route path=\"/battlefield\" component={Battlefield} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RoutesState) => ({\r\n  name: state.heroReducer.name\r\n});\r\n\r\nexport default connect(mapStateToProps)(Routes);","import React, { Dispatch } from 'react';\nimport Routes from './routes/Routes';\nimport { connect } from 'react-redux';\nimport { fetchEquipment } from './store/equipment/actions';\n\ninterface DispatchProps {\n  fetchEquipment: () => void;\n}\n\nclass App extends React.Component<DispatchProps> {\n  componentDidMount() {\n    this.props.fetchEquipment();\n  }\n\n  render() {\n    return (\n      <Routes />\n    );\n  };\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\n  fetchEquipment: () => dispatch(fetchEquipment())\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport App from './App';\nimport './styles/index.scss';\nimport './styles/responsive.scss';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}
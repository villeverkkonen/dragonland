{"version":3,"sources":["store/hero/reducer/index.tsx","store/hero/actions/index.tsx","services/equipment.tsx","store/equipment/actions/index.tsx","store/equipment/reducer/index.tsx","store/battlefield/reducer/index.tsx","store/battlefield/actions/index.tsx","store/index.tsx","services/highscores.tsx","components/Highscores.tsx","components/Home.tsx","components/Equipment.tsx","components/HeroStats.tsx","components/Hero.tsx","components/EquipmentForSale.tsx","components/EquipmentShop.tsx","components/LifeBar.tsx","components/HeroCharacter.tsx","components/DragonStats.tsx","components/DragonCharacter.tsx","components/Battlefield.tsx","components/GameOver.tsx","components/GameWin.tsx","routes/Routes.tsx","App.tsx","index.tsx"],"names":["initialState","name","gold","life","attack","defense","maxHit","everyEquipmentCollected","roundsFought","hits","equipment","heroReducer","state","action","type","stats","map","stat","title","toLowerCase","points","price","concat","goldAmount","newGoldAmount","lifeAmount","newLifeAmount","baseUrl","axios","get","then","res","data","fetchEquipmentSuccess","compare","a","b","id","equipmentReducer","fightOn","battlefieldReducer","rootReducer","combineReducers","sort","slice","highscore","post","Highscores","props","highscores","highscoreService","this","setState","className","key","length","React","Component","Home","Equipment","src","imageUrl","alt","HeroStats","connect","Hero","handleNameChange","event","currentTarget","value","createHero","nameRequiredWarning","htmlFor","onChange","autoFocus","onClick","dispatch","EquipmentForSale","buyEquipment","herosEquipment","includes","disabled","EquipmentShop","to","LifeBar","lifeBarStyles","width","style","fightOver","hitAmount","HeroCharacter","heroWon","DragonStats","DragonCharacter","Battlefield","startFight","herosLife","dragonsLife","herosHit","dragonsHit","switchFightOn","incrementRoundsFought","fight","battleOver","dealDamage","wait","ms","Promise","setTimeout","showWinnerForTwoSec","showWinner","animation","elementId","transformParams1","transformParams2","element","document","getElementById","animate","transform","duration","iterations","incrementHits","Math","floor","random","maxHitForHero","maxHitForDragon","battleWon","battleLost","newHighscore","gameWin","winGold","winAmount","loseAmount","gameOver","loseGold","extraHitForGreenDragon","amount","GameOver","Routes","checkIfFightOn","e","preventDefault","path","exact","component","GameWin","App","fetchEquipment","equipmentService","store","createStore","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.6e8e0412.chunk.js","sourcesContent":["import {\r\n  CREATE_HERO,\r\n  BUY_EQUIPMENT,\r\n  WIN_GOLD,\r\n  LOSE_GOLD,\r\n  GAME_OVER,\r\n  GAIN_LIFE,\r\n  LOSE_LIFE,\r\n  EVERY_EQUIPMENT_COLLECTED,\r\n  INCREMENT_ROUNDS_FOUGHT,\r\n  INCREMENT_HITS,\r\n} from '../actions'\r\nimport { EquipmentType } from '../../equipment/types'\r\nimport { HeroType } from '../types'\r\n\r\nconst initialState: HeroType = {\r\n  name: '',\r\n  gold: 0,\r\n  life: 0,\r\n  attack: 0,\r\n  defense: 0,\r\n  maxHit: 30,\r\n  everyEquipmentCollected: false,\r\n  roundsFought: 0,\r\n  hits: 0,\r\n  equipment: [],\r\n}\r\n\r\nexport function heroReducer(\r\n  state = initialState,\r\n  action: {\r\n    type: string\r\n    name: string\r\n    goldAmount: number\r\n    lifeAmount: number\r\n    equipment: EquipmentType\r\n  },\r\n) {\r\n  switch (action.type) {\r\n    case CREATE_HERO:\r\n      return {\r\n        ...state,\r\n        gold: 4,\r\n        life: 100,\r\n        maxHit: 30,\r\n        name: action.name,\r\n      }\r\n    case BUY_EQUIPMENT:\r\n      let attack = 0\r\n      let defense = 0\r\n      action.equipment.stats.map((stat) => {\r\n        if (stat.title.toLowerCase() === 'attack') {\r\n          attack = stat.points\r\n        } else if (stat.title.toLowerCase() === 'defense') {\r\n          defense = stat.points\r\n        }\r\n        return null\r\n      })\r\n      return {\r\n        ...state,\r\n        gold: state.gold - action.equipment.price,\r\n        attack: state.attack + attack,\r\n        defense: state.defense + defense,\r\n        maxHit: state.maxHit + attack,\r\n        equipment: state.equipment.concat(action.equipment),\r\n      }\r\n    case WIN_GOLD:\r\n      return {\r\n        ...state,\r\n        gold: state.gold + action.goldAmount,\r\n      }\r\n    case LOSE_GOLD:\r\n      let newGoldAmount = state.gold - action.goldAmount\r\n      if (newGoldAmount < 0) {\r\n        newGoldAmount = 0\r\n      }\r\n      return {\r\n        ...state,\r\n        gold: newGoldAmount,\r\n      }\r\n    case GAIN_LIFE:\r\n      return {\r\n        ...state,\r\n        life: state.life + action.lifeAmount,\r\n      }\r\n    case LOSE_LIFE:\r\n      let newLifeAmount = state.life - action.lifeAmount\r\n      if (newLifeAmount < 0) {\r\n        newLifeAmount = 0\r\n      }\r\n      return {\r\n        ...state,\r\n        life: newLifeAmount,\r\n      }\r\n    case INCREMENT_ROUNDS_FOUGHT:\r\n      return {\r\n        ...state,\r\n        roundsFought: state.roundsFought + 1,\r\n      }\r\n    case INCREMENT_HITS:\r\n      return {\r\n        ...state,\r\n        hits: state.hits + 1,\r\n      }\r\n    case EVERY_EQUIPMENT_COLLECTED:\r\n      return {\r\n        ...state,\r\n        everyEquipmentCollected: true,\r\n      }\r\n    case GAME_OVER:\r\n      return {\r\n        name: '',\r\n        gold: 0,\r\n        life: 0,\r\n        attack: 0,\r\n        defense: 0,\r\n        maxHit: 0,\r\n        everyEquipmentCollected: false,\r\n        roundsFought: 0,\r\n        hits: 0,\r\n        equipment: [],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default heroReducer\r\n","import { EquipmentType } from '../../equipment/types'\r\n\r\nexport const CREATE_HERO = 'CREATE_HERO'\r\nexport const BUY_EQUIPMENT = 'BUY_EQUIPMENT'\r\nexport const WIN_GOLD = 'WIN_GOLD'\r\nexport const LOSE_GOLD = 'LOSE_GOLD'\r\nexport const GAME_OVER = 'GAME_OVER'\r\nexport const GAIN_LIFE = 'GAIN_LIFE'\r\nexport const LOSE_LIFE = 'LOSE_LIFE'\r\nexport const EVERY_EQUIPMENT_COLLECTED = 'EVERY_EQUIPMENT_COLLECTED'\r\nexport const INCREMENT_ROUNDS_FOUGHT = 'INCREMENT_ROUNDS_FOUGHT'\r\nexport const INCREMENT_HITS = 'INCREMENT_HITS'\r\n\r\nexport const createHero = (name: string) => ({\r\n  type: CREATE_HERO,\r\n  name,\r\n})\r\n\r\nexport const buyEquipment = (equipment: EquipmentType) => ({\r\n  type: BUY_EQUIPMENT,\r\n  equipment,\r\n})\r\n\r\nexport const winGold = (amount: number) => ({\r\n  type: WIN_GOLD,\r\n  goldAmount: amount,\r\n})\r\n\r\nexport const loseGold = (amount: number) => ({\r\n  type: LOSE_GOLD,\r\n  goldAmount: amount,\r\n})\r\n\r\nexport const gainLife = (amount: number) => ({\r\n  type: GAIN_LIFE,\r\n  lifeAmount: amount,\r\n})\r\n\r\nexport const loseLife = (amount: number) => ({\r\n  type: LOSE_LIFE,\r\n  lifeAmount: amount,\r\n})\r\n\r\nexport const gameOver = () => ({\r\n  type: GAME_OVER,\r\n})\r\n\r\nexport const everyEquipmentCollected = () => ({\r\n  type: EVERY_EQUIPMENT_COLLECTED,\r\n})\r\n\r\nexport const incrementRoundsFought = () => ({\r\n  type: INCREMENT_ROUNDS_FOUGHT,\r\n})\r\n\r\nexport const incrementHits = () => ({\r\n  type: INCREMENT_HITS,\r\n})\r\n","import axios from 'axios'\r\nconst baseUrl: string = '/api/equipment'\r\n\r\nconst getEquipment = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then((res) => {\r\n    return res.data\r\n  })\r\n}\r\n\r\nconst getRandomEquipment = () => {\r\n  const request = axios.get(`${baseUrl}/random`)\r\n  return request.then((res) => {\r\n    return res.data\r\n  })\r\n}\r\n\r\nconst getXEquipment = (amount: number) => {\r\n  const request = axios.get(`${baseUrl}/amount/${amount}`)\r\n  return request.then((res) => {\r\n    return res.data\r\n  })\r\n}\r\n\r\nexport default {\r\n  getEquipment,\r\n  getRandomEquipment,\r\n  getXEquipment,\r\n}\r\n","import { EquipmentType } from '../../equipment/types'\r\nimport equipmentService from '../../../services/equipment'\r\nimport { Dispatch } from 'react'\r\n\r\nexport const FETCH_EQUIPMENT = 'FETCH_EQUIPMENT'\r\n\r\nexport function fetchEquipment() {\r\n  return async (dispatch: Dispatch<any>) => {\r\n    const res = await equipmentService.getEquipment()\r\n    dispatch(fetchEquipmentSuccess(res.equipment.sort(compare)))\r\n    return res\r\n  }\r\n}\r\n\r\nexport const fetchEquipmentSuccess = (equipment: EquipmentType[]) => ({\r\n  type: FETCH_EQUIPMENT,\r\n  equipment,\r\n})\r\n\r\nfunction compare(a: any, b: any) {\r\n  return a.id - b.id\r\n}\r\n","import { FETCH_EQUIPMENT } from '../actions'\r\nimport { EquipmentType } from '../../equipment/types'\r\n\r\ninterface State {\r\n  equipment: EquipmentType[]\r\n}\r\n\r\nconst initialState: State = {\r\n  equipment: [],\r\n}\r\n\r\nexport function equipmentReducer(\r\n  state = initialState,\r\n  action: { type: string; equipment: EquipmentType[] },\r\n) {\r\n  switch (action.type) {\r\n    case FETCH_EQUIPMENT:\r\n      return {\r\n        equipment: action.equipment,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default equipmentReducer\r\n","import { SWITCH_FIGHT_ON } from '../actions'\r\n\r\ninterface State {\r\n  fightOn: boolean\r\n}\r\n\r\nconst initialState: State = {\r\n  fightOn: false,\r\n}\r\n\r\nexport function battlefieldReducer(\r\n  state = initialState,\r\n  action: { type: string },\r\n) {\r\n  switch (action.type) {\r\n    case SWITCH_FIGHT_ON:\r\n      return {\r\n        fightOn: !state.fightOn,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default battlefieldReducer\r\n","export const SWITCH_FIGHT_ON = 'SWITCH_FIGHT_ON'\r\n\r\nexport const switchFightOn = () => ({\r\n  type: SWITCH_FIGHT_ON,\r\n})\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport heroReducer from './hero/reducer'\r\nimport equipmentReducer from './equipment/reducer'\r\nimport battlefieldReducer from './battlefield/reducer'\r\n\r\nconst rootReducer = combineReducers({\r\n  heroReducer: heroReducer,\r\n  equipmentReducer: equipmentReducer,\r\n  battlefieldReducer: battlefieldReducer,\r\n})\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n  return store\r\n}\r\n","import axios from 'axios'\r\n\r\nconst baseUrl: string = '/api/highscores'\r\n\r\nexport interface Highscore {\r\n  name: string\r\n  roundsFought: number\r\n  hits: number\r\n  gold: number\r\n}\r\n\r\nconst getTopTenOrdered = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then((res) => {\r\n    return res.data.sort(compare).slice(0, 10)\r\n  })\r\n}\r\n\r\nconst newHighscore = (highscore: Highscore) => {\r\n  const request = axios.post(baseUrl, highscore)\r\n  return request.then((res) => {\r\n    return res.data\r\n  })\r\n}\r\n\r\nfunction compare(a: Highscore, b: Highscore) {\r\n  return a.roundsFought - b.roundsFought || a.hits - b.hits || b.gold - a.gold\r\n}\r\n\r\nexport default {\r\n  getTopTenOrdered,\r\n  newHighscore,\r\n}\r\n","import React from 'react'\r\nimport highscoreService from '../services/highscores'\r\n\r\ninterface Highscore {\r\n  id: string\r\n  name: string\r\n  roundsFought: number\r\n  hits: number\r\n  gold: number\r\n}\r\n\r\ninterface HighscoresState {\r\n  highscores: Highscore[]\r\n}\r\n\r\nexport class Highscores extends React.Component<any, HighscoresState> {\r\n  constructor(props: HighscoresState) {\r\n    super(props)\r\n    this.state = {\r\n      highscores: [],\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const highscores = await highscoreService.getTopTenOrdered()\r\n    await this.setState({ highscores })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"highscores\">\r\n        <h3>Highscores</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Rounds</th>\r\n              <th>Hits</th>\r\n              <th>Gold</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.state.highscores.map((highscore) => (\r\n              <tr key={highscore.id}>\r\n                {highscore.name.length > 15 ? (\r\n                  <td>{highscore.name.slice(0, 15)}</td>\r\n                ) : (\r\n                  <td>{highscore.name}</td>\r\n                )}\r\n                <td>{highscore.roundsFought}</td>\r\n                <td>{highscore.hits}</td>\r\n                <td>{highscore.gold}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Highscores\r\n","import React from 'react'\r\nimport HighScores from './Highscores'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <h1>DragonLand</h1>\r\n      <div className=\"home-introduction\">\r\n        <span className=\"home-introduction-1\">Create a hero,</span>\r\n        <span className=\"home-introduction-2\">equip yourself,</span>\r\n        <span className=\"home-introduction-3\">slay the dragons!</span>\r\n      </div>\r\n      <div className=\"home-info\">\r\n        <span className=\"home-info-row\">\r\n          Your quest is to vanquish the dragons with as few fought rounds and\r\n          hits as possible.\r\n        </span>\r\n        <span className=\"home-info-row\">\r\n          Green Dragon, the final boss, appears when you have collected all the\r\n          equipment.\r\n        </span>\r\n        <span className=\"home-info-row\">\r\n          Below zero gold or getting crushed by the Green Dragon ends the game.\r\n        </span>\r\n        <span className=\"home-info-row\">Winning a fight: +3 gold</span>\r\n        <span className=\"home-info-row\">Losing a fight: -2 gold</span>\r\n      </div>\r\n      <HighScores />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport { EquipmentType } from '../store/equipment/types'\r\n\r\ninterface EquipmentProps {\r\n  equipment: EquipmentType\r\n}\r\n\r\nconst Equipment = (props: EquipmentProps) => {\r\n  return (\r\n    <div className=\"equipment\">\r\n      <p>{props.equipment.title}</p>\r\n      {props.equipment.stats.map((stat) => {\r\n        return <div key={stat.title}>{stat.title + ': +' + stat.points}</div>\r\n      })}\r\n      <img\r\n        src={props.equipment.imageUrl}\r\n        alt={props.equipment.title}\r\n        className=\"equipment-img\"\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Equipment\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\ninterface HeroStatsProps {\r\n  roundsFought: number\r\n  hits: number\r\n  gold: number\r\n  attack: number\r\n  defense: number\r\n  maxHit: number\r\n}\r\n\r\ninterface HeroStatsState {\r\n  heroReducer: {\r\n    roundsFought: number\r\n    hits: number\r\n    gold: number\r\n    attack: number\r\n    defense: number\r\n    maxHit: number\r\n  }\r\n}\r\n\r\nexport class HeroStats extends React.Component<HeroStatsProps, HeroStatsState> {\r\n  render() {\r\n    const { roundsFought, hits, gold, attack, defense, maxHit } = this\r\n      .props as HeroStatsProps\r\n\r\n    return (\r\n      <div className=\"hero-stats\">\r\n        <p>\r\n          <span className=\"left-column\">Rounds:</span>\r\n          <span className=\"right-column\">{roundsFought}</span>\r\n        </p>\r\n        <p>\r\n          <span className=\"left-column\">Hits:</span>\r\n          <span className=\"right-column\">{hits}</span>\r\n        </p>\r\n        <p>\r\n          <span className=\"left-column\">Gold:</span>\r\n          <span className=\"right-column\">{gold}</span>\r\n        </p>\r\n        <p>\r\n          <span className=\"left-column\">Attack:</span>\r\n          <span className=\"right-column\">{attack}</span>\r\n        </p>\r\n        <p>\r\n          <span className=\"left-column\">Defense:</span>\r\n          <span className=\"right-column\">{defense}</span>\r\n        </p>\r\n        <p>\r\n          <span className=\"left-column\">Max hit:</span>\r\n          <span className=\"right-column\">{maxHit}</span>\r\n        </p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: HeroStatsState) => ({\r\n  gold: state.heroReducer.gold,\r\n  attack: state.heroReducer.attack,\r\n  defense: state.heroReducer.defense,\r\n  maxHit: state.heroReducer.maxHit,\r\n  roundsFought: state.heroReducer.roundsFought,\r\n  hits: state.heroReducer.hits,\r\n})\r\n\r\nexport default connect(mapStateToProps)(HeroStats)\r\n","import React, { Dispatch } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Equipment from './Equipment'\r\nimport HeroStats from './HeroStats'\r\nimport { EquipmentType } from '../store/equipment/types'\r\nimport { createHero } from '../store/hero/actions'\r\n\r\ninterface HeroProps {\r\n  name: string\r\n  equipment: EquipmentType[]\r\n  createHero: (name: string) => void\r\n}\r\n\r\ninterface HeroState {\r\n  heroReducer: {\r\n    name: string\r\n    equipment: EquipmentType[]\r\n  }\r\n}\r\n\r\ninterface DispatchProps {\r\n  createHero: (name: string) => void\r\n}\r\n\r\ntype createHeroParam = React.SyntheticEvent<{ value: string }>\r\n\r\nexport class Hero extends React.Component<HeroProps, any> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this.state = {\r\n      name: '',\r\n      nameRequiredWarning: false,\r\n    }\r\n  }\r\n\r\n  handleNameChange = (event: createHeroParam) => {\r\n    this.setState({\r\n      name: event.currentTarget.value,\r\n    })\r\n  }\r\n\r\n  createHero = () => {\r\n    if (this.state.name.length > 0 && this.state.name.length < 16) {\r\n      this.props.createHero(this.state.name)\r\n    } else {\r\n      this.setState({ nameRequiredWarning: true })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, equipment } = this.props as HeroProps\r\n\r\n    return (\r\n      <div>\r\n        {name.length === 0 ? (\r\n          <div className=\"hero-form\">\r\n            <h3>Create a hero</h3>\r\n            {this.state.nameRequiredWarning ? (\r\n              <div className=\"name-required-warning\">\r\n                <p>Name has to be 1-15 characters</p>\r\n              </div>\r\n            ) : null}\r\n            <label htmlFor=\"input-name\">Name:</label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"input-name\"\r\n              onChange={this.handleNameChange}\r\n              autoFocus\r\n            />\r\n            <button\r\n              className=\"button create-hero-btn\"\r\n              onClick={this.createHero}\r\n            >\r\n              Create\r\n            </button>\r\n          </div>\r\n        ) : null}\r\n\r\n        {name && name.length > 0 ? (\r\n          <div className=\"hero-info\">\r\n            <h3>{name}</h3>\r\n            <HeroStats />\r\n            <h3>Equipments:</h3>\r\n            {equipment && equipment.length > 0 ? (\r\n              <div className=\"grid-container\">\r\n                {equipment.map((equipment) => (\r\n                  <div className=\"grid-item\" key={equipment.id}>\r\n                    <Equipment equipment={equipment} key={equipment.id} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: HeroState) => ({\r\n  name: state.heroReducer.name,\r\n  equipment: state.heroReducer.equipment,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  createHero: (name: string) => dispatch(createHero(name)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Hero)\r\n","import React, { Dispatch } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { EquipmentType } from '../store/equipment/types'\r\nimport { buyEquipment } from '../store/hero/actions'\r\n\r\ninterface EquipmentForSaleProps {\r\n  gold: number\r\n  herosEquipment: EquipmentType[]\r\n  equipment: EquipmentType\r\n  buyEquipment: (equipment: EquipmentType) => void\r\n}\r\n\r\ninterface EquipmentForSaleState {\r\n  heroReducer: {\r\n    gold: number\r\n    equipment: EquipmentType[]\r\n  }\r\n}\r\n\r\ninterface DispatchProps {\r\n  buyEquipment: (equipment: EquipmentType) => void\r\n}\r\n\r\nexport class EquipmentForSale extends React.Component<\r\n  EquipmentForSaleProps,\r\n  EquipmentForSaleState\r\n> {\r\n  buyEquipment = (equipment: EquipmentType) => {\r\n    this.props.buyEquipment(equipment)\r\n  }\r\n\r\n  render() {\r\n    const { gold, herosEquipment } = this.props as EquipmentForSaleProps\r\n    return (\r\n      <div className=\"equipment-for-sale\">\r\n        <p>{this.props.equipment.title}</p>\r\n\r\n        {this.props.equipment.stats.map((stat) => {\r\n          return <div key={stat.title}>{stat.title + ': +' + stat.points}</div>\r\n        })}\r\n\r\n        <p>Price: {this.props.equipment.price}</p>\r\n        <img\r\n          src={this.props.equipment.imageUrl}\r\n          alt={this.props.equipment.title}\r\n          className=\"equipment-img equipment-for-sale-img\"\r\n        />\r\n        {gold >= this.props.equipment.price &&\r\n        !herosEquipment.includes(this.props.equipment) ? (\r\n          <button\r\n            onClick={() => this.buyEquipment(this.props.equipment)}\r\n            className=\"button buy-equipment-btn\"\r\n          >\r\n            Buy\r\n          </button>\r\n        ) : (\r\n          <button disabled className=\"button buy-equipment-btn no-gold\">\r\n            No gold\r\n          </button>\r\n        )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: EquipmentForSaleState) => ({\r\n  gold: state.heroReducer.gold,\r\n  herosEquipment: state.heroReducer.equipment,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  buyEquipment: (equipment: EquipmentType) => dispatch(buyEquipment(equipment)),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EquipmentForSale)\r\n","import React, { Dispatch } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport EquipmentForSale from './EquipmentForSale'\r\nimport { EquipmentType } from '../store/equipment/types'\r\nimport { everyEquipmentCollected } from '../store/hero/actions'\r\nimport { Redirect } from 'react-router'\r\n\r\ninterface EquipmentShopProps {\r\n  equipment: EquipmentType[]\r\n  herosEquipment: EquipmentType[]\r\n  gold: number\r\n  name: string\r\n  everyEquipmentCollected: () => void\r\n}\r\n\r\ninterface EquipmentShopState {\r\n  equipmentReducer: {\r\n    equipment: EquipmentType[]\r\n  }\r\n  heroReducer: {\r\n    gold: number\r\n    equipment: EquipmentType[]\r\n    name: string\r\n  }\r\n}\r\n\r\ninterface DispatchProps {\r\n  everyEquipmentCollected: () => void\r\n}\r\n\r\nclass EquipmentShop extends React.Component<\r\n  EquipmentShopProps,\r\n  EquipmentShopState\r\n> {\r\n  componentDidUpdate() {\r\n    if (this.props.herosEquipment.length === this.props.equipment.length) {\r\n      this.everyEquipmentCollected()\r\n    }\r\n  }\r\n\r\n  everyEquipmentCollected = () => {\r\n    this.props.everyEquipmentCollected()\r\n  }\r\n\r\n  render() {\r\n    const { equipment, herosEquipment, gold, name } = this\r\n      .props as EquipmentShopProps\r\n\r\n    if (!name) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h3>Gold: {gold}</h3>\r\n        {equipment.length > 0 ? (\r\n          <div className=\"grid-container\">\r\n            {equipment.map((equipment) =>\r\n              !herosEquipment.includes(equipment) ? (\r\n                <div className=\"grid-item\" key={equipment.id}>\r\n                  <EquipmentForSale equipment={equipment} />\r\n                </div>\r\n              ) : null,\r\n            )}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: EquipmentShopState) => ({\r\n  equipment: state.equipmentReducer.equipment,\r\n  gold: state.heroReducer.gold,\r\n  herosEquipment: state.heroReducer.equipment,\r\n  name: state.heroReducer.name,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  everyEquipmentCollected: () => dispatch(everyEquipmentCollected()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EquipmentShop)\r\n","import React from 'react'\r\n\r\ninterface LifeBarProps {\r\n  life: number\r\n  fightOn: boolean\r\n  fightOver: boolean\r\n  hitAmount: number\r\n}\r\n\r\ninterface LifeBarState {\r\n  life: number\r\n}\r\n\r\nexport class LifeBar extends React.Component<LifeBarProps, LifeBarState> {\r\n  render() {\r\n    const lifeBarStyles = {\r\n      width: `${this.props.life}%`,\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"lifebar\">\r\n          <div className=\"lifebar-background\">\r\n            <span className=\"lifebar-number\">{this.props.life}</span>\r\n            <div className=\"lifebar-life\" style={lifeBarStyles}></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"battlefield-damage\">\r\n          {this.props.fightOn || this.props.fightOver\r\n            ? -this.props.hitAmount\r\n            : null}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LifeBar\r\n","import React from 'react'\r\nimport HeroStats from './HeroStats'\r\nimport LifeBar from './LifeBar'\r\n\r\ninterface HeroCharacterProps {\r\n  maxHit: number\r\n  life: number\r\n  hitAmount: number\r\n  fightOn: boolean\r\n  fightOver: boolean\r\n  heroWon: boolean\r\n}\r\n\r\nconst HeroCharacter = (props: HeroCharacterProps) => {\r\n  return (\r\n    <div className=\"battlefield-character hero-character\">\r\n      <HeroStats />\r\n      <LifeBar\r\n        life={props.life}\r\n        fightOn={props.fightOn}\r\n        fightOver={props.fightOver}\r\n        hitAmount={props.hitAmount}\r\n      />\r\n      {props.fightOver && !props.fightOn ? (\r\n        props.heroWon ? (\r\n          <img\r\n            src=\"/images/hero.png\"\r\n            alt=\"hero\"\r\n            className=\"battlefield-character-image\"\r\n            id=\"hero-character\"\r\n          />\r\n        ) : (\r\n          <img\r\n            src=\"/images/hero.png\"\r\n            alt=\"hero\"\r\n            className=\"battlefield-character-image invisible-img\"\r\n            id=\"hero-character\"\r\n          />\r\n        )\r\n      ) : (\r\n        <img\r\n          src=\"/images/hero.png\"\r\n          alt=\"hero\"\r\n          className=\"battlefield-character-image\"\r\n          id=\"hero-character\"\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HeroCharacter\r\n","import React from 'react'\r\n\r\ninterface DragonStatsProps {\r\n  maxHit: number\r\n}\r\n\r\nconst DragonStats = (props: DragonStatsProps) => {\r\n  return (\r\n    <div className=\"dragon-stats\">\r\n      <p>\r\n        <span className=\"left-column\">Max hit: </span>\r\n        <span className=\"right-column\">{props.maxHit}</span>\r\n      </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DragonStats\r\n","import React from 'react'\r\nimport DragonStats from './DragonStats'\r\nimport LifeBar from './LifeBar'\r\n\r\ninterface DragonCharacterProps {\r\n  maxHit: number\r\n  life: number\r\n  hitAmount: number\r\n  fightOn: boolean\r\n  fightOver: boolean\r\n  heroWon: boolean\r\n  everyEquipmentCollected: boolean\r\n}\r\n\r\nconst DragonCharacter = (props: DragonCharacterProps) => {\r\n  return (\r\n    <div className=\"battlefield-character dragon-character\">\r\n      <DragonStats maxHit={props.maxHit} />\r\n      <LifeBar\r\n        life={props.life}\r\n        fightOn={props.fightOn}\r\n        fightOver={props.fightOver}\r\n        hitAmount={props.hitAmount}\r\n      />\r\n      {props.fightOver && !props.fightOn ? (\r\n        !props.heroWon ? (\r\n          props.everyEquipmentCollected ? (\r\n            <img\r\n              src=\"/images/dragon-boss.png\"\r\n              alt=\"dragon\"\r\n              className=\"battlefield-character-image\"\r\n              id=\"dragon-character\"\r\n            />\r\n          ) : (\r\n            <img\r\n              src=\"/images/dragon.png\"\r\n              alt=\"dragon\"\r\n              className=\"battlefield-character-image\"\r\n              id=\"dragon-character\"\r\n            />\r\n          )\r\n        ) : (\r\n          <img\r\n            src=\"/images/dragon.png\"\r\n            alt=\"dragon\"\r\n            className=\"battlefield-character-image invisible-img\"\r\n            id=\"dragon-character\"\r\n          />\r\n        )\r\n      ) : props.everyEquipmentCollected ? (\r\n        <img\r\n          src=\"/images/dragon-boss.png\"\r\n          alt=\"dragon\"\r\n          className=\"battlefield-character-image\"\r\n          id=\"dragon-character\"\r\n        />\r\n      ) : (\r\n        <img\r\n          src=\"/images/dragon.png\"\r\n          alt=\"dragon\"\r\n          className=\"battlefield-character-image\"\r\n          id=\"dragon-character\"\r\n        />\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DragonCharacter\r\n","import React, { Dispatch } from 'react'\r\nimport { Redirect } from 'react-router'\r\nimport { connect } from 'react-redux'\r\nimport {\r\n  winGold,\r\n  loseGold,\r\n  gameOver,\r\n  incrementRoundsFought,\r\n  incrementHits,\r\n} from '../store/hero/actions'\r\nimport { switchFightOn } from '../store/battlefield/actions'\r\nimport { EquipmentType } from '../store/equipment/types'\r\nimport HeroCharacter from './HeroCharacter'\r\nimport DragonCharacter from './DragonCharacter'\r\nimport highscores from '../services/highscores'\r\n\r\ninterface BattlefieldProps {\r\n  name: string\r\n  roundsFought: number\r\n  hits: number\r\n  gold: number\r\n  fightOn: boolean\r\n  fightOver: boolean\r\n  heroWon: boolean\r\n  winAmount: number\r\n  loseAmount: number\r\n  herosLife: number\r\n  attack: number\r\n  defense: number\r\n  maxHitForHero: number\r\n  everyEquipmentCollected: boolean\r\n  herosEquipment: EquipmentType[]\r\n  winGold: (amount: number) => void\r\n  loseGold: (amount: number) => void\r\n  gameOver: () => void\r\n  incrementRoundsFought: () => void\r\n  incrementHits: () => void\r\n  switchFightOn: () => void\r\n}\r\n\r\ninterface BattlefieldState {\r\n  fightOn: boolean\r\n  fightOver: boolean\r\n  heroWon: boolean\r\n  winAmount: number\r\n  loseAmount: number\r\n  gameOver: boolean\r\n  gameWin: boolean\r\n  herosHit: number\r\n  herosLife: number\r\n  dragonsLife: number\r\n  dragonsHit: number\r\n  maxHitForDragon: number\r\n  extraHitForGreenDragon: number\r\n  showWinner: boolean\r\n}\r\n\r\ninterface MapStateProps {\r\n  heroReducer: {\r\n    name: string\r\n    roundsFought: number\r\n    hits: number\r\n    gold: number\r\n    life: number\r\n    equipment: EquipmentType[]\r\n    attack: number\r\n    defense: number\r\n    maxHit: number\r\n    everyEquipmentCollected: boolean\r\n  }\r\n}\r\n\r\ninterface DispatchProps {\r\n  winGold: (amount: number) => void\r\n  loseGold: (amount: number) => void\r\n  gameOver: () => void\r\n  incrementRoundsFought: () => void\r\n  incrementHits: () => void\r\n  switchFightOn: () => void\r\n}\r\n\r\nexport class Battlefield extends React.Component<\r\n  BattlefieldProps,\r\n  BattlefieldState\r\n> {\r\n  constructor(props: BattlefieldProps) {\r\n    super(props)\r\n    this.state = {\r\n      fightOn: false,\r\n      fightOver: false,\r\n      heroWon: false,\r\n      winAmount: 3,\r\n      loseAmount: 2,\r\n      gameOver: false,\r\n      gameWin: false,\r\n      herosHit: 0,\r\n      herosLife: 100,\r\n      dragonsLife: 100,\r\n      dragonsHit: 0,\r\n      maxHitForDragon: 30,\r\n      extraHitForGreenDragon: 9,\r\n      showWinner: false,\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Stats for Green Dragon if all equipment have been collected\r\n    if (this.props.everyEquipmentCollected) {\r\n      this.setState({\r\n        maxHitForDragon:\r\n          this.state.maxHitForDragon -\r\n          this.props.defense +\r\n          this.state.extraHitForGreenDragon,\r\n      })\r\n    } else {\r\n      this.setState({\r\n        maxHitForDragon: this.state.maxHitForDragon - this.props.defense,\r\n      })\r\n    }\r\n  }\r\n\r\n  startFight = async () => {\r\n    await this.setState({\r\n      fightOn: true,\r\n      herosLife: this.props.herosLife,\r\n      dragonsLife: 100,\r\n      herosHit: 0,\r\n      dragonsHit: 0,\r\n    })\r\n    this.props.switchFightOn()\r\n    this.props.incrementRoundsFought()\r\n    this.fight()\r\n  }\r\n\r\n  fight = () => {\r\n    if (this.state.herosLife <= 0 || this.state.dragonsLife <= 0) {\r\n      this.battleOver()\r\n    } else {\r\n      this.dealDamage()\r\n    }\r\n  }\r\n\r\n  wait = (ms: number) => new Promise((res) => setTimeout(res, ms))\r\n\r\n  showWinnerForTwoSec = async () => {\r\n    this.setState({ showWinner: true })\r\n    await this.wait(2000)\r\n    this.setState({ showWinner: false })\r\n  }\r\n\r\n  animation = (\r\n    elementId: string,\r\n    transformParams1: string,\r\n    transformParams2: string,\r\n  ) => {\r\n    const element = document.getElementById(elementId)\r\n    if (element) {\r\n      element.animate(\r\n        {\r\n          transform: [transformParams1, transformParams2],\r\n        },\r\n        {\r\n          duration: 500,\r\n          iterations: 1,\r\n        },\r\n      )\r\n    }\r\n  }\r\n\r\n  dealDamage = async () => {\r\n    // Hero hits first after 1 second\r\n    await this.wait(1000)\r\n    this.props.incrementHits()\r\n    this.animation('hero-character', 'translateX(10px)', 'translateX(-10px)')\r\n    const herosHit = Math.floor(Math.random() * (this.props.maxHitForHero + 1))\r\n    let dragonsLife = this.state.dragonsLife - herosHit\r\n    if (dragonsLife < 0) {\r\n      dragonsLife = 0\r\n    }\r\n    this.setState({\r\n      dragonsLife,\r\n      herosHit,\r\n    })\r\n\r\n    // Dragon hits 1 second after Hero\r\n    if (this.state.dragonsLife > 0) {\r\n      await this.wait(1000)\r\n      this.animation(\r\n        'dragon-character',\r\n        'translateY(-10px)',\r\n        'translateY(10px)',\r\n      )\r\n      const dragonsHit = Math.floor(\r\n        Math.random() * (this.state.maxHitForDragon + 1),\r\n      )\r\n      let herosLife = this.state.herosLife - dragonsHit\r\n      if (herosLife < 0) {\r\n        herosLife = 0\r\n      }\r\n      this.setState({\r\n        herosLife,\r\n        dragonsHit,\r\n      })\r\n    }\r\n    this.fight()\r\n  }\r\n\r\n  battleOver = async () => {\r\n    await this.props.switchFightOn()\r\n    let heroWon: boolean\r\n    this.state.herosLife > 0 ? (heroWon = true) : (heroWon = false)\r\n    await this.setState({\r\n      fightOn: false,\r\n      fightOver: true,\r\n      heroWon,\r\n    })\r\n    heroWon ? this.battleWon() : this.battleLost()\r\n  }\r\n\r\n  battleWon = async () => {\r\n    if (this.props.everyEquipmentCollected) {\r\n      await this.newHighscore()\r\n      await this.gameWin()\r\n    } else {\r\n      this.winGold()\r\n      this.showWinnerForTwoSec()\r\n    }\r\n  }\r\n\r\n  newHighscore = async () => {\r\n    const highscore = {\r\n      name: this.props.name,\r\n      roundsFought: this.props.roundsFought,\r\n      hits: this.props.hits,\r\n      gold: this.props.gold,\r\n    }\r\n    await highscores.newHighscore(highscore)\r\n  }\r\n\r\n  winGold = () => {\r\n    this.props.winGold(this.state.winAmount)\r\n  }\r\n\r\n  battleLost = async () => {\r\n    if (\r\n      this.props.gold - this.state.loseAmount < 0 ||\r\n      this.props.everyEquipmentCollected\r\n    ) {\r\n      this.gameOver()\r\n    } else {\r\n      this.loseGold()\r\n      this.showWinnerForTwoSec()\r\n    }\r\n  }\r\n\r\n  loseGold = () => {\r\n    this.props.loseGold(this.state.loseAmount)\r\n  }\r\n\r\n  gameWin = async () => {\r\n    await this.setState({\r\n      gameWin: true,\r\n      gameOver: true,\r\n    })\r\n    await this.props.gameOver()\r\n  }\r\n\r\n  gameOver = async () => {\r\n    await this.setState({\r\n      gameOver: true,\r\n    })\r\n    await this.props.gameOver()\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.name) {\r\n      return <Redirect to=\"/\" />\r\n    }\r\n    if (this.state.gameWin) {\r\n      return <Redirect to=\"/gamewin\" />\r\n    }\r\n    if (this.state.gameOver) {\r\n      return <Redirect to=\"/gameover\" />\r\n    }\r\n    return (\r\n      <div className=\"battlefield\">\r\n        <h1>Battlefield</h1>\r\n\r\n        <div className=\"battlefield-characters\">\r\n          <HeroCharacter\r\n            maxHit={this.props.maxHitForHero}\r\n            life={this.state.herosLife}\r\n            fightOn={this.state.fightOn}\r\n            fightOver={this.state.fightOver}\r\n            hitAmount={this.state.dragonsHit}\r\n            heroWon={this.state.heroWon}\r\n          />\r\n          <DragonCharacter\r\n            maxHit={this.state.maxHitForDragon}\r\n            life={this.state.dragonsLife}\r\n            fightOn={this.state.fightOn}\r\n            fightOver={this.state.fightOver}\r\n            hitAmount={this.state.herosHit}\r\n            heroWon={this.state.heroWon}\r\n            everyEquipmentCollected={this.props.everyEquipmentCollected}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"battlefield-actions\">\r\n          {!this.state.fightOn ? (\r\n            <button\r\n              className=\"button battlefield-fight-button\"\r\n              onClick={this.startFight}\r\n            >\r\n              Fight\r\n            </button>\r\n          ) : null}\r\n          {this.state.fightOver &&\r\n          !this.state.fightOn &&\r\n          this.state.heroWon &&\r\n          this.state.showWinner ? (\r\n            <p>You won!</p>\r\n          ) : null}\r\n          {this.state.fightOver &&\r\n          !this.state.fightOn &&\r\n          !this.state.heroWon &&\r\n          this.state.showWinner ? (\r\n            <p>You lost!</p>\r\n          ) : null}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: MapStateProps) => ({\r\n  name: state.heroReducer.name,\r\n  roundsFought: state.heroReducer.roundsFought,\r\n  hits: state.heroReducer.hits,\r\n  gold: state.heroReducer.gold,\r\n  herosLife: state.heroReducer.life,\r\n  attack: state.heroReducer.attack,\r\n  defense: state.heroReducer.defense,\r\n  maxHitForHero: state.heroReducer.maxHit,\r\n  everyEquipmentCollected: state.heroReducer.everyEquipmentCollected,\r\n  herosEquipment: state.heroReducer.equipment,\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  winGold: (amount: number) => dispatch(winGold(amount)),\r\n  loseGold: (amount: number) => dispatch(loseGold(amount)),\r\n  gameOver: () => dispatch(gameOver()),\r\n  incrementRoundsFought: () => dispatch(incrementRoundsFought()),\r\n  incrementHits: () => dispatch(incrementHits()),\r\n  switchFightOn: () => dispatch(switchFightOn()),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Battlefield)\r\n","import React from 'react'\r\nimport Highscores from './Highscores'\r\n\r\nconst GameOver = () => {\r\n  return (\r\n    <div className=\"gameover\">\r\n      <h3>The dragons took over the land.</h3>\r\n      <h3>Try again with a new hero!</h3>\r\n      <img\r\n        src=\"/images/dragon.png\"\r\n        alt=\"dragon\"\r\n        className=\"gameover-img reverse-img\"\r\n      />\r\n      <img src=\"/images/dragon.png\" alt=\"dragon\" className=\"gameover-img\" />\r\n      <Highscores />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameOver\r\n","import React from 'react'\r\nimport Highscores from './Highscores'\r\n\r\nconst GameOver = () => {\r\n  return (\r\n    <div className=\"gameover\">\r\n      <h3>Congratulations!</h3>\r\n      <h3>\r\n        The dragons have been vanquished and the land is free once and for all!\r\n      </h3>\r\n      <img src=\"/images/hero.png\" alt=\"dragon\" className=\"gameover-img\" />\r\n      <img\r\n        src=\"/images/dragon-boss.png\"\r\n        alt=\"dragon\"\r\n        className=\"gameover-img revert-img\"\r\n      />\r\n      <Highscores />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default GameOver\r\n","import React, { MouseEvent } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom'\r\nimport Home from '../components/Home'\r\nimport Hero from '../components/Hero'\r\nimport EquipmentShop from '../components/EquipmentShop'\r\nimport Battlefield from '../components/Battlefield'\r\nimport GameOver from '../components/GameOver'\r\nimport GameWin from '../components/GameWin'\r\n\r\ninterface RoutesProps {\r\n  name: string\r\n  fightOn: boolean\r\n}\r\n\r\ninterface RoutesState {\r\n  heroReducer: {\r\n    name: string\r\n  }\r\n  battlefieldReducer: {\r\n    fightOn: boolean\r\n  }\r\n}\r\n\r\nclass Routes extends React.Component<RoutesProps, any> {\r\n  // Prevent click if fight is on\r\n  checkIfFightOn = (e: MouseEvent) => {\r\n    if (this.props.fightOn) {\r\n      e.preventDefault()\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name } = this.props as RoutesProps\r\n\r\n    return (\r\n      <Router>\r\n        <header className=\"header\">\r\n          <Link to=\"/\" onClick={this.checkIfFightOn}>\r\n            <img src=\"favicon.png\" alt=\"logo\" className=\"logo\" />\r\n          </Link>\r\n          <div className=\"container\">\r\n            <nav className=\"nav\">\r\n              <ul className=\"nav-ul\">\r\n                <li className=\"nav-li\">\r\n                  <Link\r\n                    to=\"/hero\"\r\n                    className=\"nav-link\"\r\n                    onClick={this.checkIfFightOn}\r\n                  >\r\n                    Hero\r\n                  </Link>\r\n                </li>\r\n                {name ? (\r\n                  <li className=\"nav-li\">\r\n                    <Link\r\n                      to=\"/shop\"\r\n                      className=\"nav-link\"\r\n                      onClick={this.checkIfFightOn}\r\n                    >\r\n                      Shop\r\n                    </Link>\r\n                  </li>\r\n                ) : null}\r\n                {name ? (\r\n                  <li className=\"nav-li\">\r\n                    <Link\r\n                      to=\"/battlefield\"\r\n                      className=\"nav-link\"\r\n                      onClick={this.checkIfFightOn}\r\n                    >\r\n                      Battlefield\r\n                    </Link>\r\n                  </li>\r\n                ) : null}\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </header>\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/hero\" component={Hero} />\r\n            <Route path=\"/shop\" component={EquipmentShop} />\r\n            <Route path=\"/battlefield\" component={Battlefield} />\r\n            <Route path=\"/gameover\" component={GameOver} />\r\n            <Route path=\"/gamewin\" component={GameWin} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RoutesState) => ({\r\n  name: state.heroReducer.name,\r\n  fightOn: state.battlefieldReducer.fightOn,\r\n})\r\n\r\nexport default connect(mapStateToProps)(Routes)\r\n","import React, { Dispatch } from 'react'\nimport Routes from './routes/Routes'\nimport { connect } from 'react-redux'\nimport { fetchEquipment } from './store/equipment/actions'\n\ninterface DispatchProps {\n  fetchEquipment: () => void\n}\n\nclass App extends React.Component<DispatchProps> {\n  componentDidMount() {\n    this.props.fetchEquipment()\n  }\n\n  render() {\n    return <Routes />\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\n  fetchEquipment: () => dispatch(fetchEquipment()),\n})\n\nexport default connect(null, mapDispatchToProps)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport configureStore from './store'\nimport App from './App'\nimport './styles/index.scss'\nimport './styles/header.scss'\nimport './styles/home.scss'\nimport './styles/battlefield.scss'\nimport './styles/responsive.scss'\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}
{"version":3,"sources":["store/hero/actions/index.tsx","store/hero/reducer/index.tsx","services/equipment.tsx","store/equipment/actions/index.tsx","store/equipment/reducer/index.tsx","store/index.tsx","components/Home.tsx","components/Equipment.tsx","components/HeroStats.tsx","components/Hero.tsx","components/EquipmentForSale.tsx","components/EquipmentShop.tsx","components/DragonStats.tsx","components/GameOver.tsx","components/GameWin.tsx","components/LifeBar.tsx","components/Battlefield.tsx","routes/Routes.tsx","App.tsx","index.tsx"],"names":["CREATE_HERO","BUY_EQUIPMENT","WIN_GOLD","LOSE_GOLD","GAME_OVER","GAIN_LIFE","LOSE_LIFE","EVERY_EQUIPMENT_COLLECTED","INCREMENT_ROUNDS_FOUGHT","initialState","name","gold","life","attack","defense","maxHit","everyEquipmentCollected","roundsFought","equipment","heroReducer","state","arguments","length","undefined","action","type","Object","objectSpread","stats","map","stat","title","toLowerCase","points","price","concat","goldAmount","newGoldAmount","lifeAmount","newLifeAmount","baseUrl","services_equipment","getEquipment","axios","get","then","res","data","getRandomEquipment","getXEquipment","amount","FETCH_EQUIPMENT","fetchEquipmentSuccess","equipmentReducer","rootReducer","combineReducers","Home","react_default","a","createElement","className","Equipment","props","key","src","imageUrl","alt","HeroStats","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","value","_this$props","React","Component","connect","Hero","_this","call","handleNameChange","event","setState","currentTarget","createHero","nameRequiredWarning","htmlFor","id","onChange","autoFocus","onClick","components_HeroStats","components_Equipment","dispatch","EquipmentForSale","_getPrototypeOf2","_len","args","Array","_key","buyEquipment","_this2","herosEquipment","includes","disabled","EquipmentShop","_ref","components_EquipmentForSale","DragonStats","GameOver","LifeBar","lifeBarStyles","width","style","fightOn","fightOver","hitAmount","Battlefield","startFight","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","herosLife","dragonsLife","herosHit","dragonsHit","incrementRoundsFought","fight","stop","_callee2","_context2","battleOver","dealDamage","wait","ms","Promise","setTimeout","animation","elementId","transformParams1","transformParams2","element","document","getElementById","animate","transform","duration","iterations","_callee3","_context3","Math","floor","random","maxHitForHero","sent","t0","t1","maxHitForDragon","t2","t3","heroWon","battleWon","battleLost","winGold","gameWin","gameOver","winAmount","loseAmount","loseGold","GameWin","components_GameOver","components_LifeBar","components_DragonStats","Routes","react_router_dom","to","react_router","path","exact","component","App","fetchEquipment","routes_Routes","equipmentService","abrupt","_x","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App"],"mappings":"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","file":"static/js/main.26d69ee5.chunk.js","sourcesContent":["import { EquipmentType } from '../../equipment/types';\r\n\r\nexport const CREATE_HERO = 'CREATE_HERO';\r\nexport const BUY_EQUIPMENT = 'BUY_EQUIPMENT';\r\nexport const WIN_GOLD = 'WIN_GOLD';\r\nexport const LOSE_GOLD = 'LOSE_GOLD';\r\nexport const GAME_OVER = 'GAME_OVER';\r\nexport const GAIN_LIFE = 'GAIN_LIFE';\r\nexport const LOSE_LIFE = 'LOSE_LIFE';\r\nexport const EVERY_EQUIPMENT_COLLECTED = 'EVERY_EQUIPMENT_COLLECTED';\r\nexport const INCREMENT_ROUNDS_FOUGHT = 'INCREMENT_ROUNDS_FOUGHT';\r\n\r\nexport const createHero = (name: string) => {\r\n  return {\r\n    type: CREATE_HERO,\r\n    name\r\n  };\r\n};\r\n\r\nexport const buyEquipment = (equipment: EquipmentType) => {\r\n  return {\r\n    type: BUY_EQUIPMENT,\r\n    equipment\r\n  };\r\n};\r\n\r\nexport const winGold = (amount: number) => {\r\n  return {\r\n    type: WIN_GOLD,\r\n    goldAmount: amount\r\n  };\r\n};\r\n\r\nexport const loseGold = (amount: number) => {\r\n  return {\r\n    type: LOSE_GOLD,\r\n    goldAmount: amount\r\n  };\r\n};\r\n\r\nexport const gainLife = (amount: number) => {\r\n  return {\r\n    type: GAIN_LIFE,\r\n    lifeAmount: amount\r\n  };\r\n};\r\n\r\nexport const loseLife = (amount: number) => {\r\n  return {\r\n    type: LOSE_LIFE,\r\n    lifeAmount: amount\r\n  };\r\n};\r\n\r\nexport const gameOver = () => {\r\n  return {\r\n    type: GAME_OVER\r\n  }\r\n}\r\n\r\nexport const everyEquipmentCollected = () => {\r\n  return {\r\n    type: EVERY_EQUIPMENT_COLLECTED\r\n  }\r\n}\r\n\r\nexport const incrementRoundsFought = () => {\r\n  return {\r\n    type: INCREMENT_ROUNDS_FOUGHT\r\n  }\r\n}","import {\r\n  CREATE_HERO,\r\n  BUY_EQUIPMENT,\r\n  WIN_GOLD,\r\n  LOSE_GOLD,\r\n  GAME_OVER,\r\n  GAIN_LIFE,\r\n  LOSE_LIFE,\r\n  EVERY_EQUIPMENT_COLLECTED,\r\n  INCREMENT_ROUNDS_FOUGHT\r\n} from '../actions';\r\nimport { EquipmentType } from '../../equipment/types';\r\nimport { HeroType } from '../types';\r\n\r\nconst initialState: HeroType = {\r\n  name: '',\r\n  gold: 0,\r\n  life: 0,\r\n  attack: 0,\r\n  defense: 0,\r\n  maxHit: 30,\r\n  everyEquipmentCollected: false,\r\n  roundsFought: 0,\r\n  equipment: []\r\n};\r\n\r\nexport function heroReducer(\r\n  state = initialState,\r\n  action: { type: string, name: string, goldAmount: number, lifeAmount: number, equipment: EquipmentType }) {\r\n    switch (action.type) {\r\n      case CREATE_HERO:\r\n        return {\r\n          ...state,\r\n          gold: 100,\r\n          life: 100,\r\n          name: action.name\r\n        };\r\n      case BUY_EQUIPMENT:\r\n        let attack = 0;\r\n        let defense = 0;\r\n        action.equipment.stats.map(stat => {\r\n          if (stat.title.toLowerCase() === 'attack') {\r\n            attack = stat.points\r\n          } else if (stat.title.toLowerCase() === 'defense') {\r\n            defense = stat.points\r\n          }\r\n          return null;\r\n        });\r\n        return {\r\n          ...state,\r\n          gold: state.gold - action.equipment.price,\r\n          attack: state.attack + attack,\r\n          defense: state.defense + defense,\r\n          maxHit: state.maxHit + attack,\r\n          equipment: state.equipment.concat(action.equipment)\r\n        };\r\n      case WIN_GOLD:\r\n        return {\r\n          ...state,\r\n          gold: state.gold + action.goldAmount\r\n        };\r\n      case LOSE_GOLD:\r\n        let newGoldAmount = state.gold - action.goldAmount;\r\n        if (newGoldAmount < 0) {\r\n          newGoldAmount = 0;\r\n        }\r\n        return {\r\n          ...state,\r\n          gold: newGoldAmount\r\n        };\r\n      case GAIN_LIFE:\r\n        return {\r\n          ...state,\r\n          life: state.life + action.lifeAmount\r\n        };\r\n      case LOSE_LIFE:\r\n        let newLifeAmount = state.life - action.lifeAmount;\r\n        if (newLifeAmount < 0) {\r\n          newLifeAmount = 0;\r\n        }\r\n        return {\r\n          ...state,\r\n          life: newLifeAmount\r\n        };\r\n      case INCREMENT_ROUNDS_FOUGHT:\r\n        return {\r\n          ...state,\r\n          roundsFought: state.roundsFought + 1\r\n        }\r\n      case EVERY_EQUIPMENT_COLLECTED:\r\n        return {\r\n          ...state,\r\n          everyEquipmentCollected: true\r\n        }\r\n      case GAME_OVER:\r\n        return {\r\n          name: '',\r\n          gold: 0,\r\n          life: 0,\r\n          attack: 0,\r\n          defense: 0,\r\n          maxHit: 30,\r\n          everyEquipmentCollected: false,\r\n          roundsFought: 0,\r\n          equipment: []\r\n        };\r\n      default:\r\n        return state;\r\n    };\r\n};\r\n\r\nexport default heroReducer;","import axios from 'axios';\r\nconst baseUrl: string = '/api/equipment';\r\n\r\nconst getEquipment = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then(res => { return res.data });\r\n}\r\n\r\nconst getRandomEquipment = () => {\r\n  const request = axios.get(`${baseUrl}/random`);\r\n  return request.then(res => { return res.data });\r\n}\r\n\r\nconst getXEquipment = (amount: number) => {\r\n  const request = axios.get(`${baseUrl}/amount/${amount}`);\r\n  return request.then(res => { return res.data });\r\n}\r\n\r\nexport default {\r\n  getEquipment,\r\n  getRandomEquipment,\r\n  getXEquipment\r\n}","import { EquipmentType } from '../../equipment/types';\r\nimport equipmentService from '../../../services/equipment';\r\nimport { Dispatch } from 'react';\r\n\r\nexport const FETCH_EQUIPMENT = 'FETCH_EQUIPMENT';\r\n\r\nexport function fetchEquipment() {\r\n  return async (dispatch: Dispatch<any>) => {\r\n    const res = await equipmentService.getEquipment();\r\n    dispatch(fetchEquipmentSuccess(res.equipment));\r\n    return res;\r\n  }\r\n};\r\n\r\nexport const fetchEquipmentSuccess = (equipment: EquipmentType[]) => ({\r\n  type: FETCH_EQUIPMENT,\r\n  equipment\r\n});","import {\r\n  FETCH_EQUIPMENT\r\n} from '../actions';\r\nimport { EquipmentType } from '../../equipment/types';\r\n\r\ninterface State {\r\n  equipment?: EquipmentType[];\r\n}\r\n\r\nconst initialState: State = {\r\n  equipment: []\r\n};\r\n\r\nexport function equipmentReducer(\r\n  state = initialState,\r\n  action: { type: string, equipment?: EquipmentType[] }) {\r\n    switch (action.type) {\r\n      case FETCH_EQUIPMENT:\r\n        return {\r\n          equipment: action.equipment\r\n        };\r\n      default:\r\n        return state;\r\n    };\r\n};\r\n\r\nexport default equipmentReducer;","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport heroReducer from './hero/reducer';\r\nimport equipmentReducer from './equipment/reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  heroReducer: heroReducer,\r\n  equipmentReducer: equipmentReducer\r\n});\r\n\r\nexport type AppState = ReturnType<typeof rootReducer>;\r\n\r\nexport default function configureStore() {\r\n  const store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n  );\r\n\r\n  return store;\r\n};","import React from 'react';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"home\">\r\n      <h1>DragonLand</h1>\r\n      <div className=\"home-instuctions\">\r\n        <span className=\"home-instruction-1\">Create a hero,</span>\r\n        <span className=\"home-instruction-2\">equip yourself,</span>\r\n        <span className=\"home-instruction-3\">slay the dragons!</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { EquipmentType } from '../store/equipment/types';\r\n\r\ninterface EquipmentProps {\r\n  equipment: EquipmentType;\r\n}\r\n\r\nconst Equipment = (props: EquipmentProps) => {\r\n  return (\r\n    <div className=\"equipment\">\r\n      <p>{props.equipment.title}</p>\r\n      {props.equipment.stats.map(stat => {\r\n        return (\r\n          <div key={stat.title}>\r\n            {stat.title + \": +\" + stat.points}\r\n          </div>\r\n        );\r\n      })}\r\n      <img src={props.equipment.imageUrl} alt={props.equipment.title} className=\"equipment-img\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Equipment;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\ninterface HeroStatsProps {\r\n  gold: number;\r\n  attack: number;\r\n  defense: number;\r\n  maxHit: number;\r\n  roundsFought: number;\r\n}\r\n\r\ninterface HeroStatsState {\r\n  heroReducer: {\r\n    gold: number;\r\n    attack: number;\r\n    defense: number;\r\n    maxHit: number;\r\n    roundsFought: number;\r\n  }\r\n}\r\n\r\nexport class HeroStats extends React.Component<HeroStatsProps, HeroStatsState> {\r\n  render() {\r\n    let { attack, defense, maxHit, roundsFought, gold } = this.props;\r\n\r\n    return (\r\n      <div className=\"hero-stats\">\r\n        <p>\r\n          <span className=\"left-column\">Rounds fought:</span>\r\n          <span className=\"right-column\">{roundsFought}</span>\r\n        </p>\r\n        <p>\r\n          <span className=\"left-column\">Gold:</span>\r\n          <span className=\"right-column\">{gold}</span>\r\n        </p>\r\n        <p>\r\n          <span className=\"left-column\">Attack:</span>\r\n          <span className=\"right-column\">{attack}</span>\r\n        </p>\r\n        <p>\r\n          <span className=\"left-column\">Defense:</span>\r\n          <span className=\"right-column\">{defense}</span>\r\n        </p>\r\n        <p>\r\n          <span className=\"left-column\">Max hit:</span>\r\n          <span className=\"right-column\">{maxHit}</span>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: HeroStatsState) => ({\r\n  gold: state.heroReducer.gold,\r\n  attack: state.heroReducer.attack,\r\n  defense: state.heroReducer.defense,\r\n  maxHit: state.heroReducer.maxHit,\r\n  roundsFought: state.heroReducer.roundsFought\r\n});\r\n\r\nexport default connect(mapStateToProps)(HeroStats);","import React, { Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Equipment from './Equipment';\r\nimport HeroStats from './HeroStats';\r\nimport { EquipmentType } from '../store/equipment/types';\r\nimport { createHero } from '../store/hero/actions';\r\n\r\ninterface HeroProps {\r\n  name: string;\r\n  equipment: EquipmentType[];\r\n  createHero: (name: string) => void;\r\n}\r\n\r\ninterface HeroState {\r\n  heroReducer: {\r\n    name: string;\r\n    equipment: EquipmentType[]\r\n  }\r\n}\r\n\r\ninterface DispatchProps {\r\n  createHero: (name: string) => void;\r\n}\r\n\r\ntype createHeroParam = React.SyntheticEvent<{ value: string }>;\r\n\r\nexport class Hero extends React.Component<HeroProps, any> {\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = {\r\n      name: '',\r\n      nameRequiredWarning: false\r\n    }\r\n  }\r\n\r\n  handleNameChange = (event: createHeroParam) => {\r\n    this.setState({\r\n      name: event.currentTarget.value\r\n    })\r\n  }\r\n\r\n  createHero = () => {\r\n    if (this.state.name.length > 0) {\r\n      this.props.createHero(this.state.name);\r\n    } else {\r\n      this.setState({ nameRequiredWarning: true });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { name, equipment } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        {name.length === 0 ?\r\n          <div className=\"hero-form\">\r\n            <h3>Create a hero</h3>\r\n            {this.state.nameRequiredWarning\r\n            ? <div className=\"name-required-warning\"><p>Please enter name</p></div>\r\n            : null}\r\n            <label htmlFor=\"input-name\">Name:</label>\r\n            <input type=\"text\" id=\"input-name\" onChange={this.handleNameChange} autoFocus />\r\n            <button className=\"button create-hero-btn\" onClick={this.createHero}>Create</button>\r\n          </div>\r\n        : null}\r\n\r\n        {name && name.length > 0\r\n        ?\r\n          <div className=\"hero-info\">\r\n            <h3>Your hero:</h3>\r\n            <p>Name: {name}</p>\r\n            <HeroStats />\r\n            <h3>Equipments:</h3>\r\n            {equipment && equipment.length > 0\r\n            ?\r\n              <div className=\"grid-container\">\r\n                {equipment.map(equipment => (\r\n                  <div className=\"grid-item\" key={equipment.id}>\r\n                    <Equipment equipment={equipment} key={equipment.id} />\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            : null}\r\n          </div>\r\n        : null}\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: HeroState) => ({\r\n  name: state.heroReducer.name,\r\n  equipment: state.heroReducer.equipment\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  createHero: (name: string) => dispatch(createHero(name))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Hero);","import React, { Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { EquipmentType } from '../store/equipment/types';\r\nimport { buyEquipment } from '../store/hero/actions';\r\n\r\ninterface EquipmentForSaleProps {\r\n  gold: number;\r\n  herosEquipment: EquipmentType[];\r\n  equipment: EquipmentType;\r\n  buyEquipment: (equipment: EquipmentType) => void;\r\n}\r\n\r\ninterface EquipmentForSaleState {\r\n  heroReducer: {\r\n    gold: number;\r\n    equipment: EquipmentType[];\r\n  }\r\n}\r\n\r\ninterface DispatchProps {\r\n  buyEquipment: (equipment: EquipmentType) => void;\r\n}\r\n\r\nexport class EquipmentForSale extends React.Component<EquipmentForSaleProps, EquipmentForSaleState> {\r\n  buyEquipment = (equipment: EquipmentType) => {\r\n    this.props.buyEquipment(equipment);\r\n  }\r\n\r\n  render() {\r\n    const { gold, herosEquipment } = this.props;\r\n    return (\r\n      <div className=\"equipment-for-sale\">\r\n        <p>{this.props.equipment.title}</p>\r\n\r\n        {this.props.equipment.stats.map(stat => {\r\n          return (\r\n            <div key={stat.title}>\r\n              {stat.title + \": +\" + stat.points}\r\n            </div>\r\n          );\r\n        })}\r\n\r\n        <p>Price: {this.props.equipment.price}</p>\r\n        <img src={this.props.equipment.imageUrl} alt={this.props.equipment.title} className=\"equipment-img equipment-for-sale-img\" />\r\n        {gold >= this.props.equipment.price && !herosEquipment.includes(this.props.equipment)\r\n        ?\r\n          <button onClick={() => this.buyEquipment(this.props.equipment)} className=\"button buy-equipment-btn\">Buy</button>\r\n        :\r\n          herosEquipment.includes(this.props.equipment)\r\n          ? <button disabled className=\"button buy-equipment-btn owned\">Owned</button>\r\n          : <button disabled className=\"button buy-equipment-btn no-gold\">No gold</button>\r\n        }\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nconst mapStateToProps = (state: EquipmentForSaleState) => ({\r\n  gold: state.heroReducer.gold,\r\n  herosEquipment: state.heroReducer.equipment\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  buyEquipment: (equipment: EquipmentType) => dispatch(buyEquipment(equipment))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EquipmentForSale);","import React, { Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport EquipmentForSale from './EquipmentForSale';\r\nimport { EquipmentType } from '../store/equipment/types';\r\nimport { everyEquipmentCollected } from '../store/hero/actions';\r\n\r\ninterface EquipmentShopProps {\r\n  equipment: EquipmentType[];\r\n  herosEquipment: EquipmentType[];\r\n  gold: number;\r\n  everyEquipmentCollected: () => void;\r\n}\r\n\r\ninterface EquipmentShopState {\r\n  equipmentReducer: {\r\n    equipment: EquipmentType[];\r\n  },\r\n  heroReducer: {\r\n    gold: number;\r\n    equipment: EquipmentType[];\r\n  }\r\n}\r\n\r\ninterface DispatchProps {\r\n  everyEquipmentCollected: () => void;\r\n}\r\n\r\nclass EquipmentShop extends React.Component<EquipmentShopProps, EquipmentShopState> {\r\n\r\n  componentDidUpdate() {\r\n    if (this.props.herosEquipment.length === this.props.equipment.length) {\r\n      this.everyEquipmentCollected();\r\n    }\r\n  }\r\n\r\n  everyEquipmentCollected = () => {\r\n    this.props.everyEquipmentCollected();\r\n  }\r\n\r\n  render() {\r\n    const { equipment, herosEquipment, gold } = this.props as EquipmentShopProps;\r\n    return (\r\n      <div>\r\n        <h3>Gold: {gold}</h3>\r\n        {equipment.length > 0\r\n        ?\r\n          <div className=\"grid-container\">\r\n            {equipment.map(equipment => (\r\n              !herosEquipment.includes(equipment)\r\n              ?\r\n                <div className=\"grid-item\" key={equipment.id}>\r\n                  <EquipmentForSale equipment={equipment} />\r\n                </div>\r\n              : null\r\n            ))}\r\n          </div>\r\n        : null}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: EquipmentShopState) => ({\r\n  equipment: state.equipmentReducer.equipment,\r\n  gold: state.heroReducer.gold,\r\n  herosEquipment: state.heroReducer.equipment\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  everyEquipmentCollected: () => dispatch(everyEquipmentCollected())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EquipmentShop);","import React from 'react';\r\n\r\nconst DragonStats = (props: any) => {\r\n\r\n  return (\r\n    <div className=\"dragon-stats\">\r\n      <p>\r\n        <span className=\"left-column\">Max hit: </span>\r\n        <span className=\"right-column\">{props.maxHit}</span>\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DragonStats;","import React from 'react';\r\n\r\nconst GameOver = () => {\r\n  return (\r\n    <div className=\"gameover\">\r\n      <h3>The dragons took over the land.</h3>\r\n      <h3>Try again with a new hero!</h3>\r\n      <img src=\"/images/dragon.png\" alt=\"dragon\" className=\"gameover-dragon reverse-img\" />\r\n      <img src=\"/images/dragon.png\" alt=\"dragon\" className=\"gameover-dragon\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameOver;","import React from 'react';\r\n\r\nconst GameOver = () => {\r\n  return (\r\n    <div className=\"gameover\">\r\n      <h3>Congratulations!</h3>\r\n      <h3>The dragons have been vanquished and the land is free once and for all!</h3>\r\n      <img src=\"/images/hero.png\" alt=\"dragon\" className=\"gameover-img reverse-img\" />\r\n      <img src=\"/images/dragon-boss.png\" alt=\"dragon\" className=\"gameover-img revert-img\" />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GameOver;","import React from 'react';\r\n\r\ninterface LifeBarProps {\r\n  life: number;\r\n  fightOn: boolean;\r\n  fightOver: boolean;\r\n  hitAmount: number;\r\n}\r\n\r\ninterface LifeBarState {\r\n  life: number;\r\n}\r\n\r\nexport class LifeBar extends React.Component<LifeBarProps, LifeBarState> {\r\n  constructor(props: LifeBarProps) {\r\n    super(props);\r\n    this.state = {\r\n      life: 0\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ life: this.props.life });\r\n  }\r\n\r\n  render() {\r\n    const lifeBarStyles = {\r\n      width: `${this.props.life}%`\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"lifebar\">\r\n          <div className=\"lifebar-background\">\r\n            <span className=\"lifebar-number\">{this.props.life}</span>\r\n            <div className=\"lifebar-life\" style={lifeBarStyles}></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"battlefield-damage\">\r\n          {this.props.fightOn || this.props.fightOver\r\n          ? -this.props.hitAmount\r\n          : null}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default LifeBar;","import React, { Dispatch } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { winGold, loseGold, gameOver, incrementRoundsFought } from '../store/hero/actions';\r\nimport { EquipmentType } from '../store/equipment/types';\r\nimport HeroStats from './HeroStats';\r\nimport DragonStats from './DragonStats';\r\nimport GameOver from './GameOver';\r\nimport GameWin from './GameWin';\r\nimport LifeBar from './LifeBar';\r\n\r\ninterface BattlefieldProps {\r\n  fightOn: boolean;\r\n  fightOver: boolean;\r\n  heroWon: boolean;\r\n  winAmount: number;\r\n  loseAmount: number;\r\n  gold: number;\r\n  herosLife: number;\r\n  attack: number;\r\n  defense: number;\r\n  maxHitForHero: number;\r\n  everyEquipmentCollected: boolean;\r\n  herosEquipment: EquipmentType[];\r\n  winGold: (amount: number) => void;\r\n  loseGold: (amount: number) => void;\r\n  gameOver: () => void;\r\n  incrementRoundsFought: () => void;\r\n}\r\n\r\ninterface BattlefieldState {\r\n  fightOn: boolean;\r\n  fightOver: boolean;\r\n  heroWon: boolean;\r\n  winAmount: number;\r\n  loseAmount: number;\r\n  gameOver: boolean;\r\n  gameWin: boolean;\r\n  herosHit: number;\r\n  herosLife: number;\r\n  dragonsLife: number;\r\n  dragonsHit: number;\r\n  maxHitForDragon: number;\r\n}\r\n\r\ninterface MapStateProps {\r\n  heroReducer: {\r\n    life: number;\r\n    equipment: EquipmentType[];\r\n    attack: number;\r\n    defense: number;\r\n    maxHit: number;\r\n    everyEquipmentCollected: boolean;\r\n  }\r\n}\r\n\r\ninterface DispatchProps {\r\n  winGold: (amount: number) => void;\r\n  loseGold: (amount: number) => void;\r\n  gameOver: () => void;\r\n  incrementRoundsFought: () => void;\r\n}\r\n\r\nexport class Battlefield extends React.Component<BattlefieldProps, BattlefieldState> {\r\n  constructor(props: BattlefieldProps) {\r\n    super(props);\r\n    this.state = {\r\n      fightOn: false,\r\n      fightOver: false,\r\n      heroWon: false,\r\n      winAmount: 3,\r\n      loseAmount: 2,\r\n      gameOver: false,\r\n      gameWin: false,\r\n      herosHit: 0,\r\n      herosLife: 100,\r\n      dragonsLife: 100,\r\n      dragonsHit: 0,\r\n      maxHitForDragon: 40\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.everyEquipmentCollected) {\r\n      this.setState({\r\n        maxHitForDragon: this.state.maxHitForDragon - this.props.defense + 20\r\n      });\r\n    } else {\r\n      this.setState({\r\n        maxHitForDragon: this.state.maxHitForDragon - this.props.defense\r\n      });\r\n    }\r\n  }\r\n\r\n  startFight = async () => {\r\n    await this.setState({\r\n      fightOn: true,\r\n      herosLife: this.props.herosLife,\r\n      dragonsLife: 100,\r\n      herosHit: 0,\r\n      dragonsHit: 0\r\n    });\r\n    this.props.incrementRoundsFought();\r\n    this.fight();\r\n  }\r\n\r\n  fight = async () => {\r\n    if (this.state.herosLife <= 0 || this.state.dragonsLife <= 0) {\r\n      await this.battleOver();\r\n    } else {\r\n      await this.dealDamage();\r\n    }\r\n  }\r\n\r\n  wait = (ms: number) => new Promise(res => setTimeout(res, ms));\r\n\r\n  animation = (elementId: string, transformParams1: string, transformParams2: string) => {\r\n    const element = document.getElementById(elementId);\r\n    if (element) {\r\n      element.animate({\r\n          transform: [transformParams1, transformParams2],\r\n      }, {\r\n          duration: 500,\r\n          iterations: 1,\r\n      });\r\n    }\r\n  }\r\n\r\n  dealDamage = async () => {\r\n    // Hero hits first after 1 second\r\n    await this.wait(1000);\r\n    this.animation('hero-character', 'translateX(10px)', 'translateX(-10px)');\r\n    const herosHit = await Math.floor(Math.random() * (this.props.maxHitForHero + 1));\r\n    let dragonsLife = await this.state.dragonsLife - herosHit;\r\n    if (dragonsLife < 0) {\r\n      dragonsLife = 0;\r\n    }\r\n    await this.setState({\r\n      dragonsLife,\r\n      herosHit\r\n    });\r\n\r\n    // Dragon hits 1 second after Hero\r\n    if (this.state.dragonsLife > 0) {\r\n      await this.wait(1000);\r\n      this.animation('dragon-character', 'translateY(-10px)', 'translateY(10px)');\r\n      const dragonsHit = await Math.floor(Math.random() * (this.state.maxHitForDragon + 1));\r\n      let herosLife = await this.state.herosLife - dragonsHit;\r\n      if (herosLife < 0) {\r\n        herosLife = 0;\r\n      }\r\n      await this.setState({\r\n        herosLife,\r\n        dragonsHit\r\n      });\r\n    }\r\n    this.fight();\r\n  }\r\n\r\n  battleOver = () => {\r\n    let heroWon: boolean;\r\n    this.state.herosLife > 0 ? heroWon = true : heroWon = false;\r\n    this.setState({\r\n      fightOn: false,\r\n      fightOver: true,\r\n      heroWon\r\n    });\r\n    heroWon ? this.battleWon() : this.battleLost();\r\n  }\r\n\r\n  battleWon = () => {\r\n    this.winGold();\r\n    if (this.props.everyEquipmentCollected) {\r\n      this.setState({ gameWin: true });\r\n      this.gameOver();\r\n    }\r\n  }\r\n\r\n  winGold = () => {\r\n    this.props.winGold(this.state.winAmount);\r\n  }\r\n\r\n  battleLost = () => {\r\n    if ((this.props.gold - this.state.loseAmount <= 0) || this.props.everyEquipmentCollected) {\r\n      this.gameOver();\r\n    } else {\r\n      this.loseGold();\r\n    }\r\n  }\r\n\r\n  loseGold = () => {\r\n    this.props.loseGold(this.state.loseAmount);\r\n  }\r\n\r\n  gameOver = () => {\r\n    this.setState({\r\n      gameOver: true\r\n    });\r\n    this.props.gameOver();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.gameWin\r\n        ?\r\n          <GameWin />\r\n        :\r\n          this.state.gameOver\r\n          ? \r\n            <GameOver />\r\n          :\r\n            <div className=\"battlefield\">\r\n              <h1>Battlefield</h1>\r\n\r\n              <div className=\"battlefield-characters\">\r\n                <div className=\"battlefield-character hero-character\">\r\n                  <div className=\"battlefield-hero-stats\">\r\n                    <HeroStats />\r\n                  </div>\r\n                  <LifeBar\r\n                    life={this.state.herosLife}\r\n                    fightOn={this.state.fightOn}\r\n                    fightOver={this.state.fightOver}\r\n                    hitAmount={this.state.dragonsHit}\r\n                  />\r\n                  <img src=\"/images/hero.png\" alt=\"hero\" className=\"battlefield-character-image\" id=\"hero-character\" />\r\n                </div>\r\n                <div className=\"battlefield-character dragon-character\">\r\n                  <div className=\"battlefied-dragon-stats\">\r\n                    <DragonStats\r\n                      maxHit={this.state.maxHitForDragon}\r\n                    />\r\n                  </div>\r\n                  <LifeBar\r\n                    life={this.state.dragonsLife}\r\n                    fightOn={this.state.fightOn}\r\n                    fightOver={this.state.fightOver}\r\n                    hitAmount={this.state.herosHit}\r\n                  />\r\n                  {this.props.everyEquipmentCollected\r\n                  ?\r\n                    <img src=\"/images/dragon-boss.png\" alt=\"dragon\" className=\"battlefield-character-image\" id=\"dragon-character\" />\r\n                  :\r\n                    <img src=\"/images/dragon.png\" alt=\"dragon\" className=\"battlefield-character-image\" id=\"dragon-character\" />\r\n                  }\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"battlefield-actions\">\r\n                {this.state.fightOn\r\n                ?\r\n                  <button className=\"button battlefield-fight-button disabled\" disabled>Fight</button>\r\n                :\r\n                  <button className=\"button battlefield-fight-button\" onClick={this.startFight}>Fight</button>\r\n                }\r\n                {this.state.fightOver && !this.state.fightOn  && this.state.heroWon\r\n                ? <p>You won!</p>\r\n                : null}\r\n                {this.state.fightOver && !this.state.fightOn  && !this.state.heroWon\r\n                ? <p>You lost!</p>\r\n                : null}\r\n              </div>\r\n            </div>\r\n          }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: MapStateProps) => ({\r\n  herosLife: state.heroReducer.life,\r\n  attack: state.heroReducer.attack,\r\n  defense: state.heroReducer.defense,\r\n  maxHitForHero: state.heroReducer.maxHit,\r\n  everyEquipmentCollected: state.heroReducer.everyEquipmentCollected,\r\n  herosEquipment: state.heroReducer.equipment\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\r\n  winGold: (amount: number) => dispatch(winGold(amount)),\r\n  loseGold: (amount: number) => dispatch(loseGold(amount)),\r\n  gameOver: () => dispatch(gameOver()),\r\n  incrementRoundsFought: () => dispatch(incrementRoundsFought())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Battlefield);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Route, Link, BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport Home from '../components/Home';\r\nimport Hero from '../components/Hero';\r\nimport EquipmentShop from '../components/EquipmentShop';\r\nimport Battlefield from '../components/Battlefield';\r\n\r\ninterface RoutesProps {\r\n  name: string,\r\n}\r\n\r\ninterface RoutesState {\r\n  heroReducer: {\r\n    name: string\r\n  }\r\n}\r\n\r\nclass Routes extends React.Component<RoutesProps> {\r\n  render() {\r\n\r\n    const { name } = this.props;\r\n    return (\r\n      <Router>\r\n        <header className=\"header\">\r\n          <Link to=\"/\"><img src=\"favicon.png\" alt=\"logo\" className=\"logo\" /></Link>\r\n          <div className=\"container\">\r\n            <nav className=\"nav\">\r\n              <ul className=\"nav-ul\">\r\n                <li className=\"nav-li\"><Link to=\"/hero\" className=\"nav-link\">Hero</Link></li>\r\n                {name ? <li className=\"nav-li\"><Link to=\"/shop\" className=\"nav-link\">Shop</Link></li> : null}\r\n                {name ? <li className=\"nav-li\"><Link to=\"/battlefield\" className=\"nav-link\">Battlefield</Link></li> : null}\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n        </header>\r\n        <div className=\"content\">\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path=\"/hero\" component={Hero} />\r\n            <Route path=\"/shop\" component={EquipmentShop} />\r\n            <Route path=\"/battlefield\" component={Battlefield} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state: RoutesState) => ({\r\n  name: state.heroReducer.name\r\n});\r\n\r\nexport default connect(mapStateToProps)(Routes);","import React, { Dispatch } from 'react';\nimport Routes from './routes/Routes';\nimport { connect } from 'react-redux';\nimport { fetchEquipment } from './store/equipment/actions';\n\ninterface DispatchProps {\n  fetchEquipment: () => void;\n}\n\nclass App extends React.Component<DispatchProps> {\n  componentDidMount() {\n    this.props.fetchEquipment();\n  }\n\n  render() {\n    return (\n      <Routes />\n    );\n  };\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch<any>): DispatchProps => ({\n  fetchEquipment: () => dispatch(fetchEquipment())\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport App from './App';\nimport './styles/index.scss';\nimport './styles/responsive.scss';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}